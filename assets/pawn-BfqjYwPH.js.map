{"version":3,"file":"pawn-BfqjYwPH.js","sources":["../src/pieces/pawn.ts"],"sourcesContent":["// src/pieces/pawn.ts\nimport { Piece, PieceColor, PieceType, BoardInterface } from '../piece';\n\nexport class Pawn extends Piece {\n  public hasMoved: boolean = false;\n\n  constructor(color: PieceColor) {\n    super(color, PieceType.PAWN);\n  }\n\n  isValidMove(\n    fromX: number,\n    fromY: number,\n    toX: number,\n    toY: number,\n    board: BoardInterface,\n  ): boolean {\n    const direction = this.color === PieceColor.WHITE ? 1 : -1;\n    const startRow = this.color === PieceColor.WHITE ? 1 : 6;\n    const distanceY = (toY - fromY) * direction;\n    const distanceX = Math.abs(toX - fromX);\n\n    if (distanceX === 0 && distanceY === 1 && !board.getPiece(toX, toY)) {\n      if (\n        ((this.color === PieceColor.WHITE && toY === 7) ||\n          (this.color === PieceColor.BLACK && toY === 0)) &&\n        board.getPiece(fromX, fromY)?.type === PieceType.PAWN\n      ) {\n        this.handlePromotion(toX, toY, board);\n      }\n      return true;\n    }\n\n    if (\n      distanceX === 0 &&\n      distanceY === 2 &&\n      fromY === startRow &&\n      !board.getPiece(toX, toY) &&\n      !board.getPiece(fromX, fromY + direction)\n    ) {\n      board.updateEnPassantTarget(fromX, fromY, toX, toY, this);\n      return true;\n    }\n\n    if (distanceX === 1 && distanceY === 1) {\n      if (board.getPiece(toX, toY) && this.canCapture(toX, toY, board)) {\n        if (\n          (this.color === PieceColor.WHITE && toY === 7) ||\n          (this.color === PieceColor.BLACK &&\n            toY === 0 &&\n            board.getPiece(fromX, fromY)?.type === PieceType.PAWN)\n        ) {\n          this.handlePromotion(toX, toY, board);\n        }\n        return true;\n      }\n\n      if (board.isEnPassantMove(fromX, fromY, toX, toY)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  handlePromotion(toX: number, toY: number, board: BoardInterface): void {\n    const promotionDialog = document.getElementById(\n      'promotionDialog',\n    ) as HTMLDivElement;\n\n    if (promotionDialog) {\n      promotionDialog.style.display = 'block';\n\n      // DÃ©finir la fonction de promotion en capturant le contexte (x, y)\n      window.promote = (pieceType: string) => {\n        promotionDialog.style.display = 'none';\n        board.promotePawn(toX, toY, pieceType);\n      };\n    }\n  }\n}\n"],"names":["Pawn","Piece","color","PieceType","fromX","fromY","toX","toY","board","direction","PieceColor","startRow","distanceY","distanceX","promotionDialog","pieceType"],"mappings":"0DAGO,MAAMA,UAAaC,CAAM,CACvB,SAAoB,GAE3B,YAAYC,EAAmB,CACvB,MAAAA,EAAOC,EAAU,IAAI,CAC7B,CAEA,YACEC,EACAC,EACAC,EACAC,EACAC,EACS,CACT,MAAMC,EAAY,KAAK,QAAUC,EAAW,MAAQ,EAAI,GAClDC,EAAW,KAAK,QAAUD,EAAW,MAAQ,EAAI,EACjDE,GAAaL,EAAMF,GAASI,EAC5BI,EAAY,KAAK,IAAIP,EAAMF,CAAK,EAElC,GAAAS,IAAc,GAAKD,IAAc,GAAK,CAACJ,EAAM,SAASF,EAAKC,CAAG,EAChE,OACI,KAAK,QAAUG,EAAW,OAASH,IAAQ,GAC1C,KAAK,QAAUG,EAAW,OAASH,IAAQ,IAC9CC,EAAM,SAASJ,EAAOC,CAAK,GAAG,OAASF,EAAU,MAE5C,KAAA,gBAAgBG,EAAKC,EAAKC,CAAK,EAE/B,GAGT,GACEK,IAAc,GACdD,IAAc,GACdP,IAAUM,GACV,CAACH,EAAM,SAASF,EAAKC,CAAG,GACxB,CAACC,EAAM,SAASJ,EAAOC,EAAQI,CAAS,EAExC,OAAAD,EAAM,sBAAsBJ,EAAOC,EAAOC,EAAKC,EAAK,IAAI,EACjD,GAGL,GAAAM,IAAc,GAAKD,IAAc,EAAG,CAClC,GAAAJ,EAAM,SAASF,EAAKC,CAAG,GAAK,KAAK,WAAWD,EAAKC,EAAKC,CAAK,EAC7D,OACG,KAAK,QAAUE,EAAW,OAASH,IAAQ,GAC3C,KAAK,QAAUG,EAAW,OACzBH,IAAQ,GACRC,EAAM,SAASJ,EAAOC,CAAK,GAAG,OAASF,EAAU,OAE9C,KAAA,gBAAgBG,EAAKC,EAAKC,CAAK,EAE/B,GAGT,GAAIA,EAAM,gBAAgBJ,EAAOC,EAAOC,EAAKC,CAAG,EACvC,MAAA,EAEX,CAEO,MAAA,EACT,CAEA,gBAAgBD,EAAaC,EAAaC,EAA6B,CACrE,MAAMM,EAAkB,SAAS,eAC/B,iBAAA,EAGEA,IACFA,EAAgB,MAAM,QAAU,QAGzB,OAAA,QAAWC,GAAsB,CACtCD,EAAgB,MAAM,QAAU,OAC1BN,EAAA,YAAYF,EAAKC,EAAKQ,CAAS,CAAA,EAG3C,CACF"}