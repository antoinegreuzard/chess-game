async function H(l,e){switch(l){case a.PAWN:const{Pawn:t}=await Promise.resolve().then(function(){return L});return new t(e);case a.ROOK:const{Rook:i}=await Promise.resolve().then(function(){return S});return new i(e);case a.KNIGHT:const{Knight:n}=await Promise.resolve().then(function(){return G});return new n(e);case a.BISHOP:const{Bishop:s}=await Promise.resolve().then(function(){return V});return new s(e);case a.QUEEN:const{Queen:o}=await Promise.resolve().then(function(){return D});return new o(e);case a.KING:const{King:c}=await Promise.resolve().then(function(){return _});return new c(e);default:throw new Error(`Type de pièce inconnu : ${l}`)}}var u=(l=>(l.WHITE="white",l.BLACK="black",l))(u||{}),a=(l=>(l.PAWN="pawn",l.ROOK="rook",l.KNIGHT="knight",l.BISHOP="bishop",l.QUEEN="queen",l.KING="king",l))(a||{});class K{constructor(e,t){this.color=e,this.type=t}isPathClear(e,t,i,n,s){const o=Math.sign(i-e),c=Math.sign(n-t);let r=e+o,f=t+c;for(;r!==i||f!==n;){if(s.getPiece(r,f)!==null)return!1;r+=o,f+=c}return!0}canCapture(e,t,i){const n=i.getPiece(e,t);return!n||n.color!==this.color}toData(){return{color:this.color,type:this.type}}static async fromData(e){return await H(e.type,e.color)}async clone(){return await H(this.type,this.color)}}class P extends K{hasMoved=!1;constructor(e){super(e,a.ROOK)}isValidMove(e,t,i,n,s){return!(e===i||t===n)||!this.isPathClear(e,t,i,n,s)?!1:this.canCapture(i,n,s)}toData(){return{...super.toData(),hasMoved:this.hasMoved}}static async fromData(e){const t=new P(e.color);return t.hasMoved=e.hasMoved,t}}var S=Object.freeze({__proto__:null,Rook:P});class X extends K{constructor(e){super(e,a.KNIGHT)}isValidMove(e,t,i,n,s){const o=Math.abs(i-e),c=Math.abs(n-t);return(o===2&&c===1||o===1&&c===2)&&this.canCapture(i,n,s)}}var G=Object.freeze({__proto__:null,Knight:X});class Y extends K{constructor(e){super(e,a.BISHOP)}isValidMove(e,t,i,n,s){return Math.abs(i-e)===Math.abs(n-t)&&this.isPathClear(e,t,i,n,s)?this.canCapture(i,n,s):!1}}var V=Object.freeze({__proto__:null,Bishop:Y});class w extends K{constructor(e){super(e,a.QUEEN)}isValidMove(e,t,i,n,s){return(e===i||t===n||Math.abs(i-e)===Math.abs(n-t))&&this.isPathClear(e,t,i,n,s)?this.canCapture(i,n,s):!1}}var D=Object.freeze({__proto__:null,Queen:w});class y extends K{hasMoved=!1;constructor(e){super(e,a.KING)}isValidMove(e,t,i,n,s){const o=Math.abs(i-e),c=Math.abs(n-t);if(o<=1&&c<=1)return this.canCapture(i,n,s)&&!s.isAdjacentToAnotherKing(i,n,this.color);if(!this.hasMoved&&c===0&&o===2){const r=i>e?1:-1,f=i>e?7:0,h=s.getPiece(f,t);if(h&&h instanceof P&&!h.hasMoved){for(let g=e+r;g!==i;g+=r)if(s.getPiece(g,t)||s.isSquareUnderAttack(g,t,this.color))return!1;return!s.isSquareUnderAttack(i,t,this.color)&&!s.isAdjacentToAnotherKing(i,n,this.color)}}return!1}}var _=Object.freeze({__proto__:null,King:y});class I extends K{hasMoved=!1;constructor(e){super(e,a.PAWN)}isValidMove(e,t,i,n,s){const o=this.color===u.WHITE?1:-1,c=this.color===u.WHITE?1:6,r=(n-t)*o,f=Math.abs(i-e);if(f===0&&r===1&&!s.getPiece(i,n))return(this.color===u.WHITE&&n===7||this.color===u.BLACK&&n===0)&&s.getPiece(e,t)?.type===a.PAWN&&this.handlePromotion(i,n,s),!0;if(f===0&&r===2&&t===c&&!s.getPiece(i,n)&&!s.getPiece(e,t+o))return s.updateEnPassantTarget(e,t,i,n,this),!0;if(f===1&&r===1){if(s.getPiece(i,n)&&this.canCapture(i,n,s))return(this.color===u.WHITE&&n===7||this.color===u.BLACK&&n===0&&s.getPiece(e,t)?.type===a.PAWN)&&this.handlePromotion(i,n,s),!0;if(s.isEnPassantMove(e,t,i,n))return!0}return!1}handlePromotion(e,t,i){const n=document.getElementById("promotionDialog");n&&(n.style.display="block",window.promote=s=>{n.style.display="none",i.promotePawn(e,t,s)})}}var L=Object.freeze({__proto__:null,Pawn:I});let N=[],O=[];function j(l,e){switch(l){case a.PAWN:return e===u.WHITE?"♙":"♟";case a.ROOK:return e===u.WHITE?"♖":"♜";case a.KNIGHT:return e===u.WHITE?"♘":"♞";case a.BISHOP:return e===u.WHITE?"♗":"♝";case a.QUEEN:return e===u.WHITE?"♕":"♛";case a.KING:return e===u.WHITE?"♔":"♚";default:return""}}function R(l,e){const t=j(l,e);e===u.WHITE?N.push(t):O.push(t),q()}function q(){const l=document.getElementById("capturedWhite"),e=document.getElementById("capturedBlack");l&&(l.textContent=N.join(" ")),e&&(e.textContent=O.join(" "))}class W{grid;enPassantTarget=null;halfMoveCount=0;constructor(){this.grid=this.initializeBoard()}initializeBoard(){const e=Array(8).fill(null).map(()=>Array(8).fill(null));return e[0]=[new P(u.WHITE),new X(u.WHITE),new Y(u.WHITE),new w(u.WHITE),new y(u.WHITE),new Y(u.WHITE),new X(u.WHITE),new P(u.WHITE)],e[1]=Array(8).fill(null).map(()=>new I(u.WHITE)),e[7]=[new P(u.BLACK),new X(u.BLACK),new Y(u.BLACK),new w(u.BLACK),new y(u.BLACK),new Y(u.BLACK),new X(u.BLACK),new P(u.BLACK)],e[6]=Array(8).fill(null).map(()=>new I(u.BLACK)),e}isWithinBounds(e,t){return e>=0&&e<8&&t>=0&&t<8}getPiece(e,t){return this.grid[t][e]}getValidMoves(e,t){let i=null;if(this.isWithinBounds(e,t)&&(i=this.getPiece(e,t)),!i)return[];const n=[];for(let s=0;s<8;s++)for(let o=0;o<8;o++)i.isValidMove(e,t,o,s,this)&&n.push({x:o,y:s});return n}getKingInCheck(){return this.isKingInCheck(u.WHITE)?this.findKing(u.WHITE):this.isKingInCheck(u.BLACK)?this.findKing(u.BLACK):null}movePiece(e,t,i,n){if(!this.isWithinBounds(e,t)||!this.isWithinBounds(i,n)||["__proto__","constructor","prototype"].includes(t.toString())||["__proto__","constructor","prototype"].includes(n.toString()))return!1;const s=this.getPiece(e,t);if(s&&s.isValidMove(e,t,i,n,this)){const o=this.getPiece(i,n);if(o&&o.type===a.KING)return!1;if(s instanceof y&&Math.abs(i-e)===2)return this.isCastlingValid(s,e,t,i)?(this.handleCastling(i,t),!0):!1;if(s instanceof I&&this.isEnPassantMove(e,t,i,n)&&this.captureEnPassant(e,t,i,n),this.grid[n][i]=s,this.grid[t][e]=null,this.isKingInCheck(s.color))return this.grid[t][e]=s,this.grid[n][i]=o,!1;"hasMoved"in s&&(s.hasMoved=!0),this.updateEnPassantTarget(e,t,i,n,s),this.halfMoveCount=s.type===a.PAWN||o?0:this.halfMoveCount+1;const c=s.color===u.WHITE?u.BLACK:u.WHITE;return this.isCheckmate(c),!0}return!1}isCastlingValid(e,t,i,n){const s=n>t?1:-1,o=n>t?7:0,c=this.getPiece(o,i);if(!(c instanceof P)||c.hasMoved||e.hasMoved)return!1;for(let r=t+s;r!==n;r+=s)if(this.getPiece(r,i)||this.isSquareUnderAttack(r,i,e.color))return!1;return!this.isSquareUnderAttack(t,i,e.color)&&!this.isSquareUnderAttack(n,i,e.color)}handleCastling(e,t){e===6?this.getPiece(7,t)instanceof P&&this.movePiece(7,t,5,t):e===2&&this.getPiece(0,t)instanceof P&&this.movePiece(0,t,3,t)}updateEnPassantTarget(e,t,i,n,s){s instanceof I&&Math.abs(n-t)===2&&e===i?this.enPassantTarget={x:i,y:(t+n)/2}:this.enPassantTarget=null}captureEnPassant(e,t,i,n){const s=this.getPiece(e,t);if(this.isEnPassantMove(e,t,i,n)&&s instanceof I){const o=s.color===u.WHITE?-1:1,c=n+o,r=this.getPiece(i,c);if(r&&r.type===a.PAWN){this.grid[c][i]=null;const f={capturedWhite:[],capturedBlack:[]};return r.color===u.WHITE?f.capturedWhite.push(r.type):f.capturedBlack.push(r.type),R(r.type,r.color),f}}return null}isEnPassantMove(e,t,i,n){return this.enPassantTarget?this.getPiece(e,t)instanceof I&&i===this.enPassantTarget.x&&n===this.enPassantTarget.y&&Math.abs(e-i)===1&&Math.abs(t-n)===1:!1}promotePawn(e,t,i){const n=this.getPiece(e,t)?.color;if(n)switch(i){case"queen":this.grid[t][e]=new w(n);break;case"rook":this.grid[t][e]=new P(n);break;case"bishop":this.grid[t][e]=new Y(n);break;case"knight":this.grid[t][e]=new X(n);break}}isKingInCheck(e){const t=this.findKing(e);if(!t)return!1;for(let i=0;i<8;i++)for(let n=0;n<8;n++){const s=this.getPiece(n,i);if(s&&s.color!==e&&s.isValidMove(n,i,t.x,t.y,this))return!0}return!1}isCheckmate(e){if(!this.isKingInCheck(e))return!1;for(let t=0;t<8;t++)for(let i=0;i<8;i++){const n=this.getPiece(i,t);if(n&&n.color===e){const s=this.getValidMoves(i,t);for(const o of s){const c=this.getPiece(o.x,o.y);this.grid[o.y][o.x]=n,this.grid[t][i]=null;const r=!this.isKingInCheck(e);if(this.grid[t][i]=n,this.grid[o.y][o.x]=c,r)return!1}}}return!0}isStalemate(e){if(this.isKingInCheck(e))return!1;for(let t=0;t<8;t++)for(let i=0;i<8;i++){const n=this.getPiece(i,t);if(n&&n.color===e){for(let s=0;s<8;s++)for(let o=0;o<8;o++)if(n.isValidMove(i,t,o,s,this)){const c=this.getPiece(o,s);this.grid[s][o]=n,this.grid[t][i]=null;const r=!this.isKingInCheck(e);if(this.grid[t][i]=n,this.grid[s][o]=c,r)return!1}}}return!0}findKing(e){for(let t=0;t<8;t++)for(let i=0;i<8;i++){const n=this.getPiece(i,t);if(n&&n instanceof y&&n.color===e)return{x:i,y:t}}return null}isKing(e,t){return this.getPiece(e,t)instanceof y}isSquareUnderAttack(e,t,i){for(let n=0;n<8;n++)for(let s=0;s<8;s++){const o=this.getPiece(s,n);if(o&&o.color!==i&&o.isValidMove(s,n,e,t,this))return!0}return!1}isInsufficientMaterial(){const e=this.grid.flat().filter(t=>t!==null);return e.length<=2?!0:e.length===3&&e.some(t=>t?.type===a.BISHOP||t?.type===a.KNIGHT)}isFiftyMoveRule(){return this.halfMoveCount>=50}setPiece(e,t,i){this.grid[t][e]=i}isMoveValid(e,t,i,n){const s=this.getPiece(e,t);if(!s||i<0||i>=8||n<0||n>=8||!s.isValidMove(e,t,i,n,this))return!1;const o=this.getPiece(i,n);return!(o&&o.color===s.color)}isCapture(e,t,i,n){const s=this.isWithinBounds(e,t)?this.getPiece(e,t):null,o=this.isWithinBounds(i,n)?this.getPiece(i,n):null;return s!==null&&o!==null&&s.color!==o.color}static async fromData(e){const t=new W;return t.grid=await Promise.all(e.grid.map(async i=>Promise.all(i.map(async n=>n?await K.fromData(n):null)))),t}toData(){return{grid:this.grid.map(e=>e.map(t=>t?t.toData():null))}}isAdjacentToAnotherKing(e,t,i){const n=[{dx:-1,dy:-1},{dx:-1,dy:0},{dx:-1,dy:1},{dx:0,dy:-1},{dx:0,dy:1},{dx:1,dy:-1},{dx:1,dy:0},{dx:1,dy:1}];for(const{dx:s,dy:o}of n){const c=e+s,r=t+o,f=this.isWithinBounds(c,r)?this.getPiece(c,r):null;if(f instanceof y&&f.color!==i)return!0}return!1}clone(){const e=new W;return e.grid=this.grid.map(t=>t.map(i=>i?Object.create(Object.getPrototypeOf(i),Object.getOwnPropertyDescriptors(i)):null)),e.enPassantTarget=this.enPassantTarget?{...this.enPassantTarget}:null,e.halfMoveCount=this.halfMoveCount,e}getPieceCount(){return this.grid.flat().filter(e=>e!==null).length}isGameOver(){return this.isCheckmate(u.WHITE)||this.isCheckmate(u.BLACK)||this.isStalemate(u.WHITE)||this.isStalemate(u.BLACK)||this.isInsufficientMaterial()?!0:this.isFiftyMoveRule()}getWinner(){return this.isCheckmate(u.BLACK)?u.WHITE:this.isCheckmate(u.WHITE)?u.BLACK:(this.isStalemate(u.WHITE)||this.isStalemate(u.BLACK)||this.isInsufficientMaterial()||this.isFiftyMoveRule(),null)}getPieces(){return this.grid.flat().filter(e=>e!==null)}}const U={[a.PAWN]:1,[a.KNIGHT]:3,[a.BISHOP]:3.25,[a.ROOK]:5,[a.QUEEN]:9,[a.KING]:0},Q={[a.PAWN]:[[0,0,0,0,0,0,0,0],[.5,.5,.5,.5,.5,.5,.5,.5],[.1,.1,.2,.3,.3,.2,.1,.1],[.05,.05,.1,.25,.25,.1,.05,.05],[0,0,0,.2,.2,0,0,0],[.05,-.05,-.1,0,0,-.1,-.05,.05],[.05,.1,.1,-.2,-.2,.1,.1,.05],[0,0,0,0,0,0,0,0]],[a.KNIGHT]:[[-.5,-.4,-.3,-.3,-.3,-.3,-.4,-.5],[-.4,-.2,0,0,0,0,-.2,-.4],[-.3,0,.1,.15,.15,.1,0,-.3],[-.3,.05,.15,.2,.2,.15,.05,-.3],[-.3,0,.15,.2,.2,.15,0,-.3],[-.3,.05,.1,.15,.15,.1,.05,-.3],[-.4,-.2,0,.05,.05,0,-.2,-.4],[-.5,-.4,-.3,-.3,-.3,-.3,-.4,-.5]],[a.BISHOP]:[[-.2,-.1,-.1,-.1,-.1,-.1,-.1,-.2],[-.1,0,0,0,0,0,0,-.1],[-.1,0,.05,.1,.1,.05,0,-.1],[-.1,.05,.05,.1,.1,.05,.05,-.1],[-.1,0,.1,.1,.1,.1,0,-.1],[-.1,.1,.1,.1,.1,.1,.1,-.1],[-.1,.05,0,0,0,0,.05,-.1],[-.2,-.1,-.1,-.1,-.1,-.1,-.1,-.2]],[a.ROOK]:[[0,0,0,0,0,0,0,0],[.05,.1,.1,.1,.1,.1,.1,.05],[-.05,0,0,0,0,0,0,-.05],[-.05,0,0,0,0,0,0,-.05],[-.05,0,0,0,0,0,0,-.05],[-.05,0,0,0,0,0,0,-.05],[-.05,0,0,0,0,0,0,-.05],[0,0,0,.05,.05,0,0,0]],[a.QUEEN]:[[-.2,-.1,-.1,-.05,-.05,-.1,-.1,-.2],[-.1,0,0,0,0,0,0,-.1],[-.1,0,.05,.05,.05,.05,0,-.1],[-.05,0,.05,.05,.05,.05,0,-.05],[0,0,.05,.05,.05,.05,0,-.05],[-.1,.05,.05,.05,.05,.05,0,-.1],[-.1,0,.05,0,0,0,0,-.1],[-.2,-.1,-.1,-.05,-.05,-.1,-.1,-.2]],[a.KING]:[[-.3,-.4,-.4,-.5,-.5,-.4,-.4,-.3],[-.3,-.4,-.4,-.5,-.5,-.4,-.4,-.3],[-.3,-.4,-.4,-.5,-.5,-.4,-.4,-.3],[-.3,-.4,-.4,-.5,-.5,-.4,-.4,-.3],[-.2,-.3,-.3,-.4,-.4,-.3,-.3,-.2],[-.1,-.2,-.2,-.2,-.2,-.2,-.2,-.1],[.2,.2,0,0,0,0,.2,.2],[.2,.3,0,0,0,0,.3,.2]]},k={"3,3":.5,"3,4":.5,"4,3":.5,"4,4":.5,"2,3":.25,"2,4":.25,"3,2":.25,"4,2":.25,"4,5":.25,"3,5":.25,"5,3":.25,"5,4":.25};function B(l,e){let t=0;for(let i=0;i<8;i++)for(let n=0;n<8;n++){const s=l.getPiece(n,i);if(s){let o=U[s.type];const c=Q[s.type];c&&(o+=c[i][n]);const r=`${n},${i}`;k[r]&&(o+=k[r]),s.type===a.PAWN&&(o+=$(l,n,i,s.color),Z(l,n,i,s.color)&&(o+=1)),s.type===a.KING&&J(l,n,i,s.color)&&(o-=.5),t+=s.color===e?o:-o}}return t}function $(l,e,t,i){let n=0;return n-=z(l,e,t,i)*1.5,n-=F(l,e,t,i)*1.5,n}function z(l,e,t,i){for(let n=0;n<8;n++)if(n!==t&&l.getPiece(e,n)?.type===a.PAWN&&l.getPiece(e,n)?.color===i)return .5;return 0}function F(l,e,t,i){const n=e-1>=0?l.getPiece(e-1,t):null,s=e+1<8?l.getPiece(e+1,t):null;return(!n||n.type!==a.PAWN||n.color!==i)&&(!s||s.type!==a.PAWN||s.color!==i)?1.5:0}function J(l,e,t,i){const n=l.getPiece(e,t);return n&&n.type===a.KING?[{dx:-1,dy:0},{dx:1,dy:0},{dx:0,dy:-1},{dx:0,dy:1},{dx:-1,dy:-1},{dx:1,dy:1},{dx:-1,dy:1},{dx:1,dy:-1}].some(({dx:o,dy:c})=>{const r=e+o,f=t+c;if(l.isWithinBounds(r,f)){const h=l.getPiece(r,f);return!h||h.color!==i||h.type!==a.PAWN}return!0}):!1}function Z(l,e,t,i){const n=i===u.WHITE?-1:1;for(let o=t+n;o>=0&&o<8;o+=n){const c=l.getPiece(e,o);if(c&&c.type===a.PAWN&&c.color!==i)return!1}return[e-1,e+1].every(o=>{if(o<0||o>=8)return!0;for(let c=0;c<8;c++){const r=l.getPiece(o,c);if(r&&r.type===a.PAWN&&r.color===i)return!1}return!0})}function b(l,e){const t=l.getPieces();return t.length===3&&m(t,a.KING,e)&&m(t,a.ROOK,e)&&m(t,a.KING,v(e))?ee(l,e):t.length===4&&m(t,a.KING,e)&&m(t,a.BISHOP,e)&&m(t,a.KNIGHT,e)&&m(t,a.KING,v(e))?te(l,e):t.length===4&&m(t,a.KING,e)&&m(t,a.BISHOP,e)&&t.filter(i=>i.type===a.BISHOP&&i.color===e).length===2&&m(t,a.KING,v(e))?ie(l,e):t.length===3&&m(t,a.KING,e)&&m(t,a.PAWN,e)&&m(t,a.KING,v(e))?ne(l,e):null}function m(l,e,t){return l.some(i=>i.type===e&&i.color===t)}function v(l){return l===u.WHITE?u.BLACK:u.WHITE}function ee(l,e){const t=M(l,a.KING,v(e)),i=M(l,a.ROOK,e);return!t||!i?null:t.x<4?{fromX:i.x,fromY:i.y,toX:t.x+1,toY:t.y}:{fromX:i.x,fromY:i.y,toX:t.x-1,toY:t.y}}function te(l,e){const t=M(l,a.KING,v(e)),i=M(l,a.KNIGHT,e),n=M(l,a.BISHOP,e);return!t||!i||!n?null:t.x<4?{fromX:i.x,fromY:i.y,toX:t.x+1,toY:t.y}:{fromX:n.x,fromY:n.y,toX:t.x-1,toY:t.y}}function ie(l,e){const t=M(l,a.KING,v(e)),i=se(l,a.BISHOP,e);return!t||i.length<2?null:{fromX:i[0].x,fromY:i[0].y,toX:t.x,toY:t.y>4?t.y-1:t.y+1}}function ne(l,e){const t=M(l,a.KING,v(e)),i=M(l,a.PAWN,e);if(!t||!i)return null;const n=e===u.WHITE?1:-1;return{fromX:i.x,fromY:i.y,toX:i.x,toY:i.y+n}}function M(l,e,t){for(let i=0;i<8;i++)for(let n=0;n<8;n++){const s=l.getPiece(n,i);if(s&&s.type===e&&s.color===t)return{x:n,y:i}}return null}function se(l,e,t){const i=[];for(let n=0;n<8;n++)for(let s=0;s<8;s++){const o=l.getPiece(s,n);o&&o.type===e&&o.color===t&&i.push({x:s,y:n})}return i}const oe={"e2e4 e7e5 g1f3 b8c6 f1b5":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:4,fromY:1,toX:4,toY:3},{fromX:6,fromY:7,toX:5,toY:5},{fromX:1,fromY:0,toX:2,toY:2},{fromX:5,fromY:7,toX:1,toY:5}],"e2e4 c7c5":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:2,fromY:1,toX:2,toY:3}],"e2e4 c7c5 g1f3 d7d6":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:2,fromY:1,toX:2,toY:3},{fromX:6,fromY:7,toX:5,toY:5},{fromX:3,fromY:1,toX:3,toY:2}],"d2d4 d7d5 c2c4":[{fromX:3,fromY:6,toX:3,toY:4},{fromX:3,fromY:1,toX:3,toY:3},{fromX:2,fromY:6,toX:2,toY:4}],"e2e4 c7c6":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:2,fromY:1,toX:2,toY:2}],"e2e4 c7c6 d2d4 d7d5":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:2,fromY:1,toX:2,toY:2},{fromX:3,fromY:6,toX:3,toY:4},{fromX:3,fromY:1,toX:3,toY:3}],"e2e4 e7e6":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:4,fromY:1,toX:4,toY:2}],"e2e4 e7e6 d2d4 d7d5":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:4,fromY:1,toX:4,toY:2},{fromX:3,fromY:6,toX:3,toY:4},{fromX:3,fromY:1,toX:3,toY:3}],"e2e4 e7e5 g1f3 b8c6 f1c4":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:4,fromY:1,toX:4,toY:3},{fromX:6,fromY:7,toX:5,toY:5},{fromX:1,fromY:0,toX:2,toY:2},{fromX:5,fromY:7,toX:2,toY:4}],"e2e4 g8f6":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:6,fromY:0,toX:5,toY:2}],"e2e4 d7d6":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:3,fromY:1,toX:3,toY:2}],"e2e4 e7e5 g1f3 b8c6 d2d4":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:4,fromY:1,toX:4,toY:3},{fromX:6,fromY:7,toX:5,toY:5},{fromX:1,fromY:0,toX:2,toY:2},{fromX:3,fromY:6,toX:3,toY:4}],"e2e4 e7e5 f2f4":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:4,fromY:1,toX:4,toY:3},{fromX:5,fromY:6,toX:5,toY:4}],c2c4:[{fromX:2,fromY:6,toX:2,toY:4}],"g1f3 d7d5":[{fromX:6,fromY:7,toX:5,toY:5},{fromX:3,fromY:1,toX:3,toY:3}]};class re{constructor(e,t=5e3){this.color=e,this.transpositionTable=new Map,this.maxTime=t,this.killerMoves=new Map,this.startTime=0}openingMoves=oe;transpositionTable;maxTime;startTime;killerMoves;makeMove(e){const t=this.getOpeningMove(e);if(t)return t;const i=this.useEndgameTablebase(e);if(i)return i;if(this.shouldUseMCTS(e))return this.mcts(e);let n=null,s=-1/0;const o=10;this.startTime=Date.now();for(let c=1;c<=o;c++){let r=this.getAllValidMoves(e);r=this.sortMoves(r,e,c);for(const f of r){const h=e.getPiece(f.fromX,f.fromY);if(!h)continue;const g=e.getPiece(f.toX,f.toY);e.movePiece(f.fromX,f.fromY,f.toX,f.toY);const C=e.isKingInCheck(this.color)||this.isCriticalMove(h,f,e)?c+1:c,d=this.minimax(e,C-1,-1/0,1/0,!1);if(e.setPiece(f.fromX,f.fromY,h),e.setPiece(f.toX,f.toY,g),d>s&&(s=d,n=f),Date.now()-this.startTime>this.maxTime)break}if(Date.now()-this.startTime>this.maxTime)break}return n}minimax(e,t,i,n,s){const o=e.toString();if(Date.now()-this.startTime>this.maxTime)return B(e,this.color);if(this.transpositionTable.has(o))return this.transpositionTable.get(o);if(t>1&&!e.isKingInCheck(this.color)&&-this.minimax(e,t-2,-n,-i,!s)>=n)return n;if(t===0||e.isCheckmate(this.color)||e.isCheckmate(this.getOpponentColor())||Date.now()-this.startTime>this.maxTime){const c=this.quiescenceSearch(e,i,n);return this.transpositionTable.set(o,c),c}if(s){let c=-1/0,r=this.getAllValidMoves(e);r=this.sortMoves(r,e,t);for(let f=0;f<r.length;f++){const h=r[f],g=e.getPiece(h.fromX,h.fromY),p=e.getPiece(h.toX,h.toY),d=f>3&&t>2?t-1:t,E=e.isKingInCheck(this.color),A=g&&g.type===a.PAWN&&(h.toY===0||h.toY===7),x=E||A?d+1:d;e.movePiece(h.fromX,h.fromY,h.toX,h.toY);const T=this.minimax(e,x-1,i,n,!1);if(e.setPiece(h.fromX,h.fromY,g),e.setPiece(h.toX,h.toY,p),c=Math.max(c,T),i=Math.max(i,T),n<=i){this.addKillerMove(t,h);break}}return this.transpositionTable.set(o,c),c}else{let c=1/0,r=this.getAllValidMoves(e);r=this.sortMoves(r,e,t);for(let f=0;f<r.length;f++){const h=r[f],g=e.getPiece(h.fromX,h.fromY),p=e.getPiece(h.toX,h.toY),d=f>3&&t>2?t-1:t,E=e.isKingInCheck(this.getOpponentColor()),A=g&&g.type===a.PAWN&&(h.toY===0||h.toY===7),x=E||A?d+1:d;e.movePiece(h.fromX,h.fromY,h.toX,h.toY);const T=this.minimax(e,x-1,i,n,!0);if(e.setPiece(h.fromX,h.fromY,g),e.setPiece(h.toX,h.toY,p),c=Math.min(c,T),n=Math.min(n,T),n<=i){this.addKillerMove(t,h);break}}return this.transpositionTable.set(o,c),c}}addKillerMove(e,t){const i=this.killerMoves.get(e)||[],n=i.find(s=>s.move.fromX===t.fromX&&s.move.fromY===t.fromY&&s.move.toX===t.toX&&s.move.toY===t.toY);n?n.score+=1:i.push({move:t,score:1}),i.sort((s,o)=>o.score-s.score),this.killerMoves.set(e,i)}quiescenceSearch(e,t,i,n=0){if(n>=10)return B(e,this.color);const o=B(e,this.color);if(o>=i)return i;t<o&&(t=o);const c=this.getAllValidMoves(e).filter(r=>e.isCapture(r.fromX,r.fromY,r.toX,r.toY));for(const r of c){const f=e.getPiece(r.fromX,r.fromY),h=e.getPiece(r.toX,r.toY);if(e.movePiece(r.fromX,r.fromY,r.toX,r.toY),!e.isKingInCheck(this.color)){const p=-this.quiescenceSearch(e,-i,-t,n+1);if(e.setPiece(r.fromX,r.fromY,f),e.setPiece(r.toX,r.toY,h),p>=i)return i;p>t&&(t=p)}else e.setPiece(r.fromX,r.fromY,f),e.setPiece(r.toX,r.toY,h)}return t}getOpponentColor(){return this.color===u.WHITE?u.BLACK:u.WHITE}getAllValidMoves(e){const t=[];for(let i=0;i<8;i++)for(let n=0;n<8;n++){const s=e.getPiece(n,i);if(s&&s.color===this.color){const o=e.getValidMoves(n,i);for(const c of o)if(e.isMoveValid(n,i,c.x,c.y)){const r=e.getPiece(c.x,c.y);e.setPiece(c.x,c.y,s),e.setPiece(n,i,null);const f=!e.isKingInCheck(this.color);e.setPiece(n,i,s),e.setPiece(c.x,c.y,r),f&&t.push({fromX:n,fromY:i,toX:c.x,toY:c.y})}}}return t}sortMoves(e,t,i){return e.sort((n,s)=>{const o=this.killerMoves.get(i);if(o&&o.some(g=>g.move.fromX===n.fromX&&g.move.fromY===n.fromY))return-1;const c=t.getPiece(n.toX,n.toY),r=t.getPiece(s.toX,s.toY);if(c&&!r)return-1;if(!c&&r)return 1;const f=k[`${n.toX},${n.toY}`]||0;return(k[`${s.toX},${s.toY}`]||0)-f})}mcts(e){const i=new Map,n=this.getAllValidMoves(e);for(let h=0;h<1e3;h++){const g=n[Math.floor(Math.random()*n.length)];if(!g||g.fromX===void 0||g.fromY===void 0||g.toX===void 0||g.toY===void 0)continue;const p=this.simulateRandomGame(e,g),C=`${g.fromX},${g.fromY},${g.toX},${g.toY}`;i.set(C,(i.get(C)||0)+p)}if(i.size===0)return null;const s=Array.from(i.entries()).reduce((h,g)=>g[1]>h[1]?g:h)[0],[o,c,r,f]=s.split(",").map(Number);return{fromX:o,fromY:c,toX:r,toY:f}}simulateRandomGame(e,t){if(!t||t.fromX===void 0||t.fromY===void 0||t.toX===void 0||t.toY===void 0)return console.error("Invalid move:",t),0;const i=e.clone();i.movePiece(t.fromX,t.fromY,t.toX,t.toY);let n=this.color,s=this.getAllValidMoves(i);for(;!i.isGameOver()&&s.length>0;){const o=s[Math.floor(Math.random()*s.length)];if(!o||o.fromX===void 0||o.fromY===void 0||o.toX===void 0||o.toY===void 0){console.error("Invalid random move:",o);break}i.movePiece(o.fromX,o.fromY,o.toX,o.toY),n=n===u.WHITE?u.BLACK:u.WHITE,s=this.getAllValidMoves(i)}return i.getWinner()===this.color?1:i.getWinner()===null?.5:0}shouldUseMCTS(e){return e.getPieceCount()<=10}useEndgameTablebase(e){return e.getPieceCount()<=4?b(e,this.color):null}isCriticalMove(e,t,i){const n=i.getPiece(t.toX,t.toY);return n&&n.color!==e.color||i.isKingInCheck(e.color)}getOpeningMove(e){const t=this.getBoardHash(e);return this.openingMoves[t]?this.openingMoves[t][0]:null}getBoardHash(e){let t="";for(let i=0;i<8;i++)for(let n=0;n<8;n++){const s=e.getPiece(n,i);if(s){const o=s.color===u.WHITE?s.type:s.type.toLowerCase();t+=o+n+i+" "}}return t.trim()}}const ce=new re(u.BLACK);self.onmessage=async l=>{const{boardData:e}=l.data,t=await W.fromData(e),i=ce.makeMove(t);let n=null;if(i&&t.isCapture(i.fromX,i.fromY,i.toX,i.toY)){const s=t.getPiece(i.toX,i.toY);s&&(n={capturedWhite:[],capturedBlack:[]},s.color===u.WHITE?n.capturedWhite.push(s.type):n.capturedBlack.push(s.type))}self.postMessage({bestMove:i,captureData:n})};
//# sourceMappingURL=ai.worker-DnGrvu_w.js.map
