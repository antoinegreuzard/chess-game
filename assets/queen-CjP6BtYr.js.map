{"version":3,"file":"queen-CjP6BtYr.js","sources":["../src/pieces/queen.ts"],"sourcesContent":["// src/pieces/queen.ts\nimport { BoardInterface, Piece, PieceColor, PieceType } from '../piece';\n\nexport class Queen extends Piece {\n  constructor(color: PieceColor) {\n    super(color, PieceType.QUEEN);\n  }\n\n  isValidMove(\n    fromX: number,\n    fromY: number,\n    toX: number,\n    toY: number,\n    board: BoardInterface,\n  ): boolean {\n    if (toX < 0 || toX >= 8 || toY < 0 || toY >= 8) {\n      return false;\n    }\n\n    // La reine peut se déplacer en ligne droite ou en diagonale\n    if (\n      fromX === toX || // Déplacement en colonne\n      fromY === toY || // Déplacement en ligne\n      Math.abs(toX - fromX) === Math.abs(toY - fromY) // Déplacement en diagonale\n    ) {\n      // Vérifie que la trajectoire est dégagée\n      if (this.isPathClear(fromX, fromY, toX, toY, board)) {\n        // Vérifie si la cible est vide ou contient une pièce ennemie\n        return this.canCapture(toX, toY, board);\n      }\n    }\n\n    return false;\n  }\n}\n"],"names":["Queen","Piece","color","PieceType","fromX","fromY","toX","toY","board"],"mappings":"mDAGO,MAAMA,UAAcC,CAAM,CAC/B,YAAYC,EAAmB,CACvB,MAAAA,EAAOC,EAAU,KAAK,CAC9B,CAEA,YACEC,EACAC,EACAC,EACAC,EACAC,EACS,CACT,OAAIF,EAAM,GAAKA,GAAO,GAAKC,EAAM,GAAKA,GAAO,EACpC,IAKPH,IAAUE,GACVD,IAAUE,GACV,KAAK,IAAID,EAAMF,CAAK,IAAM,KAAK,IAAIG,EAAMF,CAAK,IAG1C,KAAK,YAAYD,EAAOC,EAAOC,EAAKC,EAAKC,CAAK,EAEzC,KAAK,WAAWF,EAAKC,EAAKC,CAAK,EAInC,EACT,CACF"}