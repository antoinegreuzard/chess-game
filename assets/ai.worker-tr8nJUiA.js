async function g(c,t){switch(c){case r.PAWN:const{Pawn:i}=await Promise.resolve().then(function(){return tt});return new i(t);case r.ROOK:const{Rook:e}=await import("./rook-BrHlUDM8.js");return new e(t);case r.KNIGHT:const{Knight:o}=await import("./knight-goH_qutV.js");return new o(t);case r.BISHOP:const{Bishop:s}=await import("./bishop-CzkjVfqG.js");return new s(t);case r.QUEEN:const{Queen:n}=await import("./queen-mEAlVscl.js");return new n(t);case r.KING:const{King:l}=await import("./king-53l-Uu39.js");return new l(t);default:throw new Error(`Type de pièce inconnu : ${c}`)}}var f=(c=>(c.WHITE="white",c.BLACK="black",c))(f||{}),r=(c=>(c.PAWN="pawn",c.ROOK="rook",c.KNIGHT="knight",c.BISHOP="bishop",c.QUEEN="queen",c.KING="king",c))(r||{});class E{constructor(t,i){this.color=t,this.type=i}hasMoved=!1;isPathClear(t,i,e,o,s){const n=Math.sign(e-t),l=Math.sign(o-i);let a=t+n,u=i+l;for(;a!==e||u!==o;){if(s.getPiece(a,u)!==null)return!1;a+=n,u+=l}return!0}static isKing(t){return t.type==="king"}canCapture(t,i,e){const o=e.getPiece(t,i);return!o||o.color!==this.color}toData(){return{color:this.color,type:this.type}}static async fromData(t){return await g(t.type,t.color)}}let w=[],N=[];function k(c,t){switch(c){case r.PAWN:return t===f.WHITE?"♙":"♟";case r.ROOK:return t===f.WHITE?"♖":"♜";case r.KNIGHT:return t===f.WHITE?"♘":"♞";case r.BISHOP:return t===f.WHITE?"♗":"♝";case r.QUEEN:return t===f.WHITE?"♕":"♛";case r.KING:return t===f.WHITE?"♔":"♚";default:return""}}function O(c,t){const i=k(c,t);t===f.WHITE?w.push(i):N.push(i),G()}function G(){const c=document.getElementById("capturedWhite"),t=document.getElementById("capturedBlack");c&&(c.textContent=w.join(" ")),t&&(t.textContent=N.join(" "))}class Y{grid;enPassantTarget=null;halfMoveCount=0;currentPlayer=f.WHITE;constructor(){this.grid=[]}async init(){this.grid=await this.initializeBoard()}async initializeBoard(){const t=Array(8).fill(null).map(()=>Array(8).fill(null));return t[0]=[await g(r.ROOK,f.WHITE),await g(r.KNIGHT,f.WHITE),await g(r.BISHOP,f.WHITE),await g(r.KING,f.WHITE),await g(r.QUEEN,f.WHITE),await g(r.BISHOP,f.WHITE),await g(r.KNIGHT,f.WHITE),await g(r.ROOK,f.WHITE)],t[1]=await Promise.all(Array(8).fill(null).map(()=>g(r.PAWN,f.WHITE))),t[7]=[await g(r.ROOK,f.BLACK),await g(r.KNIGHT,f.BLACK),await g(r.BISHOP,f.BLACK),await g(r.KING,f.BLACK),await g(r.QUEEN,f.BLACK),await g(r.BISHOP,f.BLACK),await g(r.KNIGHT,f.BLACK),await g(r.ROOK,f.BLACK)],t[6]=await Promise.all(Array(8).fill(null).map(()=>g(r.PAWN,f.BLACK))),t}isWithinBounds(t,i){return t>=0&&t<8&&i>=0&&i<8}getPiece(t,i){return this.grid[i][t]}getValidMoves(t,i){let e=null;if(this.isWithinBounds(t,i)&&(e=this.getPiece(t,i)),!e)return[];const o=[];for(let s=0;s<8;s++)for(let n=0;n<8;n++)e.isValidMove(t,i,n,s,this)&&o.push({x:n,y:s});return o}getKingInCheck(){return this.isKingInCheck(f.WHITE)?this.findKing(f.WHITE):this.isKingInCheck(f.BLACK)?this.findKing(f.BLACK):null}movePiece(t,i,e,o){if(!this.isWithinBounds(t,i)||!this.isWithinBounds(e,o)||["__proto__","constructor","prototype"].includes(i.toString())||["__proto__","constructor","prototype"].includes(o.toString()))return!1;const s=this.getPiece(t,i);if(s&&s.isValidMove(t,i,e,o,this)){const n=this.getPiece(e,o);if(n&&n.type===r.KING)return!1;if(s?.type===r.KING&&Math.abs(e-t)===2)return this.isCastlingValid(s,t,i,e)?(this.handleCastling(e,i),s.hasMoved=!0,!0):!1;if(s?.type===r.PAWN&&this.isEnPassantMove(t,i,e,o)&&this.captureEnPassant(t,i,e,o),this.grid[o][e]=s,this.grid[i][t]=null,s.hasMoved=!0,this.isKingInCheck(s.color))return this.grid[i][t]=s,this.grid[o][e]=n,!1;"hasMoved"in s&&(s.hasMoved=!0),this.updateEnPassantTarget(t,i,e,o,s),this.halfMoveCount=s.type===r.PAWN||n?0:this.halfMoveCount+1;const l=s.color===f.WHITE?f.BLACK:f.WHITE;return this.isCheckmate(l),!0}return!1}isCastlingValid(t,i,e,o){const s=o>i?1:-1,n=o>i?7:0,l=this.getPiece(n,e);if(l?.type!==r.ROOK||l.hasMoved||t.hasMoved)return!1;for(let a=i+s;a!==o+s;a+=s)if(this.getPiece(a,e)||this.isSquareUnderAttack(a,e,t.color))return!1;return!0}handleCastling(t,i){if(t===6){const e=this.getPiece(7,i),o=this.getPiece(4,i);e?.type===r.ROOK&&!e.hasMoved&&o?.type===r.KING&&(this.setPiece(5,i,e),this.setPiece(7,i,null),this.setPiece(6,i,o),this.setPiece(4,i,null))}else if(t===2){const e=this.getPiece(0,i),o=this.getPiece(4,i);e?.type===r.ROOK&&!e.hasMoved&&o?.type===r.KING&&(this.setPiece(3,i,e),this.setPiece(0,i,null),this.setPiece(2,i,o),this.setPiece(4,i,null))}}updateEnPassantTarget(t,i,e,o,s){s?.type===r.PAWN&&Math.abs(o-i)===2&&t===e?this.enPassantTarget={x:e,y:(i+o)/2}:this.enPassantTarget=null}captureEnPassant(t,i,e,o){const s=this.getPiece(t,i);if(this.isEnPassantMove(t,i,e,o)&&s?.type===r.PAWN){const n=s.color===f.WHITE?-1:1,l=o+n,a=this.getPiece(e,l);if(a&&a.type===r.PAWN){this.grid[l][e]=null;const u={capturedWhite:[],capturedBlack:[]};return a.color===f.WHITE?u.capturedWhite.push(a.type):u.capturedBlack.push(a.type),O(a.type,a.color),u}}return null}isEnPassantMove(t,i,e,o){return this.enPassantTarget?this.getPiece(t,i)?.type===r.PAWN&&e===this.enPassantTarget.x&&o===this.enPassantTarget.y&&Math.abs(t-e)===1&&Math.abs(i-o)===1:!1}async promotePawn(t,i,e){const o=this.getPiece(t,i)?.color;if(o)switch(e){case"queen":this.grid[i][t]=await g(r.QUEEN,o);break;case"rook":this.grid[i][t]=await g(r.ROOK,o);break;case"bishop":this.grid[i][t]=await g(r.BISHOP,o);break;case"knight":this.grid[i][t]=await g(r.KNIGHT,o);break}}isKingInCheck(t){const i=this.findKing(t);if(!i)return!1;for(let e=0;e<8;e++)for(let o=0;o<8;o++){const s=this.getPiece(o,e);if(s&&s.color!==t&&s.isValidMove(o,e,i.x,i.y,this))return!0}return!1}isCheckmate(t){if(!this.isKingInCheck(t))return!1;for(let i=0;i<8;i++)for(let e=0;e<8;e++){const o=this.getPiece(e,i);if(o&&o.color===t){const s=this.getValidMoves(e,i);for(const n of s){const l=this.getPiece(n.x,n.y);this.grid[n.y][n.x]=o,this.grid[i][e]=null;const a=!this.isKingInCheck(t);if(this.grid[i][e]=o,this.grid[n.y][n.x]=l,a)return!1}}}return!0}isStalemate(t){if(this.isKingInCheck(t))return!1;for(let i=0;i<8;i++)for(let e=0;e<8;e++){const o=this.getPiece(e,i);if(o&&o.color===t){for(let s=0;s<8;s++)for(let n=0;n<8;n++)if(o.isValidMove(e,i,n,s,this)){const l=this.getPiece(n,s);this.grid[s][n]=o,this.grid[i][e]=null;const a=!this.isKingInCheck(t);if(this.grid[i][e]=o,this.grid[s][n]=l,a)return!1}}}return!0}findKing(t){for(let i=0;i<8;i++)for(let e=0;e<8;e++){const o=this.getPiece(e,i);if(o&&o?.type===r.KING&&o.color===t)return{x:e,y:i}}return null}isKing(t,i){return this.getPiece(t,i)?.type===r.KING}isSquareUnderAttack(t,i,e){for(let o=0;o<8;o++)for(let s=0;s<8;s++){const n=this.getPiece(s,o);if(n&&n.color!==e&&n.isValidMove(s,o,t,i,this))return!0}return!1}isInsufficientMaterial(){const t=this.grid.flat().filter(i=>i!==null);return t.length<=2?!0:t.length===3&&t.some(i=>i?.type===r.BISHOP||i?.type===r.KNIGHT)}isFiftyMoveRule(){return this.halfMoveCount>=50}setPiece(t,i,e){this.grid[i][t]=e}isMoveValid(t,i,e,o){const s=this.getPiece(t,i);if(!s||e<0||e>=8||o<0||o>=8||!s.isValidMove(t,i,e,o,this))return!1;const n=this.getPiece(e,o);return!(n&&n.color===s.color)}isCapture(t,i,e,o){const s=this.isWithinBounds(t,i)?this.getPiece(t,i):null,n=this.isWithinBounds(e,o)?this.getPiece(e,o):null;return s!==null&&n!==null&&s.color!==n.color}static async fromData(t){const i=new Y;return await i.init(),i.grid=await Promise.all(t.grid.map(async e=>Promise.all(e.map(async o=>o?await E.fromData(o):null)))),i}toData(){return{grid:this.grid.map(t=>t.map(i=>i?i.toData():null))}}isAdjacentToAnotherKing(t,i,e){const o=[{dx:-1,dy:-1},{dx:-1,dy:0},{dx:-1,dy:1},{dx:0,dy:-1},{dx:0,dy:1},{dx:1,dy:-1},{dx:1,dy:0},{dx:1,dy:1}];for(const{dx:s,dy:n}of o){const l=t+s,a=i+n,u=this.isWithinBounds(l,a)?this.getPiece(l,a):null;if(u?.type===r.KING&&u.color!==e)return!0}return!1}clone(){const t=new Y;return t.grid=this.grid.map(i=>i.map(e=>e?Object.create(Object.getPrototypeOf(e),Object.getOwnPropertyDescriptors(e)):null)),t.enPassantTarget=this.enPassantTarget?{...this.enPassantTarget}:null,t.halfMoveCount=this.halfMoveCount,t}getPieceCount(){return this.grid.flat().filter(t=>t!==null).length}isGameOver(){return this.isCheckmate(f.WHITE)||this.isCheckmate(f.BLACK)||this.isStalemate(f.WHITE)||this.isStalemate(f.BLACK)||this.isInsufficientMaterial()?!0:this.isFiftyMoveRule()}getWinner(){return this.isCheckmate(f.BLACK)?f.WHITE:this.isCheckmate(f.WHITE)?f.BLACK:(this.isStalemate(f.WHITE)||this.isStalemate(f.BLACK)||this.isInsufficientMaterial()||this.isFiftyMoveRule(),null)}getPieces(){return this.grid.flat().filter(t=>t!==null)}setPlayerColor(t){this.currentPlayer=t}getPlayerColor(){return this.currentPlayer}}const S={[r.PAWN]:1,[r.KNIGHT]:3,[r.BISHOP]:3.25,[r.ROOK]:5,[r.QUEEN]:9,[r.KING]:0},V={[r.PAWN]:[[0,0,0,0,0,0,0,0],[.5,.5,.5,.5,.5,.5,.5,.5],[.1,.1,.2,.3,.3,.2,.1,.1],[.05,.05,.1,.25,.25,.1,.05,.05],[0,0,0,.2,.2,0,0,0],[.05,-.05,-.1,0,0,-.1,-.05,.05],[.05,.1,.1,-.2,-.2,.1,.1,.05],[0,0,0,0,0,0,0,0]],[r.KNIGHT]:[[-.5,-.4,-.3,-.3,-.3,-.3,-.4,-.5],[-.4,-.2,0,0,0,0,-.2,-.4],[-.3,0,.1,.15,.15,.1,0,-.3],[-.3,.05,.15,.2,.2,.15,.05,-.3],[-.3,0,.15,.2,.2,.15,0,-.3],[-.3,.05,.1,.15,.15,.1,.05,-.3],[-.4,-.2,0,.05,.05,0,-.2,-.4],[-.5,-.4,-.3,-.3,-.3,-.3,-.4,-.5]],[r.BISHOP]:[[-.2,-.1,-.1,-.1,-.1,-.1,-.1,-.2],[-.1,0,0,0,0,0,0,-.1],[-.1,0,.05,.1,.1,.05,0,-.1],[-.1,.05,.05,.1,.1,.05,.05,-.1],[-.1,0,.1,.1,.1,.1,0,-.1],[-.1,.1,.1,.1,.1,.1,.1,-.1],[-.1,.05,0,0,0,0,.05,-.1],[-.2,-.1,-.1,-.1,-.1,-.1,-.1,-.2]],[r.ROOK]:[[0,0,0,0,0,0,0,0],[.05,.1,.1,.1,.1,.1,.1,.05],[-.05,0,0,0,0,0,0,-.05],[-.05,0,0,0,0,0,0,-.05],[-.05,0,0,0,0,0,0,-.05],[-.05,0,0,0,0,0,0,-.05],[-.05,0,0,0,0,0,0,-.05],[0,0,0,.05,.05,0,0,0]],[r.QUEEN]:[[-.2,-.1,-.1,-.05,-.05,-.1,-.1,-.2],[-.1,0,0,0,0,0,0,-.1],[-.1,0,.05,.05,.05,.05,0,-.1],[-.05,0,.05,.05,.05,.05,0,-.05],[0,0,.05,.05,.05,.05,0,-.05],[-.1,.05,.05,.05,.05,.05,0,-.1],[-.1,0,.05,0,0,0,0,-.1],[-.2,-.1,-.1,-.05,-.05,-.1,-.1,-.2]],[r.KING]:[[-.3,-.4,-.4,-.5,-.5,-.4,-.4,-.3],[-.3,-.4,-.4,-.5,-.5,-.4,-.4,-.3],[-.3,-.4,-.4,-.5,-.5,-.4,-.4,-.3],[-.3,-.4,-.4,-.5,-.5,-.4,-.4,-.3],[-.2,-.3,-.3,-.4,-.4,-.3,-.3,-.2],[-.1,-.2,-.2,-.2,-.2,-.2,-.2,-.1],[.2,.2,0,0,0,0,.2,.2],[.2,.3,0,0,0,0,.3,.2]]},v={"3,3":.5,"3,4":.5,"4,3":.5,"4,4":.5,"2,3":.25,"2,4":.25,"3,2":.25,"4,2":.25,"4,5":.25,"3,5":.25,"5,3":.25,"5,4":.25};function R(c,t,i,e){const o=V[c];return o?e?o[7-i][7-t]:o[i][t]:0}function K(c,t,i=!1){let e=0;for(let o=0;o<8;o++)for(let s=0;s<8;s++){const n=c.getPiece(s,o);if(n){let l=S[n.type];l+=R(n.type,s,o,i);const a=`${s},${o}`;v[a]&&(l+=v[a]),n.type===r.PAWN&&(l+=T(c,s,o,n.color),C(c,s,o,n.color)&&(l+=1)),n.type===r.PAWN&&(l+=T(c,s,o,n.color),C(c,s,o,n.color)&&(l+=1)),n.type===r.KING&&_(c,s,o,n.color)&&(l-=.5),e+=n.color===t?l:-l}}return parseFloat(e.toFixed(2))}function T(c,t,i,e){let o=0;return o-=D(c,t,i,e)*1.5,o-=L(c,t,i,e)*1.5,o}function D(c,t,i,e){for(let o=0;o<8;o++)if(o!==i&&c.getPiece(t,o)?.type===r.PAWN&&c.getPiece(t,o)?.color===e)return .5;return 0}function L(c,t,i,e){const o=t-1>=0?c.getPiece(t-1,i):null,s=t+1<8?c.getPiece(t+1,i):null;return(!o||o.type!==r.PAWN||o.color!==e)&&(!s||s.type!==r.PAWN||s.color!==e)?1.5:0}function _(c,t,i,e){const o=c.getPiece(t,i);return o&&o.type===r.KING?[{dx:-1,dy:0},{dx:1,dy:0},{dx:0,dy:-1},{dx:0,dy:1},{dx:-1,dy:-1},{dx:1,dy:1},{dx:-1,dy:1},{dx:1,dy:-1}].some(({dx:n,dy:l})=>{const a=t+n,u=i+l;if(!c.isWithinBounds(a,u))return!1;const h=c.getPiece(a,u);return!h||h.color!==e||h.type!==r.PAWN}):!1}function C(c,t,i,e){const o=e===f.WHITE?-1:1;for(let n=i+o;n>=0&&n<8;n+=o){const l=c.getPiece(t,n);if(l&&l.type===r.PAWN&&l.color!==e)return!1}return[t-1,t+1].every(n=>{if(n<0||n>=8)return!0;for(let l=0;l<8;l++){const a=c.getPiece(n,l);if(a&&a.type===r.PAWN&&a.color===e)return!1}return!0})}function j(c,t){return t?{fromX:7-c.fromX,fromY:7-c.fromY,toX:7-c.toX,toY:7-c.toY}:c}function q(c,t,i=!1){const e=c.getPieces();let o=null;return e.length===3&&P(e,r.KING,t)&&P(e,r.ROOK,t)&&P(e,r.KING,d(t))?o=U(c,t):e.length===4&&P(e,r.KING,t)&&P(e,r.BISHOP,t)&&P(e,r.KNIGHT,t)&&P(e,r.KING,d(t))?o=$(c,t):e.length===4&&P(e,r.KING,t)&&P(e,r.BISHOP,t)&&e.filter(s=>s.type===r.BISHOP&&s.color===t).length===2&&P(e,r.KING,d(t))?o=Q(c,t):e.length===3&&P(e,r.KING,t)&&P(e,r.PAWN,t)&&P(e,r.KING,d(t))&&(o=F(c,t)),o?j(o,t===f.BLACK||i):null}function P(c,t,i){return c.some(e=>e.type===t&&e.color===i)}function d(c){return c===f.WHITE?f.BLACK:f.WHITE}function U(c,t){const i=X(c,r.KING,d(t)),e=X(c,r.ROOK,t);return!i||!e?null:i.x<4?{fromX:e.x,fromY:e.y,toX:i.x+1,toY:i.y}:{fromX:e.x,fromY:e.y,toX:i.x-1,toY:i.y}}function $(c,t){const i=X(c,r.KING,d(t)),e=X(c,r.KNIGHT,t),o=X(c,r.BISHOP,t);return!i||!e||!o?null:i.x<4?{fromX:e.x,fromY:e.y,toX:i.x+1,toY:i.y}:{fromX:o.x,fromY:o.y,toX:i.x-1,toY:i.y}}function Q(c,t){const i=X(c,r.KING,d(t)),e=z(c,r.BISHOP,t);return!i||e.length<2?null:{fromX:e[0].x,fromY:e[0].y,toX:i.x,toY:i.y>4?i.y-1:i.y+1}}function F(c,t){const i=X(c,r.KING,d(t)),e=X(c,r.PAWN,t);if(!i||!e)return null;const o=t===f.WHITE?1:-1;return{fromX:e.x,fromY:e.y,toX:e.x,toY:e.y+o}}function X(c,t,i){for(let e=0;e<8;e++)for(let o=0;o<8;o++){const s=c.getPiece(o,e);if(s&&s.type===t&&s.color===i)return{x:o,y:e}}return null}function z(c,t,i){const e=[];for(let o=0;o<8;o++)for(let s=0;s<8;s++){const n=c.getPiece(s,o);n&&n.type===t&&n.color===i&&e.push({x:s,y:o})}return e}const J={"e2e4 e7e5 g1f3 b8c6 f1b5":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:4,fromY:1,toX:4,toY:3},{fromX:6,fromY:7,toX:5,toY:5},{fromX:1,fromY:0,toX:2,toY:2},{fromX:5,fromY:7,toX:1,toY:5}],"e2e4 c7c5":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:2,fromY:1,toX:2,toY:3}],"e2e4 c7c5 g1f3 d7d6":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:2,fromY:1,toX:2,toY:3},{fromX:6,fromY:7,toX:5,toY:5},{fromX:3,fromY:1,toX:3,toY:2}],"d2d4 d7d5 c2c4":[{fromX:3,fromY:6,toX:3,toY:4},{fromX:3,fromY:1,toX:3,toY:3},{fromX:2,fromY:6,toX:2,toY:4}],"e2e4 c7c6":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:2,fromY:1,toX:2,toY:2}],"e2e4 c7c6 d2d4 d7d5":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:2,fromY:1,toX:2,toY:2},{fromX:3,fromY:6,toX:3,toY:4},{fromX:3,fromY:1,toX:3,toY:3}],"e2e4 e7e6":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:4,fromY:1,toX:4,toY:2}],"e2e4 e7e6 d2d4 d7d5":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:4,fromY:1,toX:4,toY:2},{fromX:3,fromY:6,toX:3,toY:4},{fromX:3,fromY:1,toX:3,toY:3}],"e2e4 e7e5 g1f3 b8c6 f1c4":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:4,fromY:1,toX:4,toY:3},{fromX:6,fromY:7,toX:5,toY:5},{fromX:1,fromY:0,toX:2,toY:2},{fromX:5,fromY:7,toX:2,toY:4}],"e2e4 g8f6":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:6,fromY:0,toX:5,toY:2}],"e2e4 d7d6":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:3,fromY:1,toX:3,toY:2}],"e2e4 e7e5 g1f3 b8c6 d2d4":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:4,fromY:1,toX:4,toY:3},{fromX:6,fromY:7,toX:5,toY:5},{fromX:1,fromY:0,toX:2,toY:2},{fromX:3,fromY:6,toX:3,toY:4}],"e2e4 e7e5 f2f4":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:4,fromY:1,toX:4,toY:3},{fromX:5,fromY:6,toX:5,toY:4}],c2c4:[{fromX:2,fromY:6,toX:2,toY:4}],"g1f3 d7d5":[{fromX:6,fromY:7,toX:5,toY:5},{fromX:3,fromY:1,toX:3,toY:3}]};function Z(c,t){return t?{fromX:7-c.fromX,fromY:7-c.fromY,toX:7-c.toX,toY:7-c.toY}:c}class b{constructor(t,i=5e3){this.color=t,this.transpositionTable=new Map,this.maxTime=i,this.killerMoves=new Map,this.startTime=0}openingMoves=J;transpositionTable;maxTime;startTime;killerMoves;makeMove(t){const i=this.getOpeningMove(t);if(i)return i;const e=this.useEndgameTablebase(t);if(e)return e;if(this.shouldUseMCTS(t))return this.mcts(t);let o=null,s=-1/0;const n=10;this.startTime=Date.now();for(let l=1;l<=n;l++){let a=this.getAllValidMoves(t);a=this.sortMoves(a,t,l);for(const u of a){const h=t.getPiece(u.fromX,u.fromY);if(!h)continue;const m=t.getPiece(u.toX,u.toY);t.movePiece(u.fromX,u.fromY,u.toX,u.toY);const y=t.isKingInCheck(this.color)||this.isCriticalMove(h,u,t)?l+1:l,I=this.minimax(t,y-1,-1/0,1/0,!1);if(t.setPiece(u.fromX,u.fromY,h),t.setPiece(u.toX,u.toY,m),I>s&&(s=I,o=u),Date.now()-this.startTime>this.maxTime)break}if(Date.now()-this.startTime>this.maxTime)break}return o}minimax(t,i,e,o,s){const n=t.toString();if(Date.now()-this.startTime>this.maxTime)return K(t,this.color);if(this.transpositionTable.has(n))return this.transpositionTable.get(n);if(i>1&&!t.isKingInCheck(this.color)&&-this.minimax(t,i-2,-o,-e,!s)>=o)return o;if(i===0||t.isCheckmate(this.color)||t.isCheckmate(this.getOpponentColor())||Date.now()-this.startTime>this.maxTime){const l=this.quiescenceSearch(t,e,o);return this.transpositionTable.set(n,l),l}if(s){let l=-1/0,a=this.getAllValidMoves(t);a=this.sortMoves(a,t,i);for(const u of a){const h=t.getPiece(u.fromX,u.fromY),m=t.getPiece(u.toX,u.toY);t.movePiece(u.fromX,u.fromY,u.toX,u.toY);const p=this.minimax(t,i-1,e,o,!1);if(t.setPiece(u.fromX,u.fromY,h),t.setPiece(u.toX,u.toY,m),l=Math.max(l,p),e=Math.max(e,p),o<=e){this.addKillerMove(i,u);break}}return this.transpositionTable.set(n,l),l}else{let l=1/0,a=this.getAllValidMoves(t);a=this.sortMoves(a,t,i);for(let u=0;u<a.length;u++){const h=a[u],m=t.getPiece(h.fromX,h.fromY),p=t.getPiece(h.toX,h.toY),I=u>3&&i>2?i-1:i,A=t.isKingInCheck(this.getOpponentColor()),B=m&&m.type===r.PAWN&&(h.toY===0||h.toY===7),x=A||B?I+1:I;t.movePiece(h.fromX,h.fromY,h.toX,h.toY);const M=this.minimax(t,x-1,e,o,!0);if(t.setPiece(h.fromX,h.fromY,m),t.setPiece(h.toX,h.toY,p),l=Math.min(l,M),o=Math.min(o,M),o<=e){this.addKillerMove(i,h);break}}return this.transpositionTable.set(n,l),l}}addKillerMove(t,i){const e=this.killerMoves.get(t)||[],o=e.find(s=>s.move.fromX===i.fromX&&s.move.fromY===i.fromY);o?o.score+=1:e.push({move:i,score:1}),this.killerMoves.set(t,e.sort((s,n)=>n.score-s.score).slice(0,2))}quiescenceSearch(t,i,e,o=0){if(o>=5)return K(t,this.color);const n=K(t,this.color);if(n>=e)return e;i<n&&(i=n);const l=this.getAllValidMoves(t).filter(a=>t.isCapture(a.fromX,a.fromY,a.toX,a.toY));for(const a of l){const u=t.getPiece(a.fromX,a.fromY),h=t.getPiece(a.toX,a.toY);if(t.movePiece(a.fromX,a.fromY,a.toX,a.toY),!t.isKingInCheck(this.color)){const p=-this.quiescenceSearch(t,-e,-i,o+1);if(t.setPiece(a.fromX,a.fromY,u),t.setPiece(a.toX,a.toY,h),p>=e)return e;p>i&&(i=p)}else t.setPiece(a.fromX,a.fromY,u),t.setPiece(a.toX,a.toY,h)}return i}getOpponentColor(){return this.color===f.WHITE?f.BLACK:f.WHITE}getAllValidMoves(t){const i=[];for(let e=0;e<8;e++)for(let o=0;o<8;o++){const s=t.getPiece(o,e);if(s&&s.color===this.color){const n=t.getValidMoves(o,e);for(const l of n)if(t.isMoveValid(o,e,l.x,l.y)){const a=t.getPiece(l.x,l.y);t.setPiece(l.x,l.y,s),t.setPiece(o,e,null);const u=!t.isKingInCheck(this.color);t.setPiece(o,e,s),t.setPiece(l.x,l.y,a),u&&i.push({fromX:o,fromY:e,toX:l.x,toY:l.y})}}}return i}sortMoves(t,i,e){return t.sort((o,s)=>{const n=this.killerMoves.get(e);if(n&&n.some(m=>m.move.fromX===o.fromX&&m.move.fromY===o.fromY))return-1;const l=i.getPiece(o.toX,o.toY),a=i.getPiece(s.toX,s.toY);if(l&&!a)return-1;if(!l&&a)return 1;const u=v[`${o.toX},${o.toY}`]||0;return(v[`${s.toX},${s.toY}`]||0)-u})}mcts(t){const e=new Map,o=this.getAllValidMoves(t);for(let h=0;h<1e3;h++){const m=o[Math.floor(Math.random()*o.length)];if(!m||m.fromX===void 0||m.fromY===void 0||m.toX===void 0||m.toY===void 0)continue;const p=this.simulateRandomGame(t,m),y=`${m.fromX},${m.fromY},${m.toX},${m.toY}`;e.set(y,(e.get(y)||0)+p)}if(e.size===0)return null;const s=Array.from(e.entries()).reduce((h,m)=>m[1]>h[1]?m:h)[0],[n,l,a,u]=s.split(",").map(Number);return{fromX:n,fromY:l,toX:a,toY:u}}simulateRandomGame(t,i){if(!i||i.fromX===void 0||i.fromY===void 0||i.toX===void 0||i.toY===void 0)return console.error("Invalid move:",i),0;const e=t.clone();e.movePiece(i.fromX,i.fromY,i.toX,i.toY);let o=this.color,s=this.getAllValidMoves(e);for(;!e.isGameOver()&&s.length>0;){const n=s[Math.floor(Math.random()*s.length)];if(!n||n.fromX===void 0||n.fromY===void 0||n.toX===void 0||n.toY===void 0){console.error("Invalid random move:",n);break}e.movePiece(n.fromX,n.fromY,n.toX,n.toY),o=o===f.WHITE?f.BLACK:f.WHITE,s=this.getAllValidMoves(e)}return e.getWinner()===this.color?1:e.getWinner()===null?.5:0}shouldUseMCTS(t){return t.getPieceCount()<=10}useEndgameTablebase(t){return t.getPieceCount()<=4?q(t,this.color):null}isCriticalMove(t,i,e){const o=e.getPiece(i.toX,i.toY);return o&&o.color!==t.color&&o.type!==r.PAWN}getOpeningMove(t){const i=this.getBoardHash(t);if(this.openingMoves[i]){const e=this.openingMoves[i][0];return Z(e,this.color===f.BLACK)}return null}getBoardHash(t){let i="";for(let e=0;e<8;e++)for(let o=0;o<8;o++){const s=t.getPiece(o,e);if(s){const n=s.color===f.WHITE?s.type:s.type.toLowerCase();i+=n+o+e+" "}}return i.trim()}}class H extends E{hasMoved=!1;_toX=null;_toY=null;_board=null;constructor(t){super(t,r.PAWN)}isValidMove(t,i,e,o,s){const n=s.getPlayerColor(),l=this.color===f.WHITE?1:-1,a=this.color===f.WHITE?1:6,u=(o-i)*l,h=Math.abs(e-t),m=n===f.WHITE?7:0;if(h===0&&u===1&&!s.getPiece(e,o))return o===m?this.handlePromotion(e,o,s):!0;if(h===1&&u===1){if(s.getPiece(e,o)&&this.canCapture(e,o,s))return o===m?this.handlePromotion(e,o,s):!0;if(s.isEnPassantMove(t,i,e,o))return!0}return h===0&&u===2&&i===a&&!s.getPiece(e,o)&&!s.getPiece(t,i+l)?(s.updateEnPassantTarget(t,i,e,o,this),!0):!1}handlePromotion(t,i,e){return this._toX=t,this._toY=i,this._board=e,!0}}var tt=Object.freeze({__proto__:null,Pawn:H});let W;self.onmessage=async c=>{const{boardData:t,aiColor:i}=c.data;W=new b(i);const e=await Y.fromData(t),o=W.makeMove(e);let s=null;if(o&&e.isCapture(o.fromX,o.fromY,o.toX,o.toY)){const l=e.getPiece(o.toX,o.toY);l&&(s={capturedWhite:[],capturedBlack:[]},l.color===f.WHITE?s.capturedWhite.push(l.type):s.capturedBlack.push(l.type))}let n=!1;if(o&&e.getPiece(o.fromX,o.fromY)?.type===r.PAWN){const l=e.getPiece(o.fromX,o.fromY);if(l instanceof H){const a=i===f.WHITE?7:0;o.toY===a&&(n=l.handlePromotion(o.toX,o.toY,e))}}self.postMessage({bestMove:o,captureData:s,promotionRequired:n})};export{E as P,r as a,g as c};
//# sourceMappingURL=ai.worker-tr8nJUiA.js.map
