{"version":3,"file":"rook-f07W4QSe.js","sources":["../src/pieces/rook.ts"],"sourcesContent":["// src/pieces/rook.ts\n\nimport { BoardInterface, Piece, PieceColor, PieceType } from '../piece';\nimport { createPiece } from '../utils/pieceFactory';\n\nexport class Rook extends Piece {\n  public readonly type: PieceType = PieceType.ROOK;\n  public hasMoved: boolean = false;\n\n  constructor(color: PieceColor) {\n    super(color, PieceType.ROOK);\n  }\n\n  isValidMove(\n    fromX: number,\n    fromY: number,\n    toX: number,\n    toY: number,\n    board: BoardInterface,\n  ): boolean {\n    const isStraightMove = fromX === toX || fromY === toY;\n    if (!isStraightMove) {\n      return false;\n    }\n\n    const isPathClear = this.isPathClear(fromX, fromY, toX, toY, board);\n    if (!isPathClear) {\n      return false;\n    }\n\n    return this.canCapture(toX, toY, board);\n  }\n\n  public toData(): any {\n    return {\n      ...super.toData(),\n      hasMoved: this.hasMoved,\n    };\n  }\n\n  // Ajuste le type de retour pour inclure Promise<Rook>\n  static async fromData(data: any): Promise<Rook> {\n    const rook = await createPiece(PieceType.ROOK, data.color);\n    rook.hasMoved = data.hasMoved;\n    return rook;\n  }\n}\n"],"names":["Rook","Piece","PieceType","color","fromX","fromY","toX","toY","board","data","rook","createPiece"],"mappings":"qDAKO,MAAMA,UAAaC,CAAM,CACd,KAAkBC,EAAU,KACrC,SAAoB,GAE3B,YAAYC,EAAmB,CACvB,MAAAA,EAAOD,EAAU,IAAI,CAC7B,CAEA,YACEE,EACAC,EACAC,EACAC,EACAC,EACS,CAOT,MALI,EADmBJ,IAAUE,GAAOD,IAAUE,IAM9C,CADgB,KAAK,YAAYH,EAAOC,EAAOC,EAAKC,EAAKC,CAAK,EAEzD,GAGF,KAAK,WAAWF,EAAKC,EAAKC,CAAK,CACxC,CAEO,QAAc,CACZ,MAAA,CACL,GAAG,MAAM,OAAO,EAChB,SAAU,KAAK,QAAA,CAEnB,CAGA,aAAa,SAASC,EAA0B,CAC9C,MAAMC,EAAO,MAAMC,EAAYT,EAAU,KAAMO,EAAK,KAAK,EACzD,OAAAC,EAAK,SAAWD,EAAK,SACdC,CACT,CACF"}