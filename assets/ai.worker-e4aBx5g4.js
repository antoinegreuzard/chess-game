async function g(c,t){switch(c){case r.PAWN:const{Pawn:o}=await Promise.resolve().then(function(){return ot});return new o(t);case r.ROOK:const{Rook:i}=await import("./rook-aW25eGib.js");return new i(t);case r.KNIGHT:const{Knight:e}=await import("./knight-oHb1GrWv.js");return new e(t);case r.BISHOP:const{Bishop:s}=await import("./bishop-9fUIwIRC.js");return new s(t);case r.QUEEN:const{Queen:n}=await import("./queen-C1ICtKfh.js");return new n(t);case r.KING:const{King:l}=await import("./king-DRTH1n9J.js");return new l(t);default:throw new Error(`Type de pièce inconnu : ${c}`)}}var u=(c=>(c.WHITE="white",c.BLACK="black",c))(u||{}),r=(c=>(c.PAWN="pawn",c.ROOK="rook",c.KNIGHT="knight",c.BISHOP="bishop",c.QUEEN="queen",c.KING="king",c))(r||{});class w{constructor(t,o){this.color=t,this.type=o}hasMoved=!1;isPathClear(t,o,i,e,s){const n=Math.sign(i-t),l=Math.sign(e-o);let f=t+n,h=o+l;for(;f!==i||h!==e;){if(s.getPiece(f,h)!==null)return!1;f+=n,h+=l}return!0}static isKing(t){return t.type==="king"}canCapture(t,o,i){const e=i.getPiece(t,o);return!e||e.color!==this.color}toData(){return{color:this.color,type:this.type}}static async fromData(t){return await g(t.type,t.color)}}let E=[],N=[];function x(c,t){switch(c){case r.PAWN:return t===u.WHITE?"♙":"♟";case r.ROOK:return t===u.WHITE?"♖":"♜";case r.KNIGHT:return t===u.WHITE?"♘":"♞";case r.BISHOP:return t===u.WHITE?"♗":"♝";case r.QUEEN:return t===u.WHITE?"♕":"♛";case r.KING:return t===u.WHITE?"♔":"♚";default:return""}}function S(c,t){const o=x(c,t);t===u.WHITE?E.push(o):N.push(o),G()}function G(){const c=document.getElementById("capturedWhite"),t=document.getElementById("capturedBlack");c&&(c.textContent=E.join(" ")),t&&(t.textContent=N.join(" "))}class K{grid;enPassantTarget=null;halfMoveCount=0;currentPlayer=u.WHITE;constructor(){this.grid=Array(8).fill(null).map(()=>Array(8).fill(null))}async init(){this.grid=await this.initializeBoard()}async initializeBoard(){const t=Array(8).fill(null).map(()=>Array(8).fill(null));return t[0]=[await g(r.ROOK,u.WHITE),await g(r.KNIGHT,u.WHITE),await g(r.BISHOP,u.WHITE),await g(r.QUEEN,u.WHITE),await g(r.KING,u.WHITE),await g(r.BISHOP,u.WHITE),await g(r.KNIGHT,u.WHITE),await g(r.ROOK,u.WHITE)],t[1]=await Promise.all(Array(8).fill(null).map(()=>g(r.PAWN,u.WHITE))),t[7]=[await g(r.ROOK,u.BLACK),await g(r.KNIGHT,u.BLACK),await g(r.BISHOP,u.BLACK),await g(r.QUEEN,u.BLACK),await g(r.KING,u.BLACK),await g(r.BISHOP,u.BLACK),await g(r.KNIGHT,u.BLACK),await g(r.ROOK,u.BLACK)],t[6]=await Promise.all(Array(8).fill(null).map(()=>g(r.PAWN,u.BLACK))),t}isWithinBounds(t,o){return t>=0&&t<8&&o>=0&&o<8}getPiece(t,o){return this.grid[o][t]}getValidMoves(t,o){let i=null;if(this.isWithinBounds(t,o)&&(i=this.getPiece(t,o)),!i)return[];const e=[];for(let s=0;s<8;s++)for(let n=0;n<8;n++)i.isValidMove(t,o,n,s,this)&&e.push({x:n,y:s});return e}captureEnPassantIfValid(t,o,i,e){if(this.isEnPassantMove(t,o,i,e)){const s=this.getPiece(t,o);if(!s)return;const n=e+(s.color===u.WHITE?-1:1);this.grid[n][i]&&(this.grid[n][i]=null)}}getKingInCheck(){return this.isKingInCheck(u.WHITE)?this.findKing(u.WHITE):this.isKingInCheck(u.BLACK)?this.findKing(u.BLACK):null}movePiece(t,o,i,e){if(!this.isWithinBounds(t,o)||!this.isWithinBounds(i,e)||["__proto__","constructor","prototype"].includes(o.toString())||["__proto__","constructor","prototype"].includes(e.toString()))return!1;const s=this.getPiece(t,o);if(s&&s.isValidMove(t,o,i,e,this)){const n=this.getPiece(i,e);if(n&&n.type===r.KING)return!1;if(s.type===r.KING&&Math.abs(i-t)===2)return this.isCastlingValid(s,t,o,i)?(this.handleCastling(i,o),s.hasMoved=!0,!0):!1;if(s?.type===r.PAWN&&this.isEnPassantMove(t,o,i,e)&&this.captureEnPassant(t,o,i,e),this.grid[e][i]=s,this.grid[o][t]=null,this.isKingInCheck(s.color))return this.grid[o][t]=s,this.grid[e][i]=n,!1;(s.type===r.KING||s.type===r.ROOK)&&(s.hasMoved=!0),this.updateEnPassantTarget(t,o,i,e,s),this.halfMoveCount=s.type===r.PAWN||n?0:this.halfMoveCount+1;const l=s.color===u.WHITE?u.BLACK:u.WHITE;return this.isCheckmate(l),!0}return!1}isCastlingValid(t,o,i,e){const s=e>o?1:-1,n=e>o?7:0,l=this.getPiece(n,i);if(l?.type!==r.ROOK||l.hasMoved||t.hasMoved)return!1;for(let f=o+s;f!==e+s;f+=s)if(this.getPiece(f,i)||this.isSquareUnderAttack(f,i,t.color))return!1;return!0}handleCastling(t,o){if(t===6){const i=this.getPiece(7,o),e=this.getPiece(4,o);i?.type===r.ROOK&&!i.hasMoved&&e?.type===r.KING&&!e.hasMoved&&(this.setPiece(5,o,i),this.setPiece(7,o,null),this.setPiece(6,o,e),this.setPiece(4,o,null),e.hasMoved=!0,i.hasMoved=!0)}else if(t===2){const i=this.getPiece(0,o),e=this.getPiece(4,o);i?.type===r.ROOK&&!i.hasMoved&&e?.type===r.KING&&!e.hasMoved&&(this.setPiece(3,o,i),this.setPiece(0,o,null),this.setPiece(2,o,e),this.setPiece(4,o,null),e.hasMoved=!0,i.hasMoved=!0)}}updateEnPassantTarget(t,o,i,e,s){s?.type===r.PAWN&&Math.abs(e-o)===2&&t===i?this.enPassantTarget={x:i,y:(o+e)/2}:this.enPassantTarget=null}captureEnPassant(t,o,i,e){const s=this.getPiece(t,o);if(this.isEnPassantMove(t,o,i,e)&&s?.type===r.PAWN){const n=s.color===u.WHITE?-1:1,l=e+n,f=this.getPiece(i,l);if(f&&f.type===r.PAWN){this.grid[l][i]=null;const h={capturedWhite:[],capturedBlack:[]};return f.color===u.WHITE?h.capturedWhite.push(f.type):h.capturedBlack.push(f.type),S(f.type,f.color),h}}return null}isEnPassantMove(t,o,i,e){return this.enPassantTarget?this.getPiece(t,o)?.type===r.PAWN&&i===this.enPassantTarget.x&&e===this.enPassantTarget.y&&Math.abs(t-i)===1&&Math.abs(o-e)===1:!1}async promotePawn(t,o,i){const e=this.getPiece(t,o)?.color;if(e)switch(i){case"queen":this.grid[o][t]=await g(r.QUEEN,e);break;case"rook":this.grid[o][t]=await g(r.ROOK,e);break;case"bishop":this.grid[o][t]=await g(r.BISHOP,e);break;case"knight":this.grid[o][t]=await g(r.KNIGHT,e);break}}isKingInCheck(t){const o=this.findKing(t);if(!o)return!1;for(let i=0;i<8;i++)for(let e=0;e<8;e++){const s=this.getPiece(e,i);if(s&&s.color!==t&&s.isValidMove(e,i,o.x,o.y,this))return!0}return!1}isCheckmate(t){if(!this.isKingInCheck(t))return!1;for(let i=0;i<8;i++)for(let e=0;e<8;e++){const s=this.getPiece(e,i);if(s&&s.color===t){const n=this.getValidMoves(e,i);for(const l of n){const f=this.getPiece(l.x,l.y);this.grid[l.y][l.x]=s,this.grid[i][e]=null;const h=!this.isKingInCheck(t);if(this.grid[i][e]=s,this.grid[l.y][l.x]=f,h)return!1}}}return!0}isStalemate(t){if(this.isKingInCheck(t))return!1;for(let o=0;o<8;o++)for(let i=0;i<8;i++){const e=this.getPiece(i,o);if(e&&e.color===t){for(let s=0;s<8;s++)for(let n=0;n<8;n++)if(e.isValidMove(i,o,n,s,this)){const l=this.getPiece(n,s);this.grid[s][n]=e,this.grid[o][i]=null;const f=!this.isKingInCheck(t);if(this.grid[o][i]=e,this.grid[s][n]=l,f)return!1}}}return!0}findKing(t){for(let o=0;o<8;o++)for(let i=0;i<8;i++){const e=this.getPiece(i,o);if(e&&e?.type===r.KING&&e.color===t)return{x:i,y:o}}return null}isKing(t,o){return this.getPiece(t,o)?.type===r.KING}isSquareUnderAttack(t,o,i){for(let e=0;e<8;e++)for(let s=0;s<8;s++){const n=this.getPiece(s,e);if(n&&n.color!==i&&n.isValidMove(s,e,t,o,this))return!0}return!1}isInsufficientMaterial(){const t=this.grid.flat().filter(o=>o!==null);return t.length<=2?!0:t.length===3&&t.some(o=>o?.type===r.BISHOP||o?.type===r.KNIGHT)}isFiftyMoveRule(){return this.halfMoveCount>=50}setPiece(t,o,i){this.grid[o][t]=i}isMoveValid(t,o,i,e){const s=this.getPiece(t,o);if(!s||i<0||i>=8||e<0||e>=8||!s.isValidMove(t,o,i,e,this))return!1;const n=this.getPiece(i,e);return!(n&&n.color===s.color)}isCapture(t,o,i,e){const s=this.isWithinBounds(t,o)?this.getPiece(t,o):null,n=this.isWithinBounds(i,e)?this.getPiece(i,e):null;return s!==null&&n!==null&&s.color!==n.color}static async fromData(t){const o=new K;return await o.init(),o.grid=await Promise.all(t.grid.map(async i=>Promise.all(i.map(async e=>e?await w.fromData(e):null)))),o}toData(){return{grid:this.grid.map(t=>t.map(o=>o?o.toData():null))}}isAdjacentToAnotherKing(t,o,i){const e=[{dx:-1,dy:-1},{dx:-1,dy:0},{dx:-1,dy:1},{dx:0,dy:-1},{dx:0,dy:1},{dx:1,dy:-1},{dx:1,dy:0},{dx:1,dy:1}];for(const{dx:s,dy:n}of e){const l=t+s,f=o+n,h=this.isWithinBounds(l,f)?this.getPiece(l,f):null;if(h?.type===r.KING&&h.color!==i)return!0}return!1}clone(){const t=new K;return t.grid=this.grid.map(o=>o.map(i=>i?Object.create(Object.getPrototypeOf(i),Object.getOwnPropertyDescriptors(i)):null)),t.enPassantTarget=this.enPassantTarget?{...this.enPassantTarget}:null,t.halfMoveCount=this.halfMoveCount,t}getPieceCount(){return this.grid.flat().filter(t=>t!==null).length}isGameOver(){return this.isCheckmate(u.WHITE)||this.isCheckmate(u.BLACK)||this.isStalemate(u.WHITE)||this.isStalemate(u.BLACK)||this.isInsufficientMaterial()?!0:this.isFiftyMoveRule()}getWinner(){return this.isCheckmate(u.BLACK)?u.WHITE:this.isCheckmate(u.WHITE)?u.BLACK:(this.isStalemate(u.WHITE)||this.isStalemate(u.BLACK)||this.isInsufficientMaterial()||this.isFiftyMoveRule(),null)}getPieces(){return this.grid.flat().filter(t=>t!==null)}setPlayerColor(t){this.currentPlayer=t}getPlayerColor(){return this.currentPlayer}}const C={[r.PAWN]:1,[r.KNIGHT]:3,[r.BISHOP]:3.25,[r.ROOK]:5,[r.QUEEN]:9,[r.KING]:0},V={[r.PAWN]:[[0,0,0,0,0,0,0,0],[.5,.5,.5,.5,.5,.5,.5,.5],[.1,.1,.2,.3,.3,.2,.1,.1],[.05,.05,.1,.25,.25,.1,.05,.05],[0,0,0,.2,.2,0,0,0],[.05,-.05,-.1,0,0,-.1,-.05,.05],[.05,.1,.1,-.2,-.2,.1,.1,.05],[0,0,0,0,0,0,0,0]],[r.KNIGHT]:[[-.5,-.4,-.3,-.3,-.3,-.3,-.4,-.5],[-.4,-.2,0,0,0,0,-.2,-.4],[-.3,0,.1,.15,.15,.1,0,-.3],[-.3,.05,.15,.2,.2,.15,.05,-.3],[-.3,0,.15,.2,.2,.15,0,-.3],[-.3,.05,.1,.15,.15,.1,.05,-.3],[-.4,-.2,0,.05,.05,0,-.2,-.4],[-.5,-.4,-.3,-.3,-.3,-.3,-.4,-.5]],[r.BISHOP]:[[-.2,-.1,-.1,-.1,-.1,-.1,-.1,-.2],[-.1,0,0,0,0,0,0,-.1],[-.1,0,.05,.1,.1,.05,0,-.1],[-.1,.05,.05,.1,.1,.05,.05,-.1],[-.1,0,.1,.1,.1,.1,0,-.1],[-.1,.1,.1,.1,.1,.1,.1,-.1],[-.1,.05,0,0,0,0,.05,-.1],[-.2,-.1,-.1,-.1,-.1,-.1,-.1,-.2]],[r.ROOK]:[[0,0,0,0,0,0,0,0],[.05,.1,.1,.1,.1,.1,.1,.05],[-.05,0,0,0,0,0,0,-.05],[-.05,0,0,0,0,0,0,-.05],[-.05,0,0,0,0,0,0,-.05],[-.05,0,0,0,0,0,0,-.05],[-.05,0,0,0,0,0,0,-.05],[0,0,0,.05,.05,0,0,0]],[r.QUEEN]:[[-.2,-.1,-.1,-.05,-.05,-.1,-.1,-.2],[-.1,0,0,0,0,0,0,-.1],[-.1,0,.05,.05,.05,.05,0,-.1],[-.05,0,.05,.05,.05,.05,0,-.05],[0,0,.05,.05,.05,.05,0,-.05],[-.1,.05,.05,.05,.05,.05,0,-.1],[-.1,0,.05,0,0,0,0,-.1],[-.2,-.1,-.1,-.05,-.05,-.1,-.1,-.2]],[r.KING]:[[-.3,-.4,-.4,-.5,-.5,-.4,-.4,-.3],[-.3,-.4,-.4,-.5,-.5,-.4,-.4,-.3],[-.3,-.4,-.4,-.5,-.5,-.4,-.4,-.3],[-.3,-.4,-.4,-.5,-.5,-.4,-.4,-.3],[-.2,-.3,-.3,-.4,-.4,-.3,-.3,-.2],[-.1,-.2,-.2,-.2,-.2,-.2,-.2,-.1],[.2,.2,0,0,0,0,.2,.2],[.2,.3,0,0,0,0,.3,.2]]},M={"3,3":.5,"3,4":.5,"4,3":.5,"4,4":.5,"2,3":.25,"2,4":.25,"3,2":.25,"4,2":.25,"4,5":.25,"3,5":.25,"5,3":.25,"5,4":.25};function D(c,t){const o=c.findKing(t);return o&&c.isSquareUnderAttack(o.x,o.y,t)?-.5:0}function $(c,t,o,i,e,s){const n=V[c];return n?c===r.PAWN&&T(e,t,o,s)>0?0:i?n[7-o][7-t]:n[o][t]:0}function I(c,t,o=!1){let i=0;for(let e=0;e<8;e++)for(let s=0;s<8;s++){const n=c.getPiece(s,e),l=`${s},${e}`;if(!n)continue;let f=C[n.type];f+=$(n.type,s,e,o,c,n.color),n.type===r.PAWN&&T(c,s,e,n.color)===0&&M[l]&&(f+=M[l]),n.type===r.PAWN&&(f+=L(c,s,e,n.color),f+=R(c,s,e,n.color)),n.type===r.KING&&j(c,s,e,n.color)&&(f-=.5),i+=n.color===t?f:-f}return parseFloat(i.toFixed(2))}function R(c,t,o,i){const e=i===u.WHITE?-1:1;let s=0;const n=c.getPiece(t-1,o+e),l=c.getPiece(t+1,o+e);return(n&&n.color===i&&n.type===r.PAWN||l&&l.color===i&&l.type===r.PAWN)&&(s+=.5),s}function L(c,t,o,i){let e=0;const s=q(c,t,o,i),n=_(c,t,o,i)*.25,l=T(c,t,o,i)*4;return s&&(e+=4.5),e-=n+l,e}function _(c,t,o,i){for(let e=0;e<8;e++)if(e!==o&&c.getPiece(t,e)?.type===r.PAWN&&c.getPiece(t,e)?.color===i)return .5;return 0}function T(c,t,o,i){const e=t-1>=0?c.getPiece(t-1,o):null,s=t+1<8?c.getPiece(t+1,o):null;return e&&e.type===r.PAWN&&e.color===i||s&&s.type===r.PAWN&&s.color===i?0:1.5}function j(c,t,o,i){const e=c.getPiece(t,o);return e&&e.type===r.KING?[{dx:-1,dy:0},{dx:1,dy:0},{dx:0,dy:-1},{dx:0,dy:1},{dx:-1,dy:-1},{dx:1,dy:1},{dx:-1,dy:1},{dx:1,dy:-1}].some(({dx:n,dy:l})=>{const f=t+n,h=o+l;if(!c.isWithinBounds(f,h))return!1;const a=c.getPiece(f,h);return!a||a.color!==i||a.type!==r.PAWN}):!1}function q(c,t,o,i){const e=i===u.WHITE?1:-1;for(let n=o+e;n>=0&&n<8;n+=e){const l=c.getPiece(t,n);if(l&&l.type===r.PAWN&&l.color!==i)return!1}const s=[t-1,t+1];for(const n of s)if(n>=0&&n<8)for(let l=o+e;l>=0&&l<8;l+=e){const f=c.getPiece(n,l);if(f&&f.type===r.PAWN&&f.color!==i)return!1}return!0}function U(c,t){return t?{fromX:7-c.fromX,fromY:7-c.fromY,toX:7-c.toX,toY:7-c.toY}:c}function Q(c,t,o=!1){const i=c.getPieces();let e=null;return i.length===3&&p(i,r.KING,t)&&p(i,r.ROOK,t)&&p(i,r.KING,y(t))?e=F(c,t):i.length===4&&p(i,r.KING,t)&&p(i,r.BISHOP,t)&&p(i,r.KNIGHT,t)&&p(i,r.KING,y(t))?e=z(c,t):i.length===4&&p(i,r.KING,t)&&p(i,r.BISHOP,t)&&i.filter(s=>s.type===r.BISHOP&&s.color===t).length===2&&p(i,r.KING,y(t))?e=J(c,t):i.length===3&&p(i,r.KING,t)&&p(i,r.PAWN,t)&&p(i,r.KING,y(t))&&(e=Z(c,t)),e?U(e,t===u.BLACK||o):null}function p(c,t,o){return c.some(i=>i.type===t&&i.color===o)}function y(c){return c===u.WHITE?u.BLACK:u.WHITE}function F(c,t){const o=Y(c,r.KING,y(t)),i=Y(c,r.ROOK,t);return!o||!i?null:o.x<4?{fromX:i.x,fromY:i.y,toX:o.x+1,toY:o.y}:{fromX:i.x,fromY:i.y,toX:o.x-1,toY:o.y}}function z(c,t){const o=Y(c,r.KING,y(t)),i=Y(c,r.KNIGHT,t),e=Y(c,r.BISHOP,t);return!o||!i||!e?null:o.x<4?{fromX:i.x,fromY:i.y,toX:o.x+1,toY:o.y}:{fromX:e.x,fromY:e.y,toX:o.x-1,toY:o.y}}function J(c,t){const o=Y(c,r.KING,y(t)),i=b(c,r.BISHOP,t);return!o||i.length<2?null:{fromX:i[0].x,fromY:i[0].y,toX:o.x,toY:o.y>4?o.y-1:o.y+1}}function Z(c,t){const o=Y(c,r.KING,y(t)),i=Y(c,r.PAWN,t);if(!o||!i)return null;const e=t===u.WHITE?1:-1;return{fromX:i.x,fromY:i.y,toX:i.x,toY:i.y+e}}function Y(c,t,o){for(let i=0;i<8;i++)for(let e=0;e<8;e++){const s=c.getPiece(e,i);if(s&&s.type===t&&s.color===o)return{x:e,y:i}}return null}function b(c,t,o){const i=[];for(let e=0;e<8;e++)for(let s=0;s<8;s++){const n=c.getPiece(s,e);n&&n.type===t&&n.color===o&&i.push({x:s,y:e})}return i}const tt={"e2e4 e7e5 g1f3 b8c6 f1b5":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:4,fromY:1,toX:4,toY:3},{fromX:6,fromY:7,toX:5,toY:5},{fromX:1,fromY:0,toX:2,toY:2},{fromX:5,fromY:7,toX:1,toY:5}],"e2e4 c7c5":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:2,fromY:1,toX:2,toY:3}],"e2e4 c7c5 g1f3 d7d6":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:2,fromY:1,toX:2,toY:3},{fromX:6,fromY:7,toX:5,toY:5},{fromX:3,fromY:1,toX:3,toY:2}],"d2d4 d7d5 c2c4":[{fromX:3,fromY:6,toX:3,toY:4},{fromX:3,fromY:1,toX:3,toY:3},{fromX:2,fromY:6,toX:2,toY:4}],"e2e4 c7c6":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:2,fromY:1,toX:2,toY:2}],"e2e4 c7c6 d2d4 d7d5":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:2,fromY:1,toX:2,toY:2},{fromX:3,fromY:6,toX:3,toY:4},{fromX:3,fromY:1,toX:3,toY:3}],"e2e4 e7e6":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:4,fromY:1,toX:4,toY:2}],"e2e4 e7e6 d2d4 d7d5":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:4,fromY:1,toX:4,toY:2},{fromX:3,fromY:6,toX:3,toY:4},{fromX:3,fromY:1,toX:3,toY:3}],"e2e4 e7e5 g1f3 b8c6 f1c4":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:4,fromY:1,toX:4,toY:3},{fromX:6,fromY:7,toX:5,toY:5},{fromX:1,fromY:0,toX:2,toY:2},{fromX:5,fromY:7,toX:2,toY:4}],"e2e4 g8f6":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:6,fromY:0,toX:5,toY:2}],"e2e4 d7d6":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:3,fromY:1,toX:3,toY:2}],"e2e4 e7e5 g1f3 b8c6 d2d4":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:4,fromY:1,toX:4,toY:3},{fromX:6,fromY:7,toX:5,toY:5},{fromX:1,fromY:0,toX:2,toY:2},{fromX:3,fromY:6,toX:3,toY:4}],"e2e4 e7e5 f2f4":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:4,fromY:1,toX:4,toY:3},{fromX:5,fromY:6,toX:5,toY:4}],c2c4:[{fromX:2,fromY:6,toX:2,toY:4}],"g1f3 d7d5":[{fromX:6,fromY:7,toX:5,toY:5},{fromX:3,fromY:1,toX:3,toY:3}]};function A(c,t){return t?{fromX:7-c.fromX,fromY:7-c.fromY,toX:7-c.toX,toY:7-c.toY}:c}function et(c,t){return t[c]?.[0]??null}class it{constructor(t,o=5e3){this.color=t,this.transpositionTable=new Map,this.maxTime=o,this.killerMoves=new Map,this.startTime=0}openingMoves=tt;transpositionTable;maxTime;startTime;killerMoves;moveHistory=[];historicalMoveScores=new Map;makeMove(t){const o=this.getOpeningMove(t);if(o)return this.moveHistory.push(o),o;const i=this.chooseMove(t);if(i)return this.moveHistory.push(i),i;const e=this.useEndgameTablebase(t);if(e)return this.moveHistory.push(e),e;if(this.shouldUseMCTS(t)){const f=this.mcts(t);return f&&this.moveHistory.push(f),f}let s=null,n=-1/0;const l=10;this.startTime=Date.now();for(let f=1;f<=l;f++){let h=this.getAllValidMoves(t);h=this.sortMoves(h,t,f);for(const a of h){const m=t.getPiece(a.fromX,a.fromY);if(!m)continue;const P=t.getPiece(a.toX,a.toY);t.movePiece(a.fromX,a.fromY,a.toX,a.toY);const d=t.isKingInCheck(this.color)||this.isCriticalMove(m,a,t)?f+1:f,v=this.minimax(t,d-1,-1/0,1/0,!1);if(t.setPiece(a.fromX,a.fromY,m),t.setPiece(a.toX,a.toY,P),v>n&&(n=v,s=a),Date.now()-this.startTime>this.maxTime)break}if(Date.now()-this.startTime>this.maxTime)break}return s&&(this.moveHistory.push(s),this.updateHistoricalScore(s)),s}updateHistoricalScore(t){const o=`${t.fromX},${t.fromY},${t.toX},${t.toY}`,i=this.historicalMoveScores.get(o)||0;this.historicalMoveScores.set(o,i+1)}minimax(t,o,i,e,s){const n=t.toString();if(Date.now()-this.startTime>this.maxTime)return this.evaluatePositionWithKingSafety(t,this.color);if(this.transpositionTable.has(n))return this.transpositionTable.get(n);if(o>1&&!t.isKingInCheck(this.color)&&-this.minimax(t,o-2,-e,-i,!s)>=e)return e;if(o===0||t.isCheckmate(this.color)||t.isCheckmate(this.getOpponentColor())||Date.now()-this.startTime>this.maxTime){const l=this.quiescenceSearch(t,i,e);return this.transpositionTable.set(n,l),l}if(s){let l=-1/0,f=this.getAllValidMoves(t);f=this.sortMoves(f,t,o);for(const h of f){const a=t.getPiece(h.fromX,h.fromY),m=t.getPiece(h.toX,h.toY);t.movePiece(h.fromX,h.fromY,h.toX,h.toY);const P=this.minimax(t,o-1,i,e,!1);if(t.setPiece(h.fromX,h.fromY,a),t.setPiece(h.toX,h.toY,m),l=Math.max(l,P),i=Math.max(i,P),e<=i){this.addKillerMove(o,h);break}}return this.transpositionTable.set(n,l),l}else{let l=1/0,f=this.getAllValidMoves(t);f=this.sortMoves(f,t,o);for(let h=0;h<f.length;h++){const a=f[h],m=t.getPiece(a.fromX,a.fromY),P=t.getPiece(a.toX,a.toY),d=h>3&&o>2?o-1:o,v=t.isKingInCheck(this.getOpponentColor()),k=m&&m.type===r.PAWN&&(a.toY===0||a.toY===7),O=v||k?d+1:d;t.movePiece(a.fromX,a.fromY,a.toX,a.toY);const W=this.minimax(t,O-1,i,e,!0);if(t.setPiece(a.fromX,a.fromY,m),t.setPiece(a.toX,a.toY,P),l=Math.min(l,W),e=Math.min(e,W),e<=i){this.addKillerMove(o,a);break}}return this.transpositionTable.set(n,l),l}}chooseMove(t){const o=this.moveHistory.map(e=>`${e.fromX}${e.fromY}${e.toX}${e.toY}`).join(" "),i=et(o,this.openingMoves);if(i){const e=A(i,this.color===u.BLACK);t.movePiece(e.fromX,e.fromY,e.toX,e.toY);const s=I(t,this.color);if(t.setPiece(e.fromX,e.fromY,t.getPiece(e.toX,e.toY)),t.setPiece(e.toX,e.toY,null),s>=.3)return e}return null}addKillerMove(t,o){const i=this.killerMoves.get(t)??[],e=i.find(s=>s.move.fromX===o.fromX&&s.move.fromY===o.fromY);e?e.score+=1:i.push({move:o,score:1}),this.killerMoves.set(t,i.sort((s,n)=>n.score-s.score).slice(0,2))}quiescenceSearch(t,o,i,e=0){const s=this.getAdaptiveQuiescenceDepth(t);if(e>=s)return I(t,this.color);const n=I(t,this.color);if(n>=i)return i;o<n&&(o=n);const l=this.getAllValidMoves(t).filter(a=>t.isCapture(a.fromX,a.fromY,a.toX,a.toY)),f=this.getAllValidMoves(t).filter(a=>{const m=t.getPiece(a.fromX,a.fromY);return!t.isCapture(a.fromX,a.fromY,a.toX,a.toY)&&m&&(m.type===r.PAWN||m.type===r.KNIGHT)}),h=[...l,...f];for(const a of h){const m=t.getPiece(a.fromX,a.fromY),P=t.getPiece(a.toX,a.toY);t.movePiece(a.fromX,a.fromY,a.toX,a.toY);const X=!t.isKingInCheck(this.color);let d=n;if(X&&(d=-this.quiescenceSearch(t,-i,-o,e+1)),t.setPiece(a.fromX,a.fromY,m),t.setPiece(a.toX,a.toY,P),d>=i)return i;d>o&&(o=d)}return o}getOpponentColor(){return this.color===u.WHITE?u.BLACK:u.WHITE}getAllValidMoves(t){const o=[];for(let i=0;i<8;i++)for(let e=0;e<8;e++){const s=t.getPiece(e,i);if(s&&s.color===this.color){const n=t.getValidMoves(e,i);for(const l of n)if(t.isMoveValid(e,i,l.x,l.y)){const f=t.getPiece(l.x,l.y);t.setPiece(l.x,l.y,s),t.setPiece(e,i,null);const h=!t.isKingInCheck(this.color);t.setPiece(e,i,s),t.setPiece(l.x,l.y,f),h&&o.push({fromX:e,fromY:i,toX:l.x,toY:l.y})}}}return o}sortMoves(t,o,i){return t.sort((e,s)=>{const n=o.getPiece(e.toX,e.toY),l=o.getPiece(s.toX,s.toY),f=n?C[n.type]:0,h=l?C[l.type]:0;if(f!==h)return h-f;const a=M[`${e.toX},${e.toY}`]||0,m=M[`${s.toX},${s.toY}`]||0;if(a!==m)return m-a;const P=this.killerMoves.get(i);if(P&&P.some(v=>v.move.fromX===e.fromX&&v.move.fromY===e.fromY&&v.move.toX===e.toX&&v.move.toY===e.toY))return-1;const X=this.historicalMoveScores.get(`${e.fromX},${e.fromY},${e.toX},${e.toY}`)||0;return(this.historicalMoveScores.get(`${s.fromX},${s.fromY},${s.toX},${s.toY}`)||0)-X})}mcts(t){const i=new Map,e=this.getAllValidMoves(t).filter(a=>a.fromX!==void 0&&a.fromY!==void 0&&a.toX!==void 0&&a.toY!==void 0);if(e.length===0)return null;for(let a=0;a<1e3;a++){const m=e[Math.floor(Math.random()*e.length)];if(!m||m.fromX===void 0||m.fromY===void 0||m.toX===void 0||m.toY===void 0)continue;const P=this.simulateRandomGame(t,m),X=`${m.fromX},${m.fromY},${m.toX},${m.toY}`;if(i.set(X,(i.get(X)??0)+P),Date.now()-this.startTime>this.maxTime)break}const s=Array.from(i.entries()).reduce((a,m)=>m[1]>a[1]?m:a)[0],[n,l,f,h]=s.split(",").map(Number);return{fromX:n,fromY:l,toX:f,toY:h}}getAdaptiveQuiescenceDepth(t){const o=t.getPieceCount();return o<=6?7:o<=12?5:3}evaluatePositionWithKingSafety(t,o){let i=I(t,o);const e=D(t,o);return i+=e,i}simulateRandomGame(t,o){if(!o||o.fromX===void 0||o.fromY===void 0||o.toX===void 0||o.toY===void 0)return console.error("Invalid move:",o),0;const i=t.clone();i.movePiece(o.fromX,o.fromY,o.toX,o.toY);let e=this.color,s=this.getAllValidMoves(i);for(;!i.isGameOver()&&s.length>0;){const n=s[Math.floor(Math.random()*s.length)];if(!n||n.fromX===void 0||n.fromY===void 0||n.toX===void 0||n.toY===void 0){console.error("Invalid random move:",n);break}i.movePiece(n.fromX,n.fromY,n.toX,n.toY),e=e===u.WHITE?u.BLACK:u.WHITE,s=this.getAllValidMoves(i)}return i.getWinner()===this.color?1:i.getWinner()===null?.5:0}shouldUseMCTS(t){return t.getPieceCount()<=10}useEndgameTablebase(t){return t.getPieceCount()<=4?Q(t,this.color):null}isCriticalMove(t,o,i){const e=i.getPiece(o.toX,o.toY);return e&&e.color!==t.color&&e.type!==r.PAWN}getOpeningMove(t){const o=this.getBoardHash(t);if(this.openingMoves[o]){const i=this.openingMoves[o][0],e=A(i,this.color===u.BLACK);t.movePiece(e.fromX,e.fromY,e.toX,e.toY);const s=I(t,this.color);if(t.setPiece(e.fromX,e.fromY,t.getPiece(e.toX,e.toY)),t.setPiece(e.toX,e.toY,null),s>-.5)return e}return null}getBoardHash(t){let o="";for(let i=0;i<8;i++)for(let e=0;e<8;e++){const s=t.getPiece(e,i);if(s){const n=s.color===u.WHITE?s.type:s.type.toLowerCase();o+=n+e+i+" "}}return o.trim()}}class B extends w{hasMoved=!1;_toX=null;_toY=null;_board=null;constructor(t){super(t,r.PAWN)}isValidMove(t,o,i,e,s){if(i<0||i>=8||e<0||e>=8)return!1;const n=s.getPlayerColor(),l=this.color===u.WHITE?1:-1,f=this.color===u.WHITE?1:6,h=(e-o)*l,a=Math.abs(i-t),m=n===u.WHITE?7:0;if(a===0&&h===1&&!s.getPiece(i,e))return e===m?this.handlePromotion(i,e,s):!0;if(a===1&&h===1){if(s.getPiece(i,e)&&this.canCapture(i,e,s))return e===m?this.handlePromotion(i,e,s):!0;if(s.isEnPassantMove(t,o,i,e))return s.captureEnPassantIfValid(t,o,i,e),!0}return a===0&&h===2&&o===f&&!s.getPiece(i,e)&&!s.getPiece(t,o+l)?(s.updateEnPassantTarget(t,o,i,e,this),this.hasMoved=!0,!0):!1}handlePromotion(t,o,i){return this._toX=t,this._toY=o,this._board=i,!0}}var ot=Object.freeze({__proto__:null,Pawn:B});let H;self.onmessage=async c=>{const{boardData:t,aiColor:o}=c.data;H=new it(o);const i=await K.fromData(t),e=H.makeMove(i);let s=null;if(e&&i.isCapture(e.fromX,e.fromY,e.toX,e.toY)){const l=i.getPiece(e.toX,e.toY);l&&(s={capturedWhite:[],capturedBlack:[]},l.color===u.WHITE?s.capturedWhite.push(l.type):s.capturedBlack.push(l.type))}let n=!1;if(e&&i.getPiece(e.fromX,e.fromY)?.type===r.PAWN){const l=i.getPiece(e.fromX,e.fromY);if(l instanceof B){const f=o===u.WHITE?7:0;e.toY===f&&(n=l.handlePromotion(e.toX,e.toY,i))}}self.postMessage({bestMove:e,captureData:s,promotionRequired:n})};export{w as P,r as a,g as c};
//# sourceMappingURL=ai.worker-e4aBx5g4.js.map
