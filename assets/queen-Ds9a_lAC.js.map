{"version":3,"file":"queen-Ds9a_lAC.js","sources":["../src/pieces/queen.ts"],"sourcesContent":["// src/pieces/queen.ts\nimport { BoardInterface, Piece, PieceColor, PieceType } from '../piece';\n\nexport class Queen extends Piece {\n  constructor(color: PieceColor) {\n    super(color, PieceType.QUEEN);\n  }\n\n  isValidMove(\n    fromX: number,\n    fromY: number,\n    toX: number,\n    toY: number,\n    board: BoardInterface,\n  ): boolean {\n    // La reine peut se déplacer en ligne droite ou en diagonale\n    if (\n      fromX === toX || // Déplacement en colonne\n      fromY === toY || // Déplacement en ligne\n      Math.abs(toX - fromX) === Math.abs(toY - fromY) // Déplacement en diagonale\n    ) {\n      // Vérifie que la trajectoire est dégagée\n      if (this.isPathClear(fromX, fromY, toX, toY, board)) {\n        // Vérifie si la cible est vide ou contient une pièce ennemie\n        return this.canCapture(toX, toY, board);\n      }\n    }\n\n    return false;\n  }\n}\n"],"names":[],"mappings":";;AAGO,MAAM,cAAc,KAAM,CAAA;AAAA,EAC/B,YAAY,KAAmB,EAAA;AAC7B,IAAM,KAAA,CAAA,KAAA,EAAO,UAAU,KAAK,CAAA,CAAA;AAAA,GAC9B;AAAA,EAEA,WACE,CAAA,KAAA,EACA,KACA,EAAA,GAAA,EACA,KACA,KACS,EAAA;AAET,IAAA,IACE,KAAU,KAAA,GAAA;AAAA,IACV,KAAU,KAAA,GAAA;AAAA,IACV,IAAA,CAAK,IAAI,GAAM,GAAA,KAAK,MAAM,IAAK,CAAA,GAAA,CAAI,GAAM,GAAA,KAAK,CAC9C,EAAA;AAEA,MAAA,IAAI,KAAK,WAAY,CAAA,KAAA,EAAO,OAAO,GAAK,EAAA,GAAA,EAAK,KAAK,CAAG,EAAA;AAEnD,QAAA,OAAO,IAAK,CAAA,UAAA,CAAW,GAAK,EAAA,GAAA,EAAK,KAAK,CAAA,CAAA;AAAA,OACxC;AAAA,KACF;AAEA,IAAO,OAAA,KAAA,CAAA;AAAA,GACT;AACF;;;;"}