async function g(l,t){switch(l){case r.PAWN:const{Pawn:e}=await Promise.resolve().then(function(){return J});return new e(t);case r.ROOK:const{Rook:i}=await import("./rook-BZmw1Elf.js");return new i(t);case r.KNIGHT:const{Knight:o}=await import("./knight-DrrR1y8X.js");return new o(t);case r.BISHOP:const{Bishop:s}=await import("./bishop-BOYAOhHu.js");return new s(t);case r.QUEEN:const{Queen:n}=await import("./queen-CuMXQofU.js");return new n(t);case r.KING:const{King:c}=await import("./king-dYi68AYF.js");return new c(t);default:throw new Error(`Type de pièce inconnu : ${l}`)}}var f=(l=>(l.WHITE="white",l.BLACK="black",l))(f||{}),r=(l=>(l.PAWN="pawn",l.ROOK="rook",l.KNIGHT="knight",l.BISHOP="bishop",l.QUEEN="queen",l.KING="king",l))(r||{});class w{constructor(t,e){this.color=t,this.type=e}hasMoved=!1;isPathClear(t,e,i,o,s){const n=Math.sign(i-t),c=Math.sign(o-e);let a=t+n,h=e+c;for(;a!==i||h!==o;){if(s.getPiece(a,h)!==null)return!1;a+=n,h+=c}return!0}static isKing(t){return t.type==="king"}canCapture(t,e,i){const o=i.getPiece(t,e);return!o||o.color!==this.color}toData(){return{color:this.color,type:this.type}}static async fromData(t){return await g(t.type,t.color)}}let H=[],N=[];function B(l,t){switch(l){case r.PAWN:return t===f.WHITE?"♙":"♟";case r.ROOK:return t===f.WHITE?"♖":"♜";case r.KNIGHT:return t===f.WHITE?"♘":"♞";case r.BISHOP:return t===f.WHITE?"♗":"♝";case r.QUEEN:return t===f.WHITE?"♕":"♛";case r.KING:return t===f.WHITE?"♔":"♚";default:return""}}function x(l,t){const e=B(l,t);t===f.WHITE?H.push(e):N.push(e),k()}function k(){const l=document.getElementById("capturedWhite"),t=document.getElementById("capturedBlack");l&&(l.textContent=H.join(" ")),t&&(t.textContent=N.join(" "))}class Y{grid;enPassantTarget=null;halfMoveCount=0;currentPlayer=f.WHITE;constructor(){this.grid=[]}async init(){this.grid=await this.initializeBoard()}async initializeBoard(){const t=Array(8).fill(null).map(()=>Array(8).fill(null));return t[0]=[await g(r.ROOK,f.WHITE),await g(r.KNIGHT,f.WHITE),await g(r.BISHOP,f.WHITE),await g(r.QUEEN,f.WHITE),await g(r.KING,f.WHITE),await g(r.BISHOP,f.WHITE),await g(r.KNIGHT,f.WHITE),await g(r.ROOK,f.WHITE)],t[1]=await Promise.all(Array(8).fill(null).map(()=>g(r.PAWN,f.WHITE))),t[7]=[await g(r.ROOK,f.BLACK),await g(r.KNIGHT,f.BLACK),await g(r.BISHOP,f.BLACK),await g(r.QUEEN,f.BLACK),await g(r.KING,f.BLACK),await g(r.BISHOP,f.BLACK),await g(r.KNIGHT,f.BLACK),await g(r.ROOK,f.BLACK)],t[6]=await Promise.all(Array(8).fill(null).map(()=>g(r.PAWN,f.BLACK))),t}isWithinBounds(t,e){return t>=0&&t<8&&e>=0&&e<8}getPiece(t,e){return this.grid[e][t]}getValidMoves(t,e){let i=null;if(this.isWithinBounds(t,e)&&(i=this.getPiece(t,e)),!i)return[];const o=[];for(let s=0;s<8;s++)for(let n=0;n<8;n++)i.isValidMove(t,e,n,s,this)&&o.push({x:n,y:s});return o}getKingInCheck(){return this.isKingInCheck(f.WHITE)?this.findKing(f.WHITE):this.isKingInCheck(f.BLACK)?this.findKing(f.BLACK):null}movePiece(t,e,i,o){if(!this.isWithinBounds(t,e)||!this.isWithinBounds(i,o)||["__proto__","constructor","prototype"].includes(e.toString())||["__proto__","constructor","prototype"].includes(o.toString()))return!1;const s=this.getPiece(t,e);if(s&&s.isValidMove(t,e,i,o,this)){const n=this.getPiece(i,o);if(n&&n.type===r.KING)return!1;if(s?.type===r.KING&&Math.abs(i-t)===2)return this.isCastlingValid(s,t,e,i)?(this.handleCastling(i,e),s.hasMoved=!0,!0):!1;if(s?.type===r.PAWN&&this.isEnPassantMove(t,e,i,o)&&this.captureEnPassant(t,e,i,o),this.grid[o][i]=s,this.grid[e][t]=null,s.hasMoved=!0,this.isKingInCheck(s.color))return this.grid[e][t]=s,this.grid[o][i]=n,!1;"hasMoved"in s&&(s.hasMoved=!0),this.updateEnPassantTarget(t,e,i,o,s),this.halfMoveCount=s.type===r.PAWN||n?0:this.halfMoveCount+1;const c=s.color===f.WHITE?f.BLACK:f.WHITE;return this.isCheckmate(c),!0}return!1}isCastlingValid(t,e,i,o){const s=o>e?1:-1,n=o>e?7:0,c=this.getPiece(n,i);if(c?.type!==r.ROOK||c.hasMoved||t.hasMoved)return!1;for(let a=e+s;a!==o+s;a+=s)if(this.getPiece(a,i)||this.isSquareUnderAttack(a,i,t.color))return!1;return!0}handleCastling(t,e){if(t===6){const i=this.getPiece(7,e),o=this.getPiece(4,e);i?.type===r.ROOK&&!i.hasMoved&&o?.type===r.KING&&(this.setPiece(5,e,i),this.setPiece(7,e,null),this.setPiece(6,e,o),this.setPiece(4,e,null))}else if(t===2){const i=this.getPiece(0,e),o=this.getPiece(4,e);i?.type===r.ROOK&&!i.hasMoved&&o?.type===r.KING&&(this.setPiece(3,e,i),this.setPiece(0,e,null),this.setPiece(2,e,o),this.setPiece(4,e,null))}}updateEnPassantTarget(t,e,i,o,s){s?.type===r.PAWN&&Math.abs(o-e)===2&&t===i?this.enPassantTarget={x:i,y:(e+o)/2}:this.enPassantTarget=null}captureEnPassant(t,e,i,o){const s=this.getPiece(t,e);if(this.isEnPassantMove(t,e,i,o)&&s?.type===r.PAWN){const n=s.color===f.WHITE?-1:1,c=o+n,a=this.getPiece(i,c);if(a&&a.type===r.PAWN){this.grid[c][i]=null;const h={capturedWhite:[],capturedBlack:[]};return a.color===f.WHITE?h.capturedWhite.push(a.type):h.capturedBlack.push(a.type),x(a.type,a.color),h}}return null}isEnPassantMove(t,e,i,o){return this.enPassantTarget?this.getPiece(t,e)?.type===r.PAWN&&i===this.enPassantTarget.x&&o===this.enPassantTarget.y&&Math.abs(t-i)===1&&Math.abs(e-o)===1:!1}async promotePawn(t,e,i){const o=this.getPiece(t,e)?.color;if(o)switch(i){case"queen":this.grid[e][t]=await g(r.QUEEN,o);break;case"rook":this.grid[e][t]=await g(r.ROOK,o);break;case"bishop":this.grid[e][t]=await g(r.BISHOP,o);break;case"knight":this.grid[e][t]=await g(r.KNIGHT,o);break}}isKingInCheck(t){const e=this.findKing(t);if(!e)return!1;for(let i=0;i<8;i++)for(let o=0;o<8;o++){const s=this.getPiece(o,i);if(s&&s.color!==t&&s.isValidMove(o,i,e.x,e.y,this))return!0}return!1}isCheckmate(t){if(!this.isKingInCheck(t))return!1;for(let e=0;e<8;e++)for(let i=0;i<8;i++){const o=this.getPiece(i,e);if(o&&o.color===t){const s=this.getValidMoves(i,e);for(const n of s){const c=this.getPiece(n.x,n.y);this.grid[n.y][n.x]=o,this.grid[e][i]=null;const a=!this.isKingInCheck(t);if(this.grid[e][i]=o,this.grid[n.y][n.x]=c,a)return!1}}}return!0}isStalemate(t){if(this.isKingInCheck(t))return!1;for(let e=0;e<8;e++)for(let i=0;i<8;i++){const o=this.getPiece(i,e);if(o&&o.color===t){for(let s=0;s<8;s++)for(let n=0;n<8;n++)if(o.isValidMove(i,e,n,s,this)){const c=this.getPiece(n,s);this.grid[s][n]=o,this.grid[e][i]=null;const a=!this.isKingInCheck(t);if(this.grid[e][i]=o,this.grid[s][n]=c,a)return!1}}}return!0}findKing(t){for(let e=0;e<8;e++)for(let i=0;i<8;i++){const o=this.getPiece(i,e);if(o&&o?.type===r.KING&&o.color===t)return{x:i,y:e}}return null}isKing(t,e){return this.getPiece(t,e)?.type===r.KING}isSquareUnderAttack(t,e,i){for(let o=0;o<8;o++)for(let s=0;s<8;s++){const n=this.getPiece(s,o);if(n&&n.color!==i&&n.isValidMove(s,o,t,e,this))return!0}return!1}isInsufficientMaterial(){const t=this.grid.flat().filter(e=>e!==null);return t.length<=2?!0:t.length===3&&t.some(e=>e?.type===r.BISHOP||e?.type===r.KNIGHT)}isFiftyMoveRule(){return this.halfMoveCount>=50}setPiece(t,e,i){this.grid[e][t]=i}isMoveValid(t,e,i,o){const s=this.getPiece(t,e);if(!s||i<0||i>=8||o<0||o>=8||!s.isValidMove(t,e,i,o,this))return!1;const n=this.getPiece(i,o);return!(n&&n.color===s.color)}isCapture(t,e,i,o){const s=this.isWithinBounds(t,e)?this.getPiece(t,e):null,n=this.isWithinBounds(i,o)?this.getPiece(i,o):null;return s!==null&&n!==null&&s.color!==n.color}static async fromData(t){const e=new Y;return await e.init(),e.grid=await Promise.all(t.grid.map(async i=>Promise.all(i.map(async o=>o?await w.fromData(o):null)))),e}toData(){return{grid:this.grid.map(t=>t.map(e=>e?e.toData():null))}}isAdjacentToAnotherKing(t,e,i){const o=[{dx:-1,dy:-1},{dx:-1,dy:0},{dx:-1,dy:1},{dx:0,dy:-1},{dx:0,dy:1},{dx:1,dy:-1},{dx:1,dy:0},{dx:1,dy:1}];for(const{dx:s,dy:n}of o){const c=t+s,a=e+n,h=this.isWithinBounds(c,a)?this.getPiece(c,a):null;if(h?.type===r.KING&&h.color!==i)return!0}return!1}clone(){const t=new Y;return t.grid=this.grid.map(e=>e.map(i=>i?Object.create(Object.getPrototypeOf(i),Object.getOwnPropertyDescriptors(i)):null)),t.enPassantTarget=this.enPassantTarget?{...this.enPassantTarget}:null,t.halfMoveCount=this.halfMoveCount,t}getPieceCount(){return this.grid.flat().filter(t=>t!==null).length}isGameOver(){return this.isCheckmate(f.WHITE)||this.isCheckmate(f.BLACK)||this.isStalemate(f.WHITE)||this.isStalemate(f.BLACK)||this.isInsufficientMaterial()?!0:this.isFiftyMoveRule()}getWinner(){return this.isCheckmate(f.BLACK)?f.WHITE:this.isCheckmate(f.WHITE)?f.BLACK:(this.isStalemate(f.WHITE)||this.isStalemate(f.BLACK)||this.isInsufficientMaterial()||this.isFiftyMoveRule(),null)}getPieces(){return this.grid.flat().filter(t=>t!==null)}setPlayerColor(t){this.currentPlayer=t}getPlayerColor(){return this.currentPlayer}}const O={[r.PAWN]:1,[r.KNIGHT]:3,[r.BISHOP]:3.25,[r.ROOK]:5,[r.QUEEN]:9,[r.KING]:0},G={[r.PAWN]:[[0,0,0,0,0,0,0,0],[.5,.5,.5,.5,.5,.5,.5,.5],[.1,.1,.2,.3,.3,.2,.1,.1],[.05,.05,.1,.25,.25,.1,.05,.05],[0,0,0,.2,.2,0,0,0],[.05,-.05,-.1,0,0,-.1,-.05,.05],[.05,.1,.1,-.2,-.2,.1,.1,.05],[0,0,0,0,0,0,0,0]],[r.KNIGHT]:[[-.5,-.4,-.3,-.3,-.3,-.3,-.4,-.5],[-.4,-.2,0,0,0,0,-.2,-.4],[-.3,0,.1,.15,.15,.1,0,-.3],[-.3,.05,.15,.2,.2,.15,.05,-.3],[-.3,0,.15,.2,.2,.15,0,-.3],[-.3,.05,.1,.15,.15,.1,.05,-.3],[-.4,-.2,0,.05,.05,0,-.2,-.4],[-.5,-.4,-.3,-.3,-.3,-.3,-.4,-.5]],[r.BISHOP]:[[-.2,-.1,-.1,-.1,-.1,-.1,-.1,-.2],[-.1,0,0,0,0,0,0,-.1],[-.1,0,.05,.1,.1,.05,0,-.1],[-.1,.05,.05,.1,.1,.05,.05,-.1],[-.1,0,.1,.1,.1,.1,0,-.1],[-.1,.1,.1,.1,.1,.1,.1,-.1],[-.1,.05,0,0,0,0,.05,-.1],[-.2,-.1,-.1,-.1,-.1,-.1,-.1,-.2]],[r.ROOK]:[[0,0,0,0,0,0,0,0],[.05,.1,.1,.1,.1,.1,.1,.05],[-.05,0,0,0,0,0,0,-.05],[-.05,0,0,0,0,0,0,-.05],[-.05,0,0,0,0,0,0,-.05],[-.05,0,0,0,0,0,0,-.05],[-.05,0,0,0,0,0,0,-.05],[0,0,0,.05,.05,0,0,0]],[r.QUEEN]:[[-.2,-.1,-.1,-.05,-.05,-.1,-.1,-.2],[-.1,0,0,0,0,0,0,-.1],[-.1,0,.05,.05,.05,.05,0,-.1],[-.05,0,.05,.05,.05,.05,0,-.05],[0,0,.05,.05,.05,.05,0,-.05],[-.1,.05,.05,.05,.05,.05,0,-.1],[-.1,0,.05,0,0,0,0,-.1],[-.2,-.1,-.1,-.05,-.05,-.1,-.1,-.2]],[r.KING]:[[-.3,-.4,-.4,-.5,-.5,-.4,-.4,-.3],[-.3,-.4,-.4,-.5,-.5,-.4,-.4,-.3],[-.3,-.4,-.4,-.5,-.5,-.4,-.4,-.3],[-.3,-.4,-.4,-.5,-.5,-.4,-.4,-.3],[-.2,-.3,-.3,-.4,-.4,-.3,-.3,-.2],[-.1,-.2,-.2,-.2,-.2,-.2,-.2,-.1],[.2,.2,0,0,0,0,.2,.2],[.2,.3,0,0,0,0,.3,.2]]},K={"3,3":.5,"3,4":.5,"4,3":.5,"4,4":.5,"2,3":.25,"2,4":.25,"3,2":.25,"4,2":.25,"4,5":.25,"3,5":.25,"5,3":.25,"5,4":.25};function W(l,t){let e=0;for(let i=0;i<8;i++)for(let o=0;o<8;o++){const s=l.getPiece(o,i);if(s){let n=O[s.type];const c=G[s.type];if(c){const u=t===f.WHITE?i:7-i;n+=c[u][o]}const a=t===f.WHITE?i:7-i,h=`${o},${a}`;K[h]&&(n+=K[h]),s.type===r.PAWN&&(n+=S(l,o,i,s.color),L(l,o,i,s.color)&&(n+=1)),s.type===r.KING&&D(l,o,i,s.color)&&(n-=.5),e+=s.color===t?n:-n}}return parseFloat(e.toFixed(2))}function S(l,t,e,i){let o=0;return o-=V(l,t,e,i)*1.5,o-=R(l,t,e,i)*1.5,o}function V(l,t,e,i){for(let o=0;o<8;o++)if(o!==e&&l.getPiece(t,o)?.type===r.PAWN&&l.getPiece(t,o)?.color===i)return .5;return 0}function R(l,t,e,i){const o=t-1>=0?l.getPiece(t-1,e):null,s=t+1<8?l.getPiece(t+1,e):null;return(!o||o.type!==r.PAWN||o.color!==i)&&(!s||s.type!==r.PAWN||s.color!==i)?1.5:0}function D(l,t,e,i){const o=l.getPiece(t,e);return o&&o.type===r.KING?[{dx:-1,dy:0},{dx:1,dy:0},{dx:0,dy:-1},{dx:0,dy:1},{dx:-1,dy:-1},{dx:1,dy:1},{dx:-1,dy:1},{dx:1,dy:-1}].some(({dx:n,dy:c})=>{const a=t+n,h=e+c;if(l.isWithinBounds(a,h)){const u=l.getPiece(a,h);return!u||u.color!==i||u.type!==r.PAWN}return!0}):!1}function L(l,t,e,i){const o=i===f.WHITE?-1:1;for(let n=e+o;n>=0&&n<8;n+=o){const c=l.getPiece(t,n);if(c&&c.type===r.PAWN&&c.color!==i)return!1}return[t-1,t+1].every(n=>{if(n<0||n>=8)return!0;for(let c=0;c<8;c++){const a=l.getPiece(n,c);if(a&&a.type===r.PAWN&&a.color===i)return!1}return!0})}function _(l,t){const e=l.getPieces();return e.length===3&&P(e,r.KING,t)&&P(e,r.ROOK,t)&&P(e,r.KING,I(t))?j(l,t):e.length===4&&P(e,r.KING,t)&&P(e,r.BISHOP,t)&&P(e,r.KNIGHT,t)&&P(e,r.KING,I(t))?U(l,t):e.length===4&&P(e,r.KING,t)&&P(e,r.BISHOP,t)&&e.filter(i=>i.type===r.BISHOP&&i.color===t).length===2&&P(e,r.KING,I(t))?q(l,t):e.length===3&&P(e,r.KING,t)&&P(e,r.PAWN,t)&&P(e,r.KING,I(t))?Q(l,t):null}function P(l,t,e){return l.some(i=>i.type===t&&i.color===e)}function I(l){return l===f.WHITE?f.BLACK:f.WHITE}function j(l,t){const e=y(l,r.KING,I(t)),i=y(l,r.ROOK,t);return!e||!i?null:e.x<4?{fromX:i.x,fromY:i.y,toX:e.x+1,toY:e.y}:{fromX:i.x,fromY:i.y,toX:e.x-1,toY:e.y}}function U(l,t){const e=y(l,r.KING,I(t)),i=y(l,r.KNIGHT,t),o=y(l,r.BISHOP,t);return!e||!i||!o?null:e.x<4?{fromX:i.x,fromY:i.y,toX:e.x+1,toY:e.y}:{fromX:o.x,fromY:o.y,toX:e.x-1,toY:e.y}}function q(l,t){const e=y(l,r.KING,I(t)),i=$(l,r.BISHOP,t);return!e||i.length<2?null:{fromX:i[0].x,fromY:i[0].y,toX:e.x,toY:e.y>4?e.y-1:e.y+1}}function Q(l,t){const e=y(l,r.KING,I(t)),i=y(l,r.PAWN,t);if(!e||!i)return null;const o=t===f.WHITE?1:-1;return{fromX:i.x,fromY:i.y,toX:i.x,toY:i.y+o}}function y(l,t,e){for(let i=0;i<8;i++)for(let o=0;o<8;o++){const s=l.getPiece(o,i);if(s&&s.type===t&&s.color===e)return{x:o,y:i}}return null}function $(l,t,e){const i=[];for(let o=0;o<8;o++)for(let s=0;s<8;s++){const n=l.getPiece(s,o);n&&n.type===t&&n.color===e&&i.push({x:s,y:o})}return i}const F={"e2e4 e7e5 g1f3 b8c6 f1b5":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:4,fromY:1,toX:4,toY:3},{fromX:6,fromY:7,toX:5,toY:5},{fromX:1,fromY:0,toX:2,toY:2},{fromX:5,fromY:7,toX:1,toY:5}],"e2e4 c7c5":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:2,fromY:1,toX:2,toY:3}],"e2e4 c7c5 g1f3 d7d6":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:2,fromY:1,toX:2,toY:3},{fromX:6,fromY:7,toX:5,toY:5},{fromX:3,fromY:1,toX:3,toY:2}],"d2d4 d7d5 c2c4":[{fromX:3,fromY:6,toX:3,toY:4},{fromX:3,fromY:1,toX:3,toY:3},{fromX:2,fromY:6,toX:2,toY:4}],"e2e4 c7c6":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:2,fromY:1,toX:2,toY:2}],"e2e4 c7c6 d2d4 d7d5":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:2,fromY:1,toX:2,toY:2},{fromX:3,fromY:6,toX:3,toY:4},{fromX:3,fromY:1,toX:3,toY:3}],"e2e4 e7e6":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:4,fromY:1,toX:4,toY:2}],"e2e4 e7e6 d2d4 d7d5":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:4,fromY:1,toX:4,toY:2},{fromX:3,fromY:6,toX:3,toY:4},{fromX:3,fromY:1,toX:3,toY:3}],"e2e4 e7e5 g1f3 b8c6 f1c4":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:4,fromY:1,toX:4,toY:3},{fromX:6,fromY:7,toX:5,toY:5},{fromX:1,fromY:0,toX:2,toY:2},{fromX:5,fromY:7,toX:2,toY:4}],"e2e4 g8f6":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:6,fromY:0,toX:5,toY:2}],"e2e4 d7d6":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:3,fromY:1,toX:3,toY:2}],"e2e4 e7e5 g1f3 b8c6 d2d4":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:4,fromY:1,toX:4,toY:3},{fromX:6,fromY:7,toX:5,toY:5},{fromX:1,fromY:0,toX:2,toY:2},{fromX:3,fromY:6,toX:3,toY:4}],"e2e4 e7e5 f2f4":[{fromX:4,fromY:6,toX:4,toY:4},{fromX:4,fromY:1,toX:4,toY:3},{fromX:5,fromY:6,toX:5,toY:4}],c2c4:[{fromX:2,fromY:6,toX:2,toY:4}],"g1f3 d7d5":[{fromX:6,fromY:7,toX:5,toY:5},{fromX:3,fromY:1,toX:3,toY:3}]};class z{constructor(t,e=5e3){this.color=t,this.transpositionTable=new Map,this.maxTime=e,this.killerMoves=new Map,this.startTime=0}openingMoves=F;transpositionTable;maxTime;startTime;killerMoves;makeMove(t){const e=this.getOpeningMove(t);if(e)return e;const i=this.useEndgameTablebase(t);if(i)return i;if(this.shouldUseMCTS(t))return this.mcts(t);let o=null,s=-1/0;const n=10;this.startTime=Date.now();for(let c=1;c<=n;c++){let a=this.getAllValidMoves(t);a=this.sortMoves(a,t,c);for(const h of a){const u=t.getPiece(h.fromX,h.fromY);if(!u)continue;const m=t.getPiece(h.toX,h.toY);t.movePiece(h.fromX,h.fromY,h.toX,h.toY);const v=t.isKingInCheck(this.color)||this.isCriticalMove(u,h,t)?c+1:c,d=this.minimax(t,v-1,-1/0,1/0,!1);if(t.setPiece(h.fromX,h.fromY,u),t.setPiece(h.toX,h.toY,m),d>s&&(s=d,o=h),Date.now()-this.startTime>this.maxTime)break}if(Date.now()-this.startTime>this.maxTime)break}return o}minimax(t,e,i,o,s){const n=t.toString();if(Date.now()-this.startTime>this.maxTime)return W(t,this.color);if(this.transpositionTable.has(n))return this.transpositionTable.get(n);if(e>1&&!t.isKingInCheck(this.color)&&-this.minimax(t,e-2,-o,-i,!s)>=o)return o;if(e===0||t.isCheckmate(this.color)||t.isCheckmate(this.getOpponentColor())||Date.now()-this.startTime>this.maxTime){const c=this.quiescenceSearch(t,i,o);return this.transpositionTable.set(n,c),c}if(s){let c=-1/0,a=this.getAllValidMoves(t);a=this.sortMoves(a,t,e);for(let h=0;h<a.length;h++){const u=a[h],m=t.getPiece(u.fromX,u.fromY),p=t.getPiece(u.toX,u.toY),d=h>3&&e>2?e-1:e,M=t.isKingInCheck(this.color),T=m&&m.type===r.PAWN&&(u.toY===0||u.toY===7),C=M||T?d+1:d;t.movePiece(u.fromX,u.fromY,u.toX,u.toY);const X=this.minimax(t,C-1,i,o,!1);if(t.setPiece(u.fromX,u.fromY,m),t.setPiece(u.toX,u.toY,p),c=Math.max(c,X),i=Math.max(i,X),o<=i){this.addKillerMove(e,u);break}}return this.transpositionTable.set(n,c),c}else{let c=1/0,a=this.getAllValidMoves(t);a=this.sortMoves(a,t,e);for(let h=0;h<a.length;h++){const u=a[h],m=t.getPiece(u.fromX,u.fromY),p=t.getPiece(u.toX,u.toY),d=h>3&&e>2?e-1:e,M=t.isKingInCheck(this.getOpponentColor()),T=m&&m.type===r.PAWN&&(u.toY===0||u.toY===7),C=M||T?d+1:d;t.movePiece(u.fromX,u.fromY,u.toX,u.toY);const X=this.minimax(t,C-1,i,o,!0);if(t.setPiece(u.fromX,u.fromY,m),t.setPiece(u.toX,u.toY,p),c=Math.min(c,X),o=Math.min(o,X),o<=i){this.addKillerMove(e,u);break}}return this.transpositionTable.set(n,c),c}}addKillerMove(t,e){const i=this.killerMoves.get(t)||[],o=i.find(s=>s.move.fromX===e.fromX&&s.move.fromY===e.fromY&&s.move.toX===e.toX&&s.move.toY===e.toY);o?o.score+=1:i.push({move:e,score:1}),i.sort((s,n)=>n.score-s.score),this.killerMoves.set(t,i)}quiescenceSearch(t,e,i,o=0){if(o>=10)return W(t,this.color);const n=W(t,this.color);if(n>=i)return i;e<n&&(e=n);const c=this.getAllValidMoves(t).filter(a=>t.isCapture(a.fromX,a.fromY,a.toX,a.toY));for(const a of c){const h=t.getPiece(a.fromX,a.fromY),u=t.getPiece(a.toX,a.toY);if(t.movePiece(a.fromX,a.fromY,a.toX,a.toY),!t.isKingInCheck(this.color)){const p=-this.quiescenceSearch(t,-i,-e,o+1);if(t.setPiece(a.fromX,a.fromY,h),t.setPiece(a.toX,a.toY,u),p>=i)return i;p>e&&(e=p)}else t.setPiece(a.fromX,a.fromY,h),t.setPiece(a.toX,a.toY,u)}return e}getOpponentColor(){return this.color===f.WHITE?f.BLACK:f.WHITE}getAllValidMoves(t){const e=[];for(let i=0;i<8;i++)for(let o=0;o<8;o++){const s=t.getPiece(o,i);if(s&&s.color===this.color){const n=t.getValidMoves(o,i);for(const c of n)if(t.isMoveValid(o,i,c.x,c.y)){const a=t.getPiece(c.x,c.y);t.setPiece(c.x,c.y,s),t.setPiece(o,i,null);const h=!t.isKingInCheck(this.color);t.setPiece(o,i,s),t.setPiece(c.x,c.y,a),h&&e.push({fromX:o,fromY:i,toX:c.x,toY:c.y})}}}return e}sortMoves(t,e,i){return t.sort((o,s)=>{const n=this.killerMoves.get(i);if(n&&n.some(m=>m.move.fromX===o.fromX&&m.move.fromY===o.fromY))return-1;const c=e.getPiece(o.toX,o.toY),a=e.getPiece(s.toX,s.toY);if(c&&!a)return-1;if(!c&&a)return 1;const h=K[`${o.toX},${o.toY}`]||0;return(K[`${s.toX},${s.toY}`]||0)-h})}mcts(t){const i=new Map,o=this.getAllValidMoves(t);for(let u=0;u<1e3;u++){const m=o[Math.floor(Math.random()*o.length)];if(!m||m.fromX===void 0||m.fromY===void 0||m.toX===void 0||m.toY===void 0)continue;const p=this.simulateRandomGame(t,m),v=`${m.fromX},${m.fromY},${m.toX},${m.toY}`;i.set(v,(i.get(v)||0)+p)}if(i.size===0)return null;const s=Array.from(i.entries()).reduce((u,m)=>m[1]>u[1]?m:u)[0],[n,c,a,h]=s.split(",").map(Number);return{fromX:n,fromY:c,toX:a,toY:h}}simulateRandomGame(t,e){if(!e||e.fromX===void 0||e.fromY===void 0||e.toX===void 0||e.toY===void 0)return console.error("Invalid move:",e),0;const i=t.clone();i.movePiece(e.fromX,e.fromY,e.toX,e.toY);let o=this.color,s=this.getAllValidMoves(i);for(;!i.isGameOver()&&s.length>0;){const n=s[Math.floor(Math.random()*s.length)];if(!n||n.fromX===void 0||n.fromY===void 0||n.toX===void 0||n.toY===void 0){console.error("Invalid random move:",n);break}i.movePiece(n.fromX,n.fromY,n.toX,n.toY),o=o===f.WHITE?f.BLACK:f.WHITE,s=this.getAllValidMoves(i)}return i.getWinner()===this.color?1:i.getWinner()===null?.5:0}shouldUseMCTS(t){return t.getPieceCount()<=10}useEndgameTablebase(t){return t.getPieceCount()<=4?_(t,this.color):null}isCriticalMove(t,e,i){const o=i.getPiece(e.toX,e.toY);return o&&o.color!==t.color||i.isKingInCheck(t.color)}getOpeningMove(t){const e=this.getBoardHash(t);return this.openingMoves[e]?this.openingMoves[e][0]:null}getBoardHash(t){let e="";for(let i=0;i<8;i++)for(let o=0;o<8;o++){const s=t.getPiece(o,i);if(s){const n=s.color===f.WHITE?s.type:s.type.toLowerCase();e+=n+o+i+" "}}return e.trim()}}class A extends w{hasMoved=!1;_toX=null;_toY=null;_board=null;constructor(t){super(t,r.PAWN)}isValidMove(t,e,i,o,s){const n=s.getPlayerColor(),c=this.color===f.WHITE?1:-1,a=this.color===f.WHITE?1:6,h=(o-e)*c,u=Math.abs(i-t),m=n===f.WHITE?7:0;if(u===0&&h===1&&!s.getPiece(i,o))return o===m?this.handlePromotion(i,o,s):!0;if(u===1&&h===1){if(s.getPiece(i,o)&&this.canCapture(i,o,s))return o===m?this.handlePromotion(i,o,s):!0;if(s.isEnPassantMove(t,e,i,o))return!0}return u===0&&h===2&&e===a&&!s.getPiece(i,o)&&!s.getPiece(t,e+c)?(s.updateEnPassantTarget(t,e,i,o,this),!0):!1}handlePromotion(t,e,i){return this._toX=t,this._toY=e,this._board=i,!0}}var J=Object.freeze({__proto__:null,Pawn:A});let E;self.onmessage=async l=>{const{boardData:t,aiColor:e}=l.data;E=new z(e);const i=await Y.fromData(t),o=E.makeMove(i);let s=null;if(o&&i.isCapture(o.fromX,o.fromY,o.toX,o.toY)){const c=i.getPiece(o.toX,o.toY);c&&(s={capturedWhite:[],capturedBlack:[]},c.color===f.WHITE?s.capturedWhite.push(c.type):s.capturedBlack.push(c.type))}let n=!1;if(o&&i.getPiece(o.fromX,o.fromY)?.type===r.PAWN){const c=i.getPiece(o.fromX,o.fromY);if(c instanceof A){const a=e===f.WHITE?7:0;o.toY===a&&(n=c.handlePromotion(o.toX,o.toY,i))}}self.postMessage({bestMove:o,captureData:s,promotionRequired:n})};export{w as P,r as a,g as c};
//# sourceMappingURL=ai.worker-Cx4swFQy.js.map
