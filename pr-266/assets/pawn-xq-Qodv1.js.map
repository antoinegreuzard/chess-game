{"version":3,"file":"pawn-xq-Qodv1.js","sources":["../../src/pieces/pawn.ts"],"sourcesContent":["// src/pieces/pawn.ts\nimport { BoardInterface, Piece, PieceColor, PieceType } from '../piece';\n\nexport class Pawn extends Piece {\n  public hasMoved: boolean = false;\n  private _toX: number | null = null;\n  private _toY: number | null = null;\n  private _board: BoardInterface | null = null;\n\n  constructor(color: PieceColor) {\n    super(color, PieceType.PAWN);\n  }\n\n  isValidMove(\n    fromX: number,\n    fromY: number,\n    toX: number,\n    toY: number,\n    board: BoardInterface,\n  ): boolean {\n    if (toX < 0 || toX >= 8 || toY < 0 || toY >= 8) {\n      return false;\n    }\n\n    const direction = this.color === PieceColor.WHITE ? -1 : 1;\n    const startRow = this.color === PieceColor.WHITE ? 6 : 1;\n    const distanceY = (toY - fromY) * direction;\n    const distanceX = Math.abs(toX - fromX);\n    const promotionRow = this.color === PieceColor.WHITE ? 0 : 7;\n\n    if (distanceX === 0 && distanceY === 1 && !board.getPiece(toX, toY)) {\n      // Vérifie la rangée de promotion et déclenche la promotion uniquement à cette rangée\n      if (toY === promotionRow) {\n        return this.handlePromotion(toX, toY, board);\n      }\n\n      return true;\n    }\n\n    if (distanceX === 1 && distanceY === 1) {\n      if (board.getPiece(toX, toY) && this.canCapture(toX, toY, board)) {\n        if (toY === promotionRow) {\n          return this.handlePromotion(toX, toY, board);\n        }\n        return true;\n      }\n\n      // Capture en passant\n      if (board.isEnPassantMove(fromX, fromY, toX, toY)) {\n        board.captureEnPassantIfValid(fromX, fromY, toX, toY);\n        return true;\n      }\n    }\n\n    if (\n      distanceX === 0 &&\n      distanceY === 2 &&\n      fromY === startRow &&\n      !board.getPiece(toX, toY) &&\n      !board.getPiece(fromX, fromY + direction)\n    ) {\n      board.updateEnPassantTarget(fromX, fromY, toX, toY, this);\n      this.hasMoved = true; // Marque que le pion a bougé\n      return true;\n    }\n\n    return false;\n  }\n\n  handlePromotion(toX: number, toY: number, board: BoardInterface): boolean {\n    this._toX = toX;\n    this._toY = toY;\n    this._board = board;\n    return true;\n  }\n}\n"],"names":["Pawn","Piece","color","PieceType","fromX","fromY","toX","toY","board","direction","PieceColor","startRow","distanceY","distanceX","promotionRow"],"mappings":"iDAGO,MAAMA,UAAaC,CAAM,CACvB,SAAoB,GACnB,KAAsB,KACtB,KAAsB,KACtB,OAAgC,KAExC,YAAYC,EAAmB,CACvB,MAAAA,EAAOC,EAAU,IAAI,CAAA,CAG7B,YACEC,EACAC,EACAC,EACAC,EACAC,EACS,CACT,GAAIF,EAAM,GAAKA,GAAO,GAAKC,EAAM,GAAKA,GAAO,EACpC,MAAA,GAGT,MAAME,EAAY,KAAK,QAAUC,EAAW,MAAQ,GAAK,EACnDC,EAAW,KAAK,QAAUD,EAAW,MAAQ,EAAI,EACjDE,GAAaL,EAAMF,GAASI,EAC5BI,EAAY,KAAK,IAAIP,EAAMF,CAAK,EAChCU,EAAe,KAAK,QAAUJ,EAAW,MAAQ,EAAI,EAEvD,GAAAG,IAAc,GAAKD,IAAc,GAAK,CAACJ,EAAM,SAASF,EAAKC,CAAG,EAEhE,OAAIA,IAAQO,EACH,KAAK,gBAAgBR,EAAKC,EAAKC,CAAK,EAGtC,GAGL,GAAAK,IAAc,GAAKD,IAAc,EAAG,CAClC,GAAAJ,EAAM,SAASF,EAAKC,CAAG,GAAK,KAAK,WAAWD,EAAKC,EAAKC,CAAK,EAC7D,OAAID,IAAQO,EACH,KAAK,gBAAgBR,EAAKC,EAAKC,CAAK,EAEtC,GAIT,GAAIA,EAAM,gBAAgBJ,EAAOC,EAAOC,EAAKC,CAAG,EAC9C,OAAAC,EAAM,wBAAwBJ,EAAOC,EAAOC,EAAKC,CAAG,EAC7C,EACT,CAGF,OACEM,IAAc,GACdD,IAAc,GACdP,IAAUM,GACV,CAACH,EAAM,SAASF,EAAKC,CAAG,GACxB,CAACC,EAAM,SAASJ,EAAOC,EAAQI,CAAS,GAExCD,EAAM,sBAAsBJ,EAAOC,EAAOC,EAAKC,EAAK,IAAI,EACxD,KAAK,SAAW,GACT,IAGF,EAAA,CAGT,gBAAgBD,EAAaC,EAAaC,EAAgC,CACxE,YAAK,KAAOF,EACZ,KAAK,KAAOC,EACZ,KAAK,OAASC,EACP,EAAA,CAEX"}