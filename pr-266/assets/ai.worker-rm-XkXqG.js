async function g(u,e){switch(u){case c.PAWN:const{Pawn:t}=await Promise.resolve().then(function(){return j});return new t(e);case c.ROOK:const{Rook:s}=await import("./rook-BZ8gR7aG.js");return new s(e);case c.KNIGHT:const{Knight:i}=await import("./knight-wRWKwIkY.js");return new i(e);case c.BISHOP:const{Bishop:n}=await import("./bishop-DHQf39av.js");return new n(e);case c.QUEEN:const{Queen:r}=await import("./queen-mU0x8tj6.js");return new r(e);case c.KING:const{King:l}=await import("./king-BZUUwA5G.js");return new l(e);default:throw new Error(`Type de pièce inconnu : ${u}`)}}var h=(u=>(u.WHITE="white",u.BLACK="black",u))(h||{}),c=(u=>(u.PAWN="pawn",u.ROOK="rook",u.KNIGHT="knight",u.BISHOP="bishop",u.QUEEN="queen",u.KING="king",u))(c||{});class k{constructor(e,t){this.color=e,this.type=t}hasMoved=!1;isPathClear(e,t,s,i,n){const r=Math.sign(s-e),l=Math.sign(i-t);let o=e+r,a=t+l;for(;o!==s||a!==i;){if(n.getPiece(o,a)!==null)return!1;o+=r,a+=l}return!0}static isKing(e){return e.type==="king"}canCapture(e,t,s){const i=s.getPiece(e,t);return!i||i.color!==this.color}toData(){return{color:this.color,type:this.type}}static async fromData(e){return await g(e.type,e.color)}isThreatenedMove(e,t,s,i){const n=Math.abs(s-e),r=Math.abs(i-t);return n<=1&&r<=1}}let W=[],N=[];function A(u,e){switch(u){case c.PAWN:return e===h.WHITE?"♙":"♟";case c.ROOK:return e===h.WHITE?"♖":"♜";case c.KNIGHT:return e===h.WHITE?"♘":"♞";case c.BISHOP:return e===h.WHITE?"♗":"♝";case c.QUEEN:return e===h.WHITE?"♕":"♛";case c.KING:return e===h.WHITE?"♔":"♚";default:return""}}function H(u,e){const t=A(u,e);e===h.WHITE?W.push(t):N.push(t),B()}function B(){const u=document.getElementById("capturedWhite"),e=document.getElementById("capturedBlack");u&&(u.textContent=W.join(" ")),e&&(e.textContent=N.join(" "))}class w{grid;enPassantTarget=null;halfMoveCount=0;currentPlayer=h.WHITE;flipBoard=!1;constructor(){this.grid=Array(8).fill(null).map(()=>Array(8).fill(null))}async init(){this.grid=await this.initializeBoard()}setFlipBoard(e){this.flipBoard=e}async initializeBoard(){const e=Array(8).fill(null).map(()=>Array(8).fill(null));return e[0]=[await g(c.ROOK,h.BLACK),await g(c.KNIGHT,h.BLACK),await g(c.BISHOP,h.BLACK),await g(c.QUEEN,h.BLACK),await g(c.KING,h.BLACK),await g(c.BISHOP,h.BLACK),await g(c.KNIGHT,h.BLACK),await g(c.ROOK,h.BLACK)],e[1]=await Promise.all(Array(8).fill(null).map(()=>g(c.PAWN,h.BLACK))),e[7]=[await g(c.ROOK,h.WHITE),await g(c.KNIGHT,h.WHITE),await g(c.BISHOP,h.WHITE),await g(c.QUEEN,h.WHITE),await g(c.KING,h.WHITE),await g(c.BISHOP,h.WHITE),await g(c.KNIGHT,h.WHITE),await g(c.ROOK,h.WHITE)],e[6]=await Promise.all(Array(8).fill(null).map(()=>g(c.PAWN,h.WHITE))),e}isWithinBounds(e,t){return e>=0&&e<8&&t>=0&&t<8}getPiece(e,t){return this.grid[t][e]}getValidMoves(e,t){let s=null;if(this.isWithinBounds(e,t)&&(s=this.getPiece(e,t)),!s)return[];const i=[];for(let n=0;n<8;n++)for(let r=0;r<8;r++)s.isValidMove(e,t,r,n,this)&&i.push({x:r,y:n});return i}captureEnPassantIfValid(e,t,s,i){if(this.isEnPassantMove(e,t,s,i)){const n=this.getPiece(e,t);if(!n)return;const r=i+(n.color===h.WHITE?-1:1);this.grid[r][s]&&(this.grid[r][s]=null)}}getKingInCheck(){return this.isKingInCheck(h.WHITE)?this.findKing(h.WHITE):this.isKingInCheck(h.BLACK)?this.findKing(h.BLACK):null}movePiece(e,t,s,i,n=!0){if(!this.isWithinBounds(e,t)||!this.isWithinBounds(s,i)||["__proto__","constructor","prototype"].includes(t.toString())||["__proto__","constructor","prototype"].includes(i.toString()))return!1;const r=this.getPiece(e,t);if(r&&r.isValidMove(e,t,s,i,this)){const l=this.getPiece(s,i);if(l&&l.type===c.KING)return!1;if(r.type===c.KING&&Math.abs(s-e)===2)return this.isCastlingValid(r,e,t,s)?(this.handleCastling(s,t),r.hasMoved=!0,!0):!1;if(r?.type===c.PAWN&&this.isEnPassantMove(e,t,s,i)&&this.captureEnPassant(e,t,s,i),this.grid[i][s]=r,this.grid[t][e]=null,n||(r.hasMoved=!0),this.isKingInCheck(r.color))return this.grid[t][e]=r,this.grid[i][s]=l,!1;(r.type===c.KING||r.type===c.ROOK)&&(r.hasMoved=!0),this.updateEnPassantTarget(e,t,s,i,r),this.halfMoveCount=r.type===c.PAWN||l?0:this.halfMoveCount+1;const o=r.color===h.WHITE?h.BLACK:h.WHITE;return this.isCheckmate(o),!0}return!1}isCastlingValid(e,t,s,i){const n=i>t?1:-1,r=i>t?7:0,l=this.getPiece(r,s);if(l?.type!==c.ROOK||l.hasMoved||e.hasMoved)return!1;for(let o=t+n;o!==i+n;o+=n)if(this.getPiece(o,s)||this.isSquareUnderAttack(o,s,e.color))return!1;return!0}handleCastling(e,t){if(e===6){const s=this.getPiece(7,t),i=this.getPiece(4,t);s?.type===c.ROOK&&!s.hasMoved&&i?.type===c.KING&&!i.hasMoved&&(this.setPiece(5,t,s),this.setPiece(7,t,null),this.setPiece(6,t,i),this.setPiece(4,t,null),i.hasMoved=!0,s.hasMoved=!0)}else if(e===2){const s=this.getPiece(0,t),i=this.getPiece(4,t);s?.type===c.ROOK&&!s.hasMoved&&i?.type===c.KING&&!i.hasMoved&&(this.setPiece(3,t,s),this.setPiece(0,t,null),this.setPiece(2,t,i),this.setPiece(4,t,null),i.hasMoved=!0,s.hasMoved=!0)}}updateEnPassantTarget(e,t,s,i,n){n?.type===c.PAWN&&Math.abs(i-t)===2&&e===s?this.enPassantTarget={x:s,y:(t+i)/2}:this.enPassantTarget=null}captureEnPassant(e,t,s,i){const n=this.getPiece(e,t);if(this.isEnPassantMove(e,t,s,i)&&n?.type===c.PAWN){const r=n.color===h.WHITE?-1:1,l=i+r,o=this.getPiece(s,l);if(o&&o.type===c.PAWN){this.grid[l][s]=null;const a={capturedWhite:[],capturedBlack:[]};return o.color===h.WHITE?a.capturedWhite.push(o.type):a.capturedBlack.push(o.type),H(o.type,o.color),a}}return null}isEnPassantMove(e,t,s,i){return this.enPassantTarget?this.getPiece(e,t)?.type===c.PAWN&&s===this.enPassantTarget.x&&i===this.enPassantTarget.y&&Math.abs(e-s)===1&&Math.abs(t-i)===1:!1}async promotePawn(e,t,s){const i=this.getPiece(e,t)?.color;if(i)switch(s){case"queen":this.grid[t][e]=await g(c.QUEEN,i);break;case"rook":this.grid[t][e]=await g(c.ROOK,i);break;case"bishop":this.grid[t][e]=await g(c.BISHOP,i);break;case"knight":this.grid[t][e]=await g(c.KNIGHT,i);break}}isKingInCheck(e){const t=this.findKing(e);if(!t)return!1;for(let s=0;s<8;s++)for(let i=0;i<8;i++){const n=this.getPiece(i,s);if(n&&n.color!==e&&n.isValidMove(i,s,t.x,t.y,this))return!0}return!1}isCheckmate(e){if(!this.isKingInCheck(e))return!1;for(let s=0;s<8;s++)for(let i=0;i<8;i++){const n=this.getPiece(i,s);if(n&&n.color===e){const r=this.getValidMoves(i,s);for(const l of r){const o=this.getPiece(l.x,l.y);this.grid[l.y][l.x]=n,this.grid[s][i]=null;const a=!this.isKingInCheck(e);if(this.grid[s][i]=n,this.grid[l.y][l.x]=o,a)return!1}}}return!0}isStalemate(e){if(this.isKingInCheck(e))return!1;for(let t=0;t<8;t++)for(let s=0;s<8;s++){const i=this.getPiece(s,t);if(i&&i.color===e){for(let n=0;n<8;n++)for(let r=0;r<8;r++)if(i.isValidMove(s,t,r,n,this)){const l=this.getPiece(r,n);this.grid[n][r]=i,this.grid[t][s]=null;const o=!this.isKingInCheck(e);if(this.grid[t][s]=i,this.grid[n][r]=l,o)return!1}}}return!0}findKing(e){for(let t=0;t<8;t++)for(let s=0;s<8;s++){const i=this.getPiece(s,t);if(i&&i?.type===c.KING&&i.color===e)return{x:s,y:t}}return null}isKing(e,t){return this.getPiece(e,t)?.type===c.KING}isSquareUnderAttack(e,t,s){for(let i=0;i<8;i++)for(let n=0;n<8;n++){const r=this.getPiece(n,i);if(r&&r.color!==s){if(r.type===c.KING){if(r.isThreatenedMove(n,i,e,t))return!0}else if(r.isValidMove(n,i,e,t,this))return!0}}return!1}isInsufficientMaterial(){const e=this.grid.flat().filter(t=>t!==null);return e.length<=2?!0:e.length===3&&e.some(t=>t?.type===c.BISHOP||t?.type===c.KNIGHT)}isFiftyMoveRule(){return this.halfMoveCount>=50}setPiece(e,t,s){this.grid[t][e]=s}isMoveValid(e,t,s,i){const n=this.getPiece(e,t);if(!n||s<0||s>=8||i<0||i>=8||!n.isValidMove(e,t,s,i,this))return!1;const r=this.getPiece(s,i);return!(r&&r.color===n.color)}isCapture(e,t,s,i){const n=this.isWithinBounds(e,t)?this.getPiece(e,t):null,r=this.isWithinBounds(s,i)?this.getPiece(s,i):null;return n!==null&&r!==null&&n.color!==r.color}static async fromData(e){const t=new w;return await t.init(),t.grid=await Promise.all(e.grid.map(async s=>Promise.all(s.map(async i=>i?await k.fromData(i):null)))),t}toData(){return{grid:this.grid.map(e=>e.map(t=>t?t.toData():null))}}isAdjacentToAnotherKing(e,t,s){const i=[{dx:-1,dy:-1},{dx:-1,dy:0},{dx:-1,dy:1},{dx:0,dy:-1},{dx:0,dy:1},{dx:1,dy:-1},{dx:1,dy:0},{dx:1,dy:1}];for(const{dx:n,dy:r}of i){const l=e+n,o=t+r,a=this.isWithinBounds(l,o)?this.getPiece(l,o):null;if(a?.type===c.KING&&a.color!==s)return!0}return!1}getPieceCount(){return this.grid.flat().filter(e=>e!==null).length}setPlayerColor(e){this.currentPlayer=e}getPlayerColor(){return this.currentPlayer}getCurrentMovesHash(){let e="";for(let t=0;t<8;t++){let s=0;for(let i=0;i<8;i++){const n=this.getPiece(i,t);if(n){s>0&&(e+=s.toString(),s=0);const r=this.getPieceSymbol(n);e+=r}else s++}s>0&&(e+=s.toString()),t<7&&(e+="/")}return e+=` ${this.currentPlayer===h.WHITE?"w":"b"}`,e}getPieceSymbol(e){const t={[c.PAWN]:"p",[c.ROOK]:"r",[c.KNIGHT]:"n",[c.BISHOP]:"b",[c.QUEEN]:"q",[c.KING]:"k"};return e.color===h.WHITE?t[e.type].toUpperCase():t[e.type]}toString(){let e="";for(let t=0;t<8;t++)for(let s=0;s<8;s++){const i=this.getPiece(s,t);i?e+=`${i.color[0]}${i.type[0]}`:e+="__"}return e+=this.enPassantTarget?`e${this.enPassantTarget.x}${this.enPassantTarget.y}`:"e--",e+=`h${this.halfMoveCount}`,e+=`p${this.currentPlayer[0]}`,e}}const T={[c.PAWN]:1,[c.KNIGHT]:3,[c.BISHOP]:3.25,[c.ROOK]:5,[c.QUEEN]:9,[c.KING]:0},O={[c.PAWN]:[[0,0,0,0,0,0,0,0],[.5,.5,.5,.5,.5,.5,.5,.5],[.1,.1,.2,.3,.3,.2,.1,.1],[.05,.05,.1,.25,.25,.1,.05,.05],[0,0,0,.2,.2,0,0,0],[.05,-.05,-.1,0,0,-.1,-.05,.05],[.05,.1,.1,-.2,-.2,.1,.1,.05],[0,0,0,0,0,0,0,0]],[c.KNIGHT]:[[-.5,-.4,-.3,-.3,-.3,-.3,-.4,-.5],[-.4,-.2,0,0,0,0,-.2,-.4],[-.3,0,.1,.15,.15,.1,0,-.3],[-.3,.05,.15,.2,.2,.15,.05,-.3],[-.3,0,.15,.2,.2,.15,0,-.3],[-.3,.05,.1,.15,.15,.1,.05,-.3],[-.4,-.2,0,.05,.05,0,-.2,-.4],[-.5,-.4,-.3,-.3,-.3,-.3,-.4,-.5]],[c.BISHOP]:[[-.2,-.1,-.1,-.1,-.1,-.1,-.1,-.2],[-.1,0,0,0,0,0,0,-.1],[-.1,0,.05,.1,.1,.05,0,-.1],[-.1,.05,.05,.1,.1,.05,.05,-.1],[-.1,0,.1,.1,.1,.1,0,-.1],[-.1,.1,.1,.1,.1,.1,.1,-.1],[-.1,.05,0,0,0,0,.05,-.1],[-.2,-.1,-.1,-.1,-.1,-.1,-.1,-.2]],[c.ROOK]:[[0,0,0,0,0,0,0,0],[.05,.1,.1,.1,.1,.1,.1,.05],[-.05,0,0,0,0,0,0,-.05],[-.05,0,0,0,0,0,0,-.05],[-.05,0,0,0,0,0,0,-.05],[-.05,0,0,0,0,0,0,-.05],[-.05,0,0,0,0,0,0,-.05],[0,0,0,.05,.05,0,0,0]],[c.QUEEN]:[[-.2,-.1,-.1,-.05,-.05,-.1,-.1,-.2],[-.1,0,0,0,0,0,0,-.1],[-.1,0,.05,.05,.05,.05,0,-.1],[-.05,0,.05,.05,.05,.05,0,-.05],[0,0,.05,.05,.05,.05,0,-.05],[-.1,.05,.05,.05,.05,.05,0,-.1],[-.1,0,.05,0,0,0,0,-.1],[-.2,-.1,-.1,-.05,-.05,-.1,-.1,-.2]],[c.KING]:[[-.3,-.4,-.4,-.5,-.5,-.4,-.4,-.3],[-.3,-.4,-.4,-.5,-.5,-.4,-.4,-.3],[-.3,-.4,-.4,-.5,-.5,-.4,-.4,-.3],[-.3,-.4,-.4,-.5,-.5,-.4,-.4,-.3],[-.2,-.3,-.3,-.4,-.4,-.3,-.3,-.2],[-.1,-.2,-.2,-.2,-.2,-.2,-.2,-.1],[.2,.2,0,0,0,0,.2,.2],[.2,.3,0,0,0,0,.3,.2]]},S={"3,3":.5,"3,4":.5,"4,3":.5,"4,4":.5,"2,3":.25,"2,4":.25,"3,2":.25,"4,2":.25,"4,5":.25,"3,5":.25,"5,3":.25,"5,4":.25};function D(u,e){const t=u.findKing(e);return t&&u.isSquareUnderAttack(t.x,t.y,e)?-.5:0}function X(u,e,t,s,i,n){const r=O[u];return r?u===c.PAWN&&I(i,e,t,n)>0?0:s?r[7-t][7-e]:r[t][e]:0}function E(u,e,t=!1){let s=0;for(let i=0;i<8;i++)for(let n=0;n<8;n++){const r=u.getPiece(n,i);if(!r)continue;let l=T[r.type];if(l+=X(r.type,n,i,t,u,r.color),r.type===c.PAWN){l+=V(u,n,i,r.color),l+=Y(u,n,i,r.color),l+=R(u,n,i,r.color);const o=S[`${n},${i}`];o&&I(u,n,i,r.color)===0&&(l+=o)}l+=G(u,n,i,r.color),r.type===c.KING&&(l+=x(u,n,i,r.color)),s+=r.color===e?l:-l}return parseFloat(s.toFixed(2))}function G(u,e,t,s){const i=u.findKing(s===h.WHITE?h.BLACK:h.WHITE);if(!i)return 0;const n=Math.abs(i.x-e),r=Math.abs(i.y-t);let l=n<=1&&r<=1||n===0&&r<=2?.5:0;const o=u.getPiece(e,t);return o&&T[o.type]>3&&(e===3||e===4||t===3||t===4)&&(l+=.25),l}function x(u,e,t,s){const i=[[-1,0],[1,0],[0,-1],[0,1],[-1,-1],[1,1],[-1,1],[1,-1]];let n=0;for(const[r,l]of i){const o=e+r,a=t+l;if(!u.isWithinBounds(o,a))continue;const f=u.getPiece(o,a);if(f&&f.color!==s&&(f.type===c.ROOK||f.type===c.QUEEN)){const P=Math.abs(o-e)+Math.abs(a-t);n-=.5/P}}return n}function R(u,e,t,s){const i=e>0&&u.getPiece(e-1,t),n=e<7&&u.getPiece(e+1,t);return i&&i.color===s&&i.type===c.PAWN||n&&n.color===s&&n.type===c.PAWN?.3:0}function Y(u,e,t,s){const i=s===h.WHITE?-1:1;let n=!1;const r=e-1,l=e+1,o=t+i;if(u.isWithinBounds(r,o)){const a=u.getPiece(r,o);a&&a.color===s&&a.type===c.PAWN&&(n=!0)}if(u.isWithinBounds(l,o)){const a=u.getPiece(l,o);a&&a.color===s&&a.type===c.PAWN&&(n=!0)}return n?.5:0}function V(u,e,t,s){const i=q(u,e,t,s)?4.5:0,n=L(u,e,t,s)*.25,r=I(u,e,t,s)*4;return i-n-r}function L(u,e,t,s){for(let i=0;i<8;i++)if(i!==t&&u.getPiece(e,i)?.type===c.PAWN&&u.getPiece(e,i)?.color===s)return .5;return 0}function I(u,e,t,s){const i=e-1>=0?u.getPiece(e-1,t):null,n=e+1<8?u.getPiece(e+1,t):null;return i&&i.type===c.PAWN&&i.color===s||n&&n.type===c.PAWN&&n.color===s?0:1.5}function q(u,e,t,s){const i=s===h.WHITE?1:-1;for(let r=t+i;r>=0&&r<8;r+=i){const l=u.getPiece(e,r);if(l&&l.type===c.PAWN&&l.color!==s)return!1}const n=[e-1,e+1];for(const r of n)if(r>=0&&r<8)for(let l=t+i;l>=0&&l<8;l+=i){const o=u.getPiece(r,l);if(o&&o.type===c.PAWN&&o.color!==s)return!1}return!0}class _{static endgames={kqkEndgame:{moves:[{fromX:7,fromY:1,toX:6,toY:1},{fromX:6,fromY:1,toX:5,toY:1}]},krkEndgame:{moves:[{fromX:7,fromY:0,toX:5,toY:0},{fromX:5,fromY:0,toX:4,toY:0}]},kpEndgame:{moves:[{fromX:6,fromY:5,toX:6,toY:6}]},krkpEndgame:{moves:[{fromX:6,fromY:0,toX:6,toY:1}]},kqkrEndgame:{moves:[{fromX:7,fromY:2,toX:6,toY:2}]},kbkpEndgame:{moves:[{fromX:3,fromY:3,toX:4,toY:2}]},krrkEndgame:{moves:[{fromX:7,fromY:4,toX:5,toY:4}]},kbbkEndgame:{moves:[{fromX:5,fromY:3,toX:3,toY:1}]}};static getEndgameMoves(e){return this.endgames[e]?.moves||null}static isEndgame(e){return!!this.endgames[e]}static suggestNextMove(e,t=0){const s=this.getEndgameMoves(e);return s&&t<s.length?s[t]:null}static validateEndgame(e,t){switch(e){case"kqkEndgame":return t.sort().join("")==="KkQ";case"krkEndgame":return t.sort().join("")==="KkR";default:return!1}}}class z{static openings={"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w":[{fromX:1,fromY:7,toX:3,toY:7,weight:.6},{fromX:6,fromY:7,toX:5,toY:5,weight:.4}],"rnbqkbnr/pppppppp/8/8/8/8/PPP1PPPP/RNBQKBNR w":[{fromX:2,fromY:7,toX:4,toY:7,weight:.5},{fromX:4,fromY:6,toX:4,toY:4,weight:.5}],"rnbqkbnr/pppppp1p/8/8/8/8/PPPP1PPP/RNBQKBNR w":[{fromX:4,fromY:7,toX:4,toY:5,weight:1}],"rnbqkbnr/pppppppp/8/8/8/8/PP1PPPPP/RNBQKBNR w":[{fromX:4,fromY:7,toX:4,toY:5}]};static getOpeningMove(e){const t=this.openings[e];if(t&&t.length>0){const s=t.reduce((n,r)=>n+(r.weight??1),0);let i=Math.random()*s;for(const n of t)if(i-=n.weight??1,i<=0)return n}return null}static addOpeningMove(e,t){this.openings[e]||(this.openings[e]=[]),this.openings[e].push(t)}}class U{gamePatterns=new Map;async loadGamesData(){const t=await(await fetch("/chess-game/games.json")).json();this.loadGames(t)}loadGames(e){e.forEach(t=>{const s=t.Moves,i=t.Result;let n="";s.forEach(r=>{this.gamePatterns.has(n)||this.gamePatterns.set(n,[]);const l=this.gamePatterns.get(n),o=i==="1-0"?1:i==="0-1"?0:.5,a=l.find(f=>f.move===r);a?(a.successRate=(a.successRate*a.games+o)/(a.games+1),a.games+=1):l.push({move:r,successRate:o,games:1}),n+=r+" "})})}getBestMove(e){const t=this.gamePatterns.get(e);return!t||t.length===0?null:(t.sort((s,i)=>i.successRate-s.successRate),t[0].move)}}class ${moveData=new Map;maxMovesStored=1e3;recordMove(e,t){const s=this.normalizeKey(e),i=this.moveData.get(s)||[],n=i.find(r=>r.move.fromX===t.fromX&&r.move.fromY===t.fromY&&r.move.toX===t.toX&&r.move.toY===t.toY);n?(n.count++,n.lastUsed=Date.now()):i.push({move:t,count:1,lastUsed:Date.now()}),i.sort((r,l)=>l.count-r.count),i.length>this.maxMovesStored&&i.pop(),this.moveData.set(s,i)}getMovesByFrequency(e){return this.moveData.get(this.normalizeKey(e))||[]}normalizeKey(e){return e.replace(/\s+/g,"")}pruneOldMoves(e){const t=Date.now();for(const[s,i]of this.moveData.entries()){const n=i.filter(r=>t-r.lastUsed<e);n.length>0?this.moveData.set(s,n):this.moveData.delete(s)}}}class Q{constructor(e,t=3e4){this.color=e,this.maxTime=t}killerMoves=new Map;moveHistory=[];gamesAnalyzer=new U;contextualDatabase=new $;gamesLoaded=!1;startTime=0;invalidMoves=new Set;async loadGamesData(){await this.gamesAnalyzer.loadGamesData(),this.gamesLoaded=!0}makeMove(e){if(!this.gamesLoaded)throw new Error("Games data not loaded.");this.startTime=Date.now();const t=z.getOpeningMove(e.getCurrentMovesHash());if(t)return this.finalizeMove(t,e);const s=this.getEndgameMove(e);if(s)return this.finalizeMove(s,e);const i=this.getAnalyzedMove(e);if(i)return this.finalizeMove(i,e);const n=this.iterativeDeepening(e);return n?this.getAllValidMoves(e).some(o=>o.fromX===n.fromX&&o.fromY===n.fromY&&o.toX===n.toX&&o.toY===n.toY)?this.finalizeMove(n,e):(console.warn("⚠️ Coup illégal détecté juste avant exécution."),null):null}finalizeMove(e,t){return this.moveHistory.push(e),this.contextualDatabase.recordMove(t.getCurrentMovesHash(),e),e}getEndgameMove(e){if(e.getPieceCount()<=5){const t=_.getEndgameMoves(e.getCurrentMovesHash());return t?t[0]:null}return null}getAnalyzedMove(e){const t=this.gamesAnalyzer.getBestMove(e.getCurrentMovesHash());return t?this.convertMove(t):null}convertMove(e){const[t,s,i,n]=e.match(/\d+/g).map(Number);return{fromX:t,fromY:s,toX:i,toY:n}}addInvalidMove(e){this.invalidMoves.add(`${e.fromX}${e.fromY}${e.toX}${e.toY}`)}isMoveInvalid(e){return this.invalidMoves.has(`${e.fromX}${e.fromY}${e.toX}${e.toY}`)}iterativeDeepening(e){let t=null,s=-1/0;const i=this.startTime+this.maxTime;let n=this.getAllValidMoves(e);if(n.length===0)return null;const r=n.filter(o=>{const a=e.getPiece(o.toX,o.toY),f=e.getPiece(o.fromX,o.fromY);e.movePiece(o.fromX,o.fromY,o.toX,o.toY);const P=!e.isKingInCheck(this.color);return e.setPiece(o.fromX,o.fromY,f),e.setPiece(o.toX,o.toY,a),P});r.length>0&&(n=r);const l=n.length>25?2:4;n=n.map(o=>{const a=e.getPiece(o.toX,o.toY),f=e.getPiece(o.fromX,o.fromY);e.movePiece(o.fromX,o.fromY,o.toX,o.toY);const P=E(e,this.color);return e.setPiece(o.fromX,o.fromY,f),e.setPiece(o.toX,o.toY,a),{...o,weight:P}}).sort((o,a)=>(a.weight??0)-(o.weight??0));for(let o=1;o<=l&&!(Date.now()>i);o++)for(const a of n){if(Date.now()>i)return t;const f=e.getPiece(a.toX,a.toY),P=e.getPiece(a.fromX,a.fromY);e.movePiece(a.fromX,a.fromY,a.toX,a.toY);const p=-this.minimax(e,o-1,-1/0,1/0,!1);if(e.setPiece(a.fromX,a.fromY,P),e.setPiece(a.toX,a.toY,f),p>s&&(s=p,t=a),s>=1e4)return t}return t}minimax(e,t,s,i,n){const r=Date.now();if(t===0||r-this.startTime>=this.maxTime)return E(e,this.color)+D(e,this.color);const l=this.getAllValidMoves(e);if(l.length===0)return-9999;let o;if(n){o=-1/0;for(const a of l){if(Date.now()-this.startTime>=this.maxTime)break;const f=e.getPiece(a.toX,a.toY),P=e.getPiece(a.fromX,a.fromY);e.movePiece(a.fromX,a.fromY,a.toX,a.toY);const p=-this.minimax(e,t-1,-i,-s,!1);if(e.setPiece(a.fromX,a.fromY,P),e.setPiece(a.toX,a.toY,f),o=Math.max(o,p),s=Math.max(s,o),s>=i){this.killerMoves.set(t,(this.killerMoves.get(t)||[]).slice(0,1).concat(a));break}}}else{o=1/0;for(const a of l){if(Date.now()-this.startTime>=this.maxTime)break;const f=e.getPiece(a.toX,a.toY),P=e.getPiece(a.fromX,a.fromY);e.movePiece(a.fromX,a.fromY,a.toX,a.toY);const p=-this.minimax(e,t-1,-i,-s,!0);if(e.setPiece(a.fromX,a.fromY,P),e.setPiece(a.toX,a.toY,f),o=Math.min(o,p),i=Math.min(i,o),s>=i){this.killerMoves.set(t,(this.killerMoves.get(t)||[]).slice(0,1).concat(a));break}}}return o}getAllValidMoves(e){const t=[];for(let s=0;s<8;s++)for(let i=0;i<8;i++){const n=e.getPiece(i,s);if(n&&n.color===this.color){const r=e.getValidMoves(i,s),l=e.isKingInCheck(this.color);for(const o of r){const{x:a,y:f}=o,P=e.getPiece(a,f),p=e.getPiece(i,s);e.movePiece(i,s,a,f);let d=-1,v=-1;if(p.type==="king")d=a,v=f;else{const y=e.findKing(this.color);if(!y){e.setPiece(i,s,p),e.setPiece(a,f,P);continue}d=y.x,v=y.y}const K=e.isWithinBounds(d,v)&&!e.isSquareUnderAttack(d,v,this.color);e.setPiece(i,s,p),e.setPiece(a,f,P),(!l&&K||l&&K)&&t.push({fromX:i,fromY:s,toX:a,toY:f})}}}return t}}class C extends k{hasMoved=!1;_toX=null;_toY=null;_board=null;constructor(e){super(e,c.PAWN)}isValidMove(e,t,s,i,n){if(s<0||s>=8||i<0||i>=8)return!1;const r=this.color===h.WHITE?-1:1,l=this.color===h.WHITE?6:1,o=(i-t)*r,a=Math.abs(s-e),f=this.color===h.WHITE?0:7;if(a===0&&o===1&&!n.getPiece(s,i))return i===f?this.handlePromotion(s,i,n):!0;if(a===1&&o===1){if(n.getPiece(s,i)&&this.canCapture(s,i,n))return i===f?this.handlePromotion(s,i,n):!0;if(n.isEnPassantMove(e,t,s,i))return n.captureEnPassantIfValid(e,t,s,i),!0}return a===0&&o===2&&t===l&&!n.getPiece(s,i)&&!n.getPiece(e,t+r)?(n.updateEnPassantTarget(e,t,s,i,this),this.hasMoved=!0,!0):!1}handlePromotion(e,t,s){return this._toX=e,this._toY=t,this._board=s,!0}}var j=Object.freeze({__proto__:null,Pawn:C});let M,m;self.onmessage=async u=>{const{boardData:e,aiColor:t,invalidMove:s}=u.data;e&&t&&(M=new Q(t),await M.loadGamesData(),m=await w.fromData(e)),s&&M.addInvalidMove(s);let i=M.makeMove(m),n=null,r=!1;if(i){if(m.isCapture(i.fromX,i.fromY,i.toX,i.toY)){const o=m.getPiece(i.toX,i.toY);o&&(n={capturedWhite:[],capturedBlack:[]},o.color===h.WHITE?n.capturedWhite.push(o.type):n.capturedBlack.push(o.type))}const l=m.getPiece(i.fromX,i.fromY);if(l instanceof C){const o=t===h.WHITE?7:0;i.toY===o&&(r=l.handlePromotion(i.toX,i.toY,m))}}self.postMessage({bestMove:i,captureData:n,promotionRequired:r})};export{k as P,c as a,g as c};
//# sourceMappingURL=ai.worker-rm-XkXqG.js.map
