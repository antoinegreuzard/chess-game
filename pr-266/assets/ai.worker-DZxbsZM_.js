async function f(l,e){switch(l){case a.PAWN:const{Pawn:t}=await Promise.resolve().then(function(){return U});return new t(e);case a.ROOK:const{Rook:s}=await import("./rook-BjR4Bm2P.js");return new s(e);case a.KNIGHT:const{Knight:i}=await import("./knight-DmOEE3eo.js");return new i(e);case a.BISHOP:const{Bishop:n}=await import("./bishop-DPRAo95F.js");return new n(e);case a.QUEEN:const{Queen:r}=await import("./queen-CRFTEcfH.js");return new r(e);case a.KING:const{King:o}=await import("./king-BivHkk7f.js");return new o(e);default:throw new Error(`Type de pièce inconnu : ${l}`)}}var u=(l=>(l.WHITE="white",l.BLACK="black",l))(u||{}),a=(l=>(l.PAWN="pawn",l.ROOK="rook",l.KNIGHT="knight",l.BISHOP="bishop",l.QUEEN="queen",l.KING="king",l))(a||{});class v{constructor(e,t){this.color=e,this.type=t}hasMoved=!1;isPathClear(e,t,s,i,n){const r=Math.sign(s-e),o=Math.sign(i-t);let c=e+r,h=t+o;for(;c!==s||h!==i;){if(n.getPiece(c,h)!==null)return!1;c+=r,h+=o}return!0}static isKing(e){return e.type==="king"}canCapture(e,t,s){const i=s.getPiece(e,t);return!i||i.color!==this.color}toData(){return{color:this.color,type:this.type}}static async fromData(e){return await f(e.type,e.color)}isThreatenedMove(e,t,s,i){const n=Math.abs(s-e),r=Math.abs(i-t);return n<=1&&r<=1}}let M=[],y=[];function K(l,e){switch(l){case a.PAWN:return e===u.WHITE?"♙":"♟";case a.ROOK:return e===u.WHITE?"♖":"♜";case a.KNIGHT:return e===u.WHITE?"♘":"♞";case a.BISHOP:return e===u.WHITE?"♗":"♝";case a.QUEEN:return e===u.WHITE?"♕":"♛";case a.KING:return e===u.WHITE?"♔":"♚";default:return""}}function E(l,e){const t=K(l,e);e===u.WHITE?M.push(t):y.push(t),W()}function W(){const l=document.getElementById("capturedWhite"),e=document.getElementById("capturedBlack");l&&(l.textContent=M.join(" ")),e&&(e.textContent=y.join(" "))}class d{grid;enPassantTarget=null;halfMoveCount=0;currentPlayer=u.WHITE;constructor(){this.grid=Array(8).fill(null).map(()=>Array(8).fill(null))}async init(){this.grid=await this.initializeBoard()}async initializeBoard(){const e=Array(8).fill(null).map(()=>Array(8).fill(null));return e[0]=[await f(a.ROOK,u.WHITE),await f(a.KNIGHT,u.WHITE),await f(a.BISHOP,u.WHITE),await f(a.QUEEN,u.WHITE),await f(a.KING,u.WHITE),await f(a.BISHOP,u.WHITE),await f(a.KNIGHT,u.WHITE),await f(a.ROOK,u.WHITE)],e[1]=await Promise.all(Array(8).fill(null).map(()=>f(a.PAWN,u.WHITE))),e[7]=[await f(a.ROOK,u.BLACK),await f(a.KNIGHT,u.BLACK),await f(a.BISHOP,u.BLACK),await f(a.QUEEN,u.BLACK),await f(a.KING,u.BLACK),await f(a.BISHOP,u.BLACK),await f(a.KNIGHT,u.BLACK),await f(a.ROOK,u.BLACK)],e[6]=await Promise.all(Array(8).fill(null).map(()=>f(a.PAWN,u.BLACK))),e}isWithinBounds(e,t){return e>=0&&e<8&&t>=0&&t<8}getPiece(e,t){return this.grid[t][e]}getValidMoves(e,t){let s=null;if(this.isWithinBounds(e,t)&&(s=this.getPiece(e,t)),!s)return[];const i=[];for(let n=0;n<8;n++)for(let r=0;r<8;r++)s.isValidMove(e,t,r,n,this)&&i.push({x:r,y:n});return i}captureEnPassantIfValid(e,t,s,i){if(this.isEnPassantMove(e,t,s,i)){const n=this.getPiece(e,t);if(!n)return;const r=i+(n.color===u.WHITE?-1:1);this.grid[r][s]&&(this.grid[r][s]=null)}}getKingInCheck(){return this.isKingInCheck(u.WHITE)?this.findKing(u.WHITE):this.isKingInCheck(u.BLACK)?this.findKing(u.BLACK):null}movePiece(e,t,s,i,n=!0){if(!this.isWithinBounds(e,t)||!this.isWithinBounds(s,i)||["__proto__","constructor","prototype"].includes(t.toString())||["__proto__","constructor","prototype"].includes(i.toString()))return!1;const r=this.getPiece(e,t);if(r&&r.isValidMove(e,t,s,i,this)){const o=this.getPiece(s,i);if(o&&o.type===a.KING)return!1;if(r.type===a.KING&&Math.abs(s-e)===2)return this.isCastlingValid(r,e,t,s)?(this.handleCastling(s,t),r.hasMoved=!0,!0):!1;if(r?.type===a.PAWN&&this.isEnPassantMove(e,t,s,i)&&this.captureEnPassant(e,t,s,i),this.grid[i][s]=r,this.grid[t][e]=null,n||(r.hasMoved=!0),this.isKingInCheck(r.color))return this.grid[t][e]=r,this.grid[i][s]=o,!1;(r.type===a.KING||r.type===a.ROOK)&&(r.hasMoved=!0),this.updateEnPassantTarget(e,t,s,i,r),this.halfMoveCount=r.type===a.PAWN||o?0:this.halfMoveCount+1;const c=r.color===u.WHITE?u.BLACK:u.WHITE;return this.isCheckmate(c),!0}return!1}isCastlingValid(e,t,s,i){const n=i>t?1:-1,r=i>t?7:0,o=this.getPiece(r,s);if(o?.type!==a.ROOK||o.hasMoved||e.hasMoved)return!1;for(let c=t+n;c!==i+n;c+=n)if(this.getPiece(c,s)||this.isSquareUnderAttack(c,s,e.color))return!1;return!0}handleCastling(e,t){if(e===6){const s=this.getPiece(7,t),i=this.getPiece(4,t);s?.type===a.ROOK&&!s.hasMoved&&i?.type===a.KING&&!i.hasMoved&&(this.setPiece(5,t,s),this.setPiece(7,t,null),this.setPiece(6,t,i),this.setPiece(4,t,null),i.hasMoved=!0,s.hasMoved=!0)}else if(e===2){const s=this.getPiece(0,t),i=this.getPiece(4,t);s?.type===a.ROOK&&!s.hasMoved&&i?.type===a.KING&&!i.hasMoved&&(this.setPiece(3,t,s),this.setPiece(0,t,null),this.setPiece(2,t,i),this.setPiece(4,t,null),i.hasMoved=!0,s.hasMoved=!0)}}updateEnPassantTarget(e,t,s,i,n){n?.type===a.PAWN&&Math.abs(i-t)===2&&e===s?this.enPassantTarget={x:s,y:(t+i)/2}:this.enPassantTarget=null}captureEnPassant(e,t,s,i){const n=this.getPiece(e,t);if(this.isEnPassantMove(e,t,s,i)&&n?.type===a.PAWN){const r=n.color===u.WHITE?-1:1,o=i+r,c=this.getPiece(s,o);if(c&&c.type===a.PAWN){this.grid[o][s]=null;const h={capturedWhite:[],capturedBlack:[]};return c.color===u.WHITE?h.capturedWhite.push(c.type):h.capturedBlack.push(c.type),E(c.type,c.color),h}}return null}isEnPassantMove(e,t,s,i){return this.enPassantTarget?this.getPiece(e,t)?.type===a.PAWN&&s===this.enPassantTarget.x&&i===this.enPassantTarget.y&&Math.abs(e-s)===1&&Math.abs(t-i)===1:!1}async promotePawn(e,t,s){const i=this.getPiece(e,t)?.color;if(i)switch(s){case"queen":this.grid[t][e]=await f(a.QUEEN,i);break;case"rook":this.grid[t][e]=await f(a.ROOK,i);break;case"bishop":this.grid[t][e]=await f(a.BISHOP,i);break;case"knight":this.grid[t][e]=await f(a.KNIGHT,i);break}}isKingInCheck(e){const t=this.findKing(e);if(!t)return!1;for(let s=0;s<8;s++)for(let i=0;i<8;i++){const n=this.getPiece(i,s);if(n&&n.color!==e&&n.isValidMove(i,s,t.x,t.y,this))return!0}return!1}isCheckmate(e){if(!this.isKingInCheck(e))return!1;for(let s=0;s<8;s++)for(let i=0;i<8;i++){const n=this.getPiece(i,s);if(n&&n.color===e){const r=this.getValidMoves(i,s);for(const o of r){const c=this.getPiece(o.x,o.y);this.grid[o.y][o.x]=n,this.grid[s][i]=null;const h=!this.isKingInCheck(e);if(this.grid[s][i]=n,this.grid[o.y][o.x]=c,h)return!1}}}return!0}isStalemate(e){if(this.isKingInCheck(e))return!1;for(let t=0;t<8;t++)for(let s=0;s<8;s++){const i=this.getPiece(s,t);if(i&&i.color===e){for(let n=0;n<8;n++)for(let r=0;r<8;r++)if(i.isValidMove(s,t,r,n,this)){const o=this.getPiece(r,n);this.grid[n][r]=i,this.grid[t][s]=null;const c=!this.isKingInCheck(e);if(this.grid[t][s]=i,this.grid[n][r]=o,c)return!1}}}return!0}findKing(e){for(let t=0;t<8;t++)for(let s=0;s<8;s++){const i=this.getPiece(s,t);if(i&&i?.type===a.KING&&i.color===e)return{x:s,y:t}}return null}isKing(e,t){return this.getPiece(e,t)?.type===a.KING}isSquareUnderAttack(e,t,s){for(let i=0;i<8;i++)for(let n=0;n<8;n++){const r=this.getPiece(n,i);if(r&&r.color!==s){if(r.type===a.KING){if(r.isThreatenedMove(n,i,e,t))return!0}else if(r.isValidMove(n,i,e,t,this))return!0}}return!1}isInsufficientMaterial(){const e=this.grid.flat().filter(t=>t!==null);return e.length<=2?!0:e.length===3&&e.some(t=>t?.type===a.BISHOP||t?.type===a.KNIGHT)}isFiftyMoveRule(){return this.halfMoveCount>=50}setPiece(e,t,s){this.grid[t][e]=s}isMoveValid(e,t,s,i){const n=this.getPiece(e,t);if(!n||s<0||s>=8||i<0||i>=8||!n.isValidMove(e,t,s,i,this))return!1;const r=this.getPiece(s,i);return!(r&&r.color===n.color)}isCapture(e,t,s,i){const n=this.isWithinBounds(e,t)?this.getPiece(e,t):null,r=this.isWithinBounds(s,i)?this.getPiece(s,i):null;return n!==null&&r!==null&&n.color!==r.color}static async fromData(e){const t=new d;return await t.init(),t.grid=await Promise.all(e.grid.map(async s=>Promise.all(s.map(async i=>i?await v.fromData(i):null)))),t}toData(){return{grid:this.grid.map(e=>e.map(t=>t?t.toData():null))}}isAdjacentToAnotherKing(e,t,s){const i=[{dx:-1,dy:-1},{dx:-1,dy:0},{dx:-1,dy:1},{dx:0,dy:-1},{dx:0,dy:1},{dx:1,dy:-1},{dx:1,dy:0},{dx:1,dy:1}];for(const{dx:n,dy:r}of i){const o=e+n,c=t+r,h=this.isWithinBounds(o,c)?this.getPiece(o,c):null;if(h?.type===a.KING&&h.color!==s)return!0}return!1}getPieceCount(){return this.grid.flat().filter(e=>e!==null).length}setPlayerColor(e){this.currentPlayer=e}getPlayerColor(){return this.currentPlayer}getCurrentMovesHash(){let e="";for(let t=0;t<8;t++){let s=0;for(let i=0;i<8;i++){const n=this.getPiece(i,t);if(n){s>0&&(e+=s.toString(),s=0);const r=this.getPieceSymbol(n);e+=r}else s++}s>0&&(e+=s.toString()),t<7&&(e+="/")}return e+=` ${this.currentPlayer===u.WHITE?"w":"b"}`,e}getPieceSymbol(e){const t={[a.PAWN]:"p",[a.ROOK]:"r",[a.KNIGHT]:"n",[a.BISHOP]:"b",[a.QUEEN]:"q",[a.KING]:"k"};return e.color===u.WHITE?t[e.type].toUpperCase():t[e.type]}toString(){let e="";for(let t=0;t<8;t++)for(let s=0;s<8;s++){const i=this.getPiece(s,t);i?e+=`${i.color[0]}${i.type[0]}`:e+="__"}return e+=this.enPassantTarget?`e${this.enPassantTarget.x}${this.enPassantTarget.y}`:"e--",e+=`h${this.halfMoveCount}`,e+=`p${this.currentPlayer[0]}`,e}}const I={[a.PAWN]:1,[a.KNIGHT]:3,[a.BISHOP]:3.25,[a.ROOK]:5,[a.QUEEN]:9,[a.KING]:0},N={[a.PAWN]:[[0,0,0,0,0,0,0,0],[.5,.5,.5,.5,.5,.5,.5,.5],[.1,.1,.2,.3,.3,.2,.1,.1],[.05,.05,.1,.25,.25,.1,.05,.05],[0,0,0,.2,.2,0,0,0],[.05,-.05,-.1,0,0,-.1,-.05,.05],[.05,.1,.1,-.2,-.2,.1,.1,.05],[0,0,0,0,0,0,0,0]],[a.KNIGHT]:[[-.5,-.4,-.3,-.3,-.3,-.3,-.4,-.5],[-.4,-.2,0,0,0,0,-.2,-.4],[-.3,0,.1,.15,.15,.1,0,-.3],[-.3,.05,.15,.2,.2,.15,.05,-.3],[-.3,0,.15,.2,.2,.15,0,-.3],[-.3,.05,.1,.15,.15,.1,.05,-.3],[-.4,-.2,0,.05,.05,0,-.2,-.4],[-.5,-.4,-.3,-.3,-.3,-.3,-.4,-.5]],[a.BISHOP]:[[-.2,-.1,-.1,-.1,-.1,-.1,-.1,-.2],[-.1,0,0,0,0,0,0,-.1],[-.1,0,.05,.1,.1,.05,0,-.1],[-.1,.05,.05,.1,.1,.05,.05,-.1],[-.1,0,.1,.1,.1,.1,0,-.1],[-.1,.1,.1,.1,.1,.1,.1,-.1],[-.1,.05,0,0,0,0,.05,-.1],[-.2,-.1,-.1,-.1,-.1,-.1,-.1,-.2]],[a.ROOK]:[[0,0,0,0,0,0,0,0],[.05,.1,.1,.1,.1,.1,.1,.05],[-.05,0,0,0,0,0,0,-.05],[-.05,0,0,0,0,0,0,-.05],[-.05,0,0,0,0,0,0,-.05],[-.05,0,0,0,0,0,0,-.05],[-.05,0,0,0,0,0,0,-.05],[0,0,0,.05,.05,0,0,0]],[a.QUEEN]:[[-.2,-.1,-.1,-.05,-.05,-.1,-.1,-.2],[-.1,0,0,0,0,0,0,-.1],[-.1,0,.05,.05,.05,.05,0,-.1],[-.05,0,.05,.05,.05,.05,0,-.05],[0,0,.05,.05,.05,.05,0,-.05],[-.1,.05,.05,.05,.05,.05,0,-.1],[-.1,0,.05,0,0,0,0,-.1],[-.2,-.1,-.1,-.05,-.05,-.1,-.1,-.2]],[a.KING]:[[-.3,-.4,-.4,-.5,-.5,-.4,-.4,-.3],[-.3,-.4,-.4,-.5,-.5,-.4,-.4,-.3],[-.3,-.4,-.4,-.5,-.5,-.4,-.4,-.3],[-.3,-.4,-.4,-.5,-.5,-.4,-.4,-.3],[-.2,-.3,-.3,-.4,-.4,-.3,-.3,-.2],[-.1,-.2,-.2,-.2,-.2,-.2,-.2,-.1],[.2,.2,0,0,0,0,.2,.2],[.2,.3,0,0,0,0,.3,.2]]},T={"3,3":.5,"3,4":.5,"4,3":.5,"4,4":.5,"2,3":.25,"2,4":.25,"3,2":.25,"4,2":.25,"4,5":.25,"3,5":.25,"5,3":.25,"5,4":.25};function H(l,e){const t=l.findKing(e);return t&&l.isSquareUnderAttack(t.x,t.y,e)?-.5:0}function A(l,e,t,s,i,n){const r=N[l];return r?l===a.PAWN&&m(i,e,t,n)>0?0:s?r[7-t][7-e]:r[t][e]:0}function C(l,e,t=!1){let s=0;for(let i=0;i<8;i++)for(let n=0;n<8;n++){const r=l.getPiece(n,i);if(!r)continue;let o=I[r.type];if(o+=A(r.type,n,i,t,l,r.color),r.type===a.PAWN){o+=D(l,n,i,r.color),o+=S(l,n,i,r.color),o+=O(l,n,i,r.color);const c=T[`${n},${i}`];c&&m(l,n,i,r.color)===0&&(o+=c)}o+=k(l,n,i,r.color),r.type===a.KING&&(o+=B(l,n,i,r.color)),s+=r.color===e?o:-o}return parseFloat(s.toFixed(2))}function k(l,e,t,s){const i=l.findKing(s===u.WHITE?u.BLACK:u.WHITE);if(!i)return 0;const n=Math.abs(i.x-e),r=Math.abs(i.y-t);let o=n<=1&&r<=1||n===0&&r<=2?.5:0;const c=l.getPiece(e,t);return c&&I[c.type]>3&&(e===3||e===4||t===3||t===4)&&(o+=.25),o}function B(l,e,t,s){const i=[[-1,0],[1,0],[0,-1],[0,1],[-1,-1],[1,1],[-1,1],[1,-1]];let n=0;for(const[r,o]of i){const c=e+r,h=t+o;if(!l.isWithinBounds(c,h))continue;const g=l.getPiece(c,h);if(g&&g.color!==s&&(g.type===a.ROOK||g.type===a.QUEEN)){const P=Math.abs(c-e)+Math.abs(h-t);n-=.5/P}}return n}function O(l,e,t,s){const i=e>0&&l.getPiece(e-1,t),n=e<7&&l.getPiece(e+1,t);return i&&i.color===s&&i.type===a.PAWN||n&&n.color===s&&n.type===a.PAWN?.3:0}function S(l,e,t,s){const i=s===u.WHITE?-1:1,n=l.getPiece(e-1,t+i),r=l.getPiece(e+1,t+i);return n&&n.color===s&&n.type===a.PAWN||r&&r.color===s&&r.type===a.PAWN?.5:0}function D(l,e,t,s){const i=R(l,e,t,s)?4.5:0,n=G(l,e,t,s)*.25,r=m(l,e,t,s)*4;return i-n-r}function G(l,e,t,s){for(let i=0;i<8;i++)if(i!==t&&l.getPiece(e,i)?.type===a.PAWN&&l.getPiece(e,i)?.color===s)return .5;return 0}function m(l,e,t,s){const i=e-1>=0?l.getPiece(e-1,t):null,n=e+1<8?l.getPiece(e+1,t):null;return i&&i.type===a.PAWN&&i.color===s||n&&n.type===a.PAWN&&n.color===s?0:1.5}function R(l,e,t,s){const i=s===u.WHITE?1:-1;for(let r=t+i;r>=0&&r<8;r+=i){const o=l.getPiece(e,r);if(o&&o.type===a.PAWN&&o.color!==s)return!1}const n=[e-1,e+1];for(const r of n)if(r>=0&&r<8)for(let o=t+i;o>=0&&o<8;o+=i){const c=l.getPiece(r,o);if(c&&c.type===a.PAWN&&c.color!==s)return!1}return!0}class x{static endgames={kqkEndgame:{moves:[{fromX:7,fromY:1,toX:6,toY:1},{fromX:6,fromY:1,toX:5,toY:1}]},krkEndgame:{moves:[{fromX:7,fromY:0,toX:5,toY:0},{fromX:5,fromY:0,toX:4,toY:0}]}};static getEndgameMoves(e){return this.endgames[e]?.moves||null}static isEndgame(e){return!!this.endgames[e]}static suggestNextMove(e,t=0){const s=this.getEndgameMoves(e);return s&&t<s.length?s[t]:null}static validateEndgame(e,t){switch(e){case"kqkEndgame":return t.sort().join("")==="KkQ";case"krkEndgame":return t.sort().join("")==="KkR";default:return!1}}}class V{static openings={"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w":[{fromX:1,fromY:7,toX:3,toY:7,weight:.6},{fromX:6,fromY:7,toX:5,toY:5,weight:.4}],"rnbqkbnr/pppppppp/8/8/8/8/PPP1PPPP/RNBQKBNR w":[{fromX:2,fromY:7,toX:4,toY:7,weight:.5},{fromX:4,fromY:6,toX:4,toY:4,weight:.5}],"rnbqkbnr/pppppp1p/8/8/8/8/PPPP1PPP/RNBQKBNR w":[{fromX:4,fromY:7,toX:4,toY:5,weight:1}]};static getOpeningMove(e){const t=this.openings[e];if(t&&t.length>0){const s=t.reduce((n,r)=>n+(r.weight??1),0);let i=Math.random()*s;for(const n of t)if(i-=n.weight??1,i<=0)return n}return null}static addOpeningMove(e,t){this.openings[e]||(this.openings[e]=[]),this.openings[e].push(t)}}class _{gamePatterns=new Map;async loadGamesData(){const t=await(await fetch("/chess-game/games.json")).json();this.loadGames(t)}loadGames(e){e.forEach(t=>{const s=t.Moves,i=t.Result;let n="";s.forEach(r=>{this.gamePatterns.has(n)||this.gamePatterns.set(n,[]);const o=this.gamePatterns.get(n),c=i==="1-0"?1:i==="0-1"?0:.5,h=o.find(g=>g.move===r);h?(h.successRate=(h.successRate*h.games+c)/(h.games+1),h.games+=1):o.push({move:r,successRate:c,games:1}),n+=r+" "})})}getBestMove(e){const t=this.gamePatterns.get(e);return!t||t.length===0?null:(t.sort((s,i)=>i.successRate-s.successRate),t[0].move)}}class z{moveData=new Map;maxMovesStored=1e3;recordMove(e,t){const s=this.normalizeKey(e),i=this.moveData.get(s)||[],n=i.find(r=>r.move.fromX===t.fromX&&r.move.fromY===t.fromY&&r.move.toX===t.toX&&r.move.toY===t.toY);n?(n.count++,n.lastUsed=Date.now()):i.push({move:t,count:1,lastUsed:Date.now()}),i.sort((r,o)=>o.count-r.count),i.length>this.maxMovesStored&&i.pop(),this.moveData.set(s,i)}getMovesByFrequency(e){return this.moveData.get(this.normalizeKey(e))||[]}normalizeKey(e){return e.replace(/\s+/g,"")}pruneOldMoves(e){const t=Date.now();for(const[s,i]of this.moveData.entries()){const n=i.filter(r=>t-r.lastUsed<e);n.length>0?this.moveData.set(s,n):this.moveData.delete(s)}}}class L{constructor(e,t=6e4){this.color=e,this.maxTime=t}killerMoves=new Map;moveHistory=[];gamesAnalyzer=new _;contextualDatabase=new z;gamesLoaded=!1;startTime=0;async loadGamesData(){await this.gamesAnalyzer.loadGamesData(),this.gamesLoaded=!0}makeMove(e){if(!this.gamesLoaded)throw new Error("Games data not loaded.");this.startTime=Date.now();const t=V.getOpeningMove(e.getCurrentMovesHash());if(t)return this.finalizeMove(t,e);const s=this.getEndgameMove(e);if(s)return this.finalizeMove(s,e);const i=this.getAnalyzedMove(e);if(i)return this.finalizeMove(i,e);const n=this.iterativeDeepening(e);return n?this.finalizeMove(n,e):null}finalizeMove(e,t){return this.moveHistory.push(e),this.contextualDatabase.recordMove(t.getCurrentMovesHash(),e),e}getEndgameMove(e){if(e.getPieceCount()<=5){const t=x.getEndgameMoves(e.getCurrentMovesHash());return t?t[0]:null}return null}getAnalyzedMove(e){const t=this.gamesAnalyzer.getBestMove(e.getCurrentMovesHash());return t?this.convertMove(t):null}convertMove(e){const[t,s,i,n]=e.match(/\d+/g).map(Number);return{fromX:t,fromY:s,toX:i,toY:n}}iterativeDeepening(e){let t=null,s=-1/0;const i=this.getAllValidMoves(e);for(let n=1;n<=4;n++)for(const r of i){if(Date.now()-this.startTime>this.maxTime)return t;const o=e.getPiece(r.toX,r.toY),c=e.getPiece(r.fromX,r.fromY);e.movePiece(r.fromX,r.fromY,r.toX,r.toY);const h=-this.minimax(e,n-1,-1/0,1/0,!1);if(e.setPiece(r.fromX,r.fromY,c),e.setPiece(r.toX,r.toY,o),h>s&&(s=h,t=r),s>=1e4)return t}return t}minimax(e,t,s,i,n){if(t===0||Date.now()-this.startTime>this.maxTime)return C(e,this.color)+H(e,this.color);const r=this.getAllValidMoves(e);if(n){let o=-1/0;for(const c of r){const h=e.getPiece(c.toX,c.toY),g=e.getPiece(c.fromX,c.fromY);if(e.movePiece(c.fromX,c.fromY,c.toX,c.toY),o=Math.max(o,-this.minimax(e,t-1,-i,-s,!1)),e.setPiece(c.fromX,c.fromY,g),e.setPiece(c.toX,c.toY,h),s=Math.max(s,o),s>=i){this.killerMoves.set(t,(this.killerMoves.get(t)||[]).slice(0,1).concat(c));break}}return o}else{let o=1/0;for(const c of r){const h=e.getPiece(c.toX,c.toY),g=e.getPiece(c.fromX,c.fromY);if(e.movePiece(c.fromX,c.fromY,c.toX,c.toY),o=Math.min(o,-this.minimax(e,t-1,-i,-s,!0)),e.setPiece(c.fromX,c.fromY,g),e.setPiece(c.toX,c.toY,h),i=Math.min(i,o),s>=i){this.killerMoves.set(t,(this.killerMoves.get(t)||[]).slice(0,1).concat(c));break}}return o}}getAllValidMoves(e){const t=[];for(let s=0;s<8;s++)for(let i=0;i<8;i++){const n=e.getPiece(i,s);if(n&&n.color===this.color){const r=e.getValidMoves(i,s);for(const o of r)t.push({fromX:i,fromY:s,toX:o.x,toY:o.y})}}return t}}class w extends v{hasMoved=!1;_toX=null;_toY=null;_board=null;constructor(e){super(e,a.PAWN)}isValidMove(e,t,s,i,n){if(s<0||s>=8||i<0||i>=8)return!1;const r=n.getPlayerColor(),o=this.color===u.WHITE?1:-1,c=this.color===u.WHITE?1:6,h=(i-t)*o,g=Math.abs(s-e),P=r===u.WHITE?7:0;if(g===0&&h===1&&!n.getPiece(s,i))return i===P?this.handlePromotion(s,i,n):!0;if(g===1&&h===1){if(n.getPiece(s,i)&&this.canCapture(s,i,n))return i===P?this.handlePromotion(s,i,n):!0;if(n.isEnPassantMove(e,t,s,i))return n.captureEnPassantIfValid(e,t,s,i),!0}return g===0&&h===2&&t===c&&!n.getPiece(s,i)&&!n.getPiece(e,t+o)?(n.updateEnPassantTarget(e,t,s,i,this),this.hasMoved=!0,!0):!1}handlePromotion(e,t,s){return this._toX=e,this._toY=t,this._board=s,!0}}var U=Object.freeze({__proto__:null,Pawn:w});let p;self.onmessage=async l=>{const{boardData:e,aiColor:t}=l.data;p=new L(t),await p.loadGamesData();const s=await d.fromData(e),i=p.makeMove(s);let n=null;if(i&&s.isCapture(i.fromX,i.fromY,i.toX,i.toY)){const o=s.getPiece(i.toX,i.toY);o&&(n={capturedWhite:[],capturedBlack:[]},o.color===u.WHITE?n.capturedWhite.push(o.type):n.capturedBlack.push(o.type))}let r=!1;if(i&&s.getPiece(i.fromX,i.fromY)?.type===a.PAWN){const o=s.getPiece(i.fromX,i.fromY);if(o instanceof w){const c=t===u.WHITE?7:0;i.toY===c&&(r=o.handlePromotion(i.toX,i.toY,s))}}self.postMessage({bestMove:i,captureData:n,promotionRequired:r})};export{v as P,a,f as c};
//# sourceMappingURL=ai.worker-DZxbsZM_.js.map
